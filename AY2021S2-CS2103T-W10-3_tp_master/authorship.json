[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-3/tp/actions)","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"* This is a sample student Software Engineering for delivery drivers to manage their orders efficiently.\u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  * as a delivery driver for a logistic company looking to better manage their work schedule","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  * as a delivery driver for an F\u0026B shop looking to better manage their food delivery operations","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  ","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"* The project simulates an ongoing software project for a desktop application (called _TimeforWheels_) used for managing delivery orders.","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  * It is **written in Java OOP fashion**. ","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"* It is named `TimeforWheels` since the goal of the app is to help delivey drivers better manage their time.","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"* For the detailed documentation of this project, see the **[TimeforWheels Developer Guide](https://ay2021s2-cs2103t-w10-3.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"* For Users who want to know how to use the app, see the **[TimeforWheels User Guide](https://ay2021s2-cs2103t-w10-3.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":4,"CSjiade":11}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"mainClassName \u003d \u0027seedu.timeforwheels.Main\u0027","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"    archiveName \u003d \u0027timeforwheels.jar\u0027","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"run {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"-":70,"CSjiade":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"You can reach us at the email `jdlian505[at]gmail.com`, `juhaeradittya2000[at]gmail.com`, `galencheung97@gmail.com`","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"### Lian Jiade","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"\u003cimg src\u003d\"images/csjiade.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"[[github](https://github.com/CSjiade)]","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"[[portfolio](team/lianjiade.md)]","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"* Role: Developer","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"* Responsibilities: In charge of UI, Logic, Storage","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"###  Md Juhaer Adittya Pasha","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"\u003cimg src\u003d\"images/pasha-292.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"[[portfolio](team/pasha-292.md)]","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"* Role: Developer","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"* Responsibilities: UI, Logic","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"### Galen Cheung","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"\u003cimg src\u003d\"images/cheunggalen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"[[github](http://github.com/cheunggalen)] [[portfolio]()]","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"* Responsibilities: UI, Logic","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"### Ng Han Poh Jacob","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"\u003cimg src\u003d\"images/jacob-109.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"[[portfolio]()]","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheunggalen":4,"Jacob-109":1,"pasha-292":3,"-":31,"CSjiade":11}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"1. The command execution can affect the `Model` (e.g. adding a customer).","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"Step 2. The user executes `delete 5` command to delete the 5th customer in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"Step 3. The user executes `add n/David …​` to add a new customer. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"Step 4. The user now decides that adding the customer was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"cheunggalen"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the customer being deleted).","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"cheunggalen"},"content":"* Freelance delivery drivers and companies that conduct delivery operations.","lastModifiedDate":"2021-03-21"},{"lineNumber":240,"author":{"gitId":"cheunggalen"},"content":"* Domestic and not international delivery.","lastModifiedDate":"2021-03-21"},{"lineNumber":241,"author":{"gitId":"cheunggalen"},"content":"* Delivery on land (car, motorcycle, bicycle, foot) and not on sea (ships) or in the air (planes).  ","lastModifiedDate":"2021-03-21"},{"lineNumber":242,"author":{"gitId":"cheunggalen"},"content":"* Need to manage many delivery entries and their respective details.","lastModifiedDate":"2021-03-21"},{"lineNumber":243,"author":{"gitId":"cheunggalen"},"content":"* Need to personally manage their own deliveries.  ","lastModifiedDate":"2021-03-21"},{"lineNumber":244,"author":{"gitId":"cheunggalen"},"content":"* Prefers navigating using the keyboard to mouse interactions.","lastModifiedDate":"2021-03-21"},{"lineNumber":245,"author":{"gitId":"cheunggalen"},"content":"* Can type fast.","lastModifiedDate":"2021-03-21"},{"lineNumber":246,"author":{"gitId":"cheunggalen"},"content":"* Has basic experience and knowledge in using CLI apps.","lastModifiedDate":"2021-03-21"},{"lineNumber":247,"author":{"gitId":"cheunggalen"},"content":"* Prefers using desktop app to other types when managing their workflow.","lastModifiedDate":"2021-03-21"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"cheunggalen"},"content":"**Value proposition**: manage delivery workflows and details faster than a typical mouse/GUI driven app for greater efficiency","lastModifiedDate":"2021-03-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"| Priority | As a …​      | I want to …​                                             | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"cheunggalen"},"content":"| -------- | --------------- | ----------------------------------------------------------- | ------------------------------------------------------------------------- |","lastModifiedDate":"2021-03-21"},{"lineNumber":257,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | Delivery driver | Add a delivery entry to the list.                           | Keep track of all the deliveries I am supposed to make.                   |","lastModifiedDate":"2021-03-21"},{"lineNumber":258,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Get the customer’s details of a delivery entry in the list. | Understand the customer of that delivery better.                          |","lastModifiedDate":"2021-03-21"},{"lineNumber":259,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Mark a delivery entry in the list as done.                  | Keep track of which deliveries I have done.                               |","lastModifiedDate":"2021-03-21"},{"lineNumber":260,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | Delivery driver | Delete a delivery entry from the list.                      | Remove completed deliveries or unwanted deliveries I do not want to make. |","lastModifiedDate":"2021-03-21"},{"lineNumber":261,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Clear all delivery entries from the list.                   | Clean or reset my delivery list.                                          |","lastModifiedDate":"2021-03-21"},{"lineNumber":262,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | Delivery driver | Edit a delivery entry in the list.                          | Make necessary changes to the delivery details.                           |","lastModifiedDate":"2021-03-21"},{"lineNumber":263,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | Delivery driver | Exit the app.                                               | Close the app.                                                            |","lastModifiedDate":"2021-03-21"},{"lineNumber":264,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Filter the list by tag.                                     | Get all the deliveries associated with a specific tag.                    |","lastModifiedDate":"2021-03-21"},{"lineNumber":265,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Filter all delivery entries by date.                        | See which deliveries I have to make on that date.                         | ","lastModifiedDate":"2021-03-21"},{"lineNumber":266,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Filter all delivery entries by location.                    | See which deliveries I have to make in that area.                         |","lastModifiedDate":"2021-03-21"},{"lineNumber":267,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | Delivery driver | Find all delivery entries by keyword(s).                    | Get all the deliveries with details containing the keyword(s).            |","lastModifiedDate":"2021-03-21"},{"lineNumber":268,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Get help for issues pertaining to the app.                  | Understand the app’s features and how to use them better.                 |","lastModifiedDate":"2021-03-21"},{"lineNumber":269,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | Delivery driver | Get the list of all my delivery entries.                    | See all the deliveries I have to make and have done.                      |","lastModifiedDate":"2021-03-21"},{"lineNumber":270,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Get the list of all my completed delivery entries.          | See all the deliveries I have done.                                       |","lastModifiedDate":"2021-03-21"},{"lineNumber":271,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Add a tag to a delivery entry in the list.                  | Add information categorising the parcel for that delivery.                |","lastModifiedDate":"2021-03-21"},{"lineNumber":272,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Delete a tag from a delivery entry in the list.             | Delete the information categorising the parcel for that delivery.         |","lastModifiedDate":"2021-03-21"},{"lineNumber":273,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | Delivery driver | Edit a tag of a delivery entry in the list.                 | Edit the information categorising the parcel for that delivery.           |","lastModifiedDate":"2021-03-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC01 - Add a delivery entry to the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":282,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":283,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":284,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":285,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":286,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":287,"author":{"gitId":"cheunggalen"},"content":"* Adding a new delivery entry to the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":288,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":289,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":290,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":291,"author":{"gitId":"cheunggalen"},"content":"1.  User indicates that they will be adding a delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":292,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App requests for details of the delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":293,"author":{"gitId":"cheunggalen"},"content":"3.  User enters the delivery entry to be added to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":294,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App adds the delivery entry to the list and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":295,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":296,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":297,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":298,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":299,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":300,"author":{"gitId":"cheunggalen"},"content":"* 3a. The delivery entry to be added has an invalid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":301,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":302,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new delivery entry details.","lastModifiedDate":"2021-03-08"},{"lineNumber":303,"author":{"gitId":"cheunggalen"},"content":"      ","lastModifiedDate":"2021-03-08"},{"lineNumber":304,"author":{"gitId":"cheunggalen"},"content":"    Steps 3a1-3a2 are repeated until the valid details are entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":305,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":306,"author":{"gitId":"cheunggalen"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":307,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":308,"author":{"gitId":"cheunggalen"},"content":"* 3b. The delivery entry to be added already exists in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":309,"author":{"gitId":"cheunggalen"},"content":"    * 3b1. Delivery App informs the User of the duplicate.","lastModifiedDate":"2021-03-08"},{"lineNumber":310,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":311,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":312,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":313,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":314,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":315,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC02 - Get the customer’s details of a delivery entry in the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":316,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":317,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":318,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":319,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":320,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":321,"author":{"gitId":"cheunggalen"},"content":"* Getting the customer\u0027s details of the selected delivery from the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":322,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":323,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-21"},{"lineNumber":324,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":325,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":326,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-21"},{"lineNumber":327,"author":{"gitId":"cheunggalen"},"content":"3.  User requests to see the customer details of a delivery entry by entering the entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":328,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows the customer details of the chosen delivery entry.","lastModifiedDate":"2021-03-21"},{"lineNumber":329,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":330,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-21"},{"lineNumber":331,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":332,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-21"},{"lineNumber":333,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":334,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-21"},{"lineNumber":335,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-21"},{"lineNumber":336,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":337,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-21"},{"lineNumber":338,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":339,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-21"},{"lineNumber":340,"author":{"gitId":"cheunggalen"},"content":"  * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":341,"author":{"gitId":"cheunggalen"},"content":"  * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":342,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":343,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-21"},{"lineNumber":344,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":345,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-21"},{"lineNumber":346,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":347,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-21"},{"lineNumber":348,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":349,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC03 - Mark a delivery entry in the list as done.**","lastModifiedDate":"2021-03-21"},{"lineNumber":350,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":351,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":352,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":353,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-21"},{"lineNumber":354,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":355,"author":{"gitId":"cheunggalen"},"content":"* Marking the selected delivery entry from the list as done.","lastModifiedDate":"2021-03-21"},{"lineNumber":356,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":357,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":358,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":359,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see the list of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":360,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":361,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to mark as done by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":362,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App marks that delivery entry as done and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":363,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":364,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":365,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":366,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":367,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":368,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":369,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":370,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":371,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":372,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":373,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":374,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":375,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":376,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":377,"author":{"gitId":"cheunggalen"},"content":"    Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":378,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":379,"author":{"gitId":"cheunggalen"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":380,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":381,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":382,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":383,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC04 - Delete a delivery entry from the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":384,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":385,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":386,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":387,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":388,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":389,"author":{"gitId":"cheunggalen"},"content":"* Deleting the selected delivery entry from the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":390,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":391,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":392,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":393,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see the list of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":394,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":395,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to be deleted by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":396,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App removes that delivery entry from the list and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":397,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":398,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":399,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":400,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":401,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":402,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":403,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":404,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":405,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":406,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":407,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":408,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":409,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":410,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":411,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":412,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":413,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":414,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":415,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":416,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":417,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC05 - Clear all delivery entries from the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":418,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":419,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":420,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":421,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":422,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":423,"author":{"gitId":"cheunggalen"},"content":"* Deleting all delivery entries from the list, resulting in an empty list.","lastModifiedDate":"2021-03-21"},{"lineNumber":424,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":425,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":426,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":427,"author":{"gitId":"cheunggalen"},"content":"1.  User indicates to delete all delivery entries from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":428,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App removes all delivery entries from the list and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":429,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":430,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":431,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":432,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":433,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":434,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":435,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that there are no delivery entries to delete.","lastModifiedDate":"2021-03-08"},{"lineNumber":436,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":437,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":438,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":439,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":440,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":441,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC06 - Edit a delivery entry in the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":442,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":443,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":444,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":445,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":446,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":447,"author":{"gitId":"cheunggalen"},"content":"* Editing and updating the selected existing delivery entry in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":448,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":449,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":450,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":451,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see the list of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":452,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":453,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to edit by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":454,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App requests for updated details of the delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":455,"author":{"gitId":"cheunggalen"},"content":"5.  User enters the updated details.","lastModifiedDate":"2021-03-08"},{"lineNumber":456,"author":{"gitId":"cheunggalen"},"content":"6.  Delivery App replaces the old delivery entry with the updated one and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":457,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":458,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":459,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":460,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":461,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":462,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":463,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":464,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":465,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":466,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":467,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":468,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":469,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":470,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":471,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":472,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":473,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":474,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":475,"author":{"gitId":"cheunggalen"},"content":"* 5a. The updated details have an invalid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":476,"author":{"gitId":"cheunggalen"},"content":"    * 5a1. Delivery App requests for a valid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":477,"author":{"gitId":"cheunggalen"},"content":"    * 5a2. User enters new details.","lastModifiedDate":"2021-03-08"},{"lineNumber":478,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":479,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid details are entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":480,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":481,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 6.","lastModifiedDate":"2021-03-08"},{"lineNumber":482,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":483,"author":{"gitId":"cheunggalen"},"content":"* 5b. The edited entry already exists in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":484,"author":{"gitId":"cheunggalen"},"content":"    * 5b1. Delivery App informs the User of the duplicate.","lastModifiedDate":"2021-03-08"},{"lineNumber":485,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":486,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":487,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":488,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":489,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":490,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC07 - Exit the app.**","lastModifiedDate":"2021-03-21"},{"lineNumber":491,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":492,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":493,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":494,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":495,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":496,"author":{"gitId":"cheunggalen"},"content":"* Closing TimeForWheels.","lastModifiedDate":"2021-03-21"},{"lineNumber":497,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":498,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":499,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":500,"author":{"gitId":"cheunggalen"},"content":"1.  User indicates to quit the app.","lastModifiedDate":"2021-03-21"},{"lineNumber":501,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App exits.","lastModifiedDate":"2021-03-21"},{"lineNumber":502,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":503,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":504,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":505,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":506,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":507,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC08 - Filter the list by tag.**","lastModifiedDate":"2021-03-21"},{"lineNumber":508,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":509,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":510,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":511,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":512,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":513,"author":{"gitId":"cheunggalen"},"content":"* Getting the list of deliveries associated with the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":514,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":515,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":516,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":517,"author":{"gitId":"cheunggalen"},"content":"1.  User filters the list by inputting a tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":518,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries associated with the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":519,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":520,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":521,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":522,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":523,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":524,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":525,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":526,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":527,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":528,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":529,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries associated with the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":530,"author":{"gitId":"cheunggalen"},"content":"  * 1b1. Delivery App informs the User that there are no delivery entries associated with the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":531,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":532,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":533,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":534,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":535,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":536,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC09 - Filter all delivery entries by date.**","lastModifiedDate":"2021-03-21"},{"lineNumber":537,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":538,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":539,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":540,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":541,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":542,"author":{"gitId":"cheunggalen"},"content":"* Getting the list of deliveries associated with the specified date.","lastModifiedDate":"2021-03-21"},{"lineNumber":543,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":544,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":545,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":546,"author":{"gitId":"cheunggalen"},"content":"1.  User filters the list by inputting a date.","lastModifiedDate":"2021-03-21"},{"lineNumber":547,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries associated with the specified date.","lastModifiedDate":"2021-03-21"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":549,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":550,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":551,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":552,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":553,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":554,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":555,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":556,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":557,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":558,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries associated with the specified date.","lastModifiedDate":"2021-03-21"},{"lineNumber":559,"author":{"gitId":"cheunggalen"},"content":"  * 1b1. Delivery App informs the User that there are no delivery entries associated with the specified date.","lastModifiedDate":"2021-03-21"},{"lineNumber":560,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":561,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":562,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":563,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":564,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":565,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC10 - Filter all delivery entries by location.**","lastModifiedDate":"2021-03-21"},{"lineNumber":566,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":567,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":568,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":569,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":570,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":571,"author":{"gitId":"cheunggalen"},"content":"* Getting the list of deliveries associated with the specified location.","lastModifiedDate":"2021-03-21"},{"lineNumber":572,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":573,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":574,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":575,"author":{"gitId":"cheunggalen"},"content":"1.  User filters the list by inputting a location.","lastModifiedDate":"2021-03-21"},{"lineNumber":576,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries associated with the specified location.","lastModifiedDate":"2021-03-21"},{"lineNumber":577,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":578,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":579,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":580,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":581,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":582,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":583,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":584,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":585,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":586,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":587,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries associated with the specified location.","lastModifiedDate":"2021-03-21"},{"lineNumber":588,"author":{"gitId":"cheunggalen"},"content":"  * 1b1. Delivery App informs the User that there are no delivery entries associated with the specified location.","lastModifiedDate":"2021-03-21"},{"lineNumber":589,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":590,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":591,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":592,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":593,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":594,"author":{"gitId":"pasha-292"},"content":"**Use case: UC11 - Find all delivery entries by the keyword(s) that match an attribute.**","lastModifiedDate":"2021-04-10"},{"lineNumber":595,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":596,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":597,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":598,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":599,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":600,"author":{"gitId":"pasha-292"},"content":"* Getting the list of existing delivery entries with attributes matching the specified keyword(s).","lastModifiedDate":"2021-04-10"},{"lineNumber":601,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":602,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":603,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":604,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries with the matching keyword(s).","lastModifiedDate":"2021-03-21"},{"lineNumber":605,"author":{"gitId":"pasha-292"},"content":"2.  Delivery App lists out all existing delivery entries with attributes matching the specified keyword(s).","lastModifiedDate":"2021-04-10"},{"lineNumber":606,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":607,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":608,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":609,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":610,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":611,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":612,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":613,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":614,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":615,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":616,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries with the matching keyword(s).","lastModifiedDate":"2021-03-21"},{"lineNumber":617,"author":{"gitId":"cheunggalen"},"content":"  * 1b1. Delivery App informs the User that there are no delivery entries with details containing the specified keyword(s).","lastModifiedDate":"2021-03-21"},{"lineNumber":618,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":619,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":620,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":621,"author":{"gitId":"pasha-292"},"content":"Below is an illustration of the find command sequence diagram","lastModifiedDate":"2021-04-10"},{"lineNumber":622,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":623,"author":{"gitId":"pasha-292"},"content":"![Find Command Sequence Diagram](images/FindCommandSequenceDiagram.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":624,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":625,"author":{"gitId":"pasha-292"},"content":"Below is a further breakdown of the logic component of the find command using a sequence diagram","lastModifiedDate":"2021-04-10"},{"lineNumber":626,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":627,"author":{"gitId":"pasha-292"},"content":"![Find Command Logic Sequence Diagram](images/FindCommandLogicSequenceDiagram.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":628,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":629,"author":{"gitId":"pasha-292"},"content":"Below is an activity diagram to show a more simplified representation of the find command","lastModifiedDate":"2021-04-10"},{"lineNumber":630,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":631,"author":{"gitId":"pasha-292"},"content":"![Find Command Activity Diagram](images/FindCommandActivityDiagram.png)","lastModifiedDate":"2021-04-10"},{"lineNumber":632,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":633,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":634,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":635,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC12 - Get help for issues pertaining to the app.**","lastModifiedDate":"2021-03-21"},{"lineNumber":636,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":637,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":638,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":639,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":640,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":641,"author":{"gitId":"cheunggalen"},"content":"* Getting a link to the TimeForWheels user guide.","lastModifiedDate":"2021-03-21"},{"lineNumber":642,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":643,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":644,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":645,"author":{"gitId":"cheunggalen"},"content":"1.  User requests for help.","lastModifiedDate":"2021-03-21"},{"lineNumber":646,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App provides a link to the app\u0027s user guide.","lastModifiedDate":"2021-03-21"},{"lineNumber":647,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":648,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":649,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":650,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":651,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":652,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC13 - Get the list of all my delivery entries.**","lastModifiedDate":"2021-03-21"},{"lineNumber":653,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":654,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":655,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":656,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":657,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":658,"author":{"gitId":"cheunggalen"},"content":"* Getting the list of all existing delivery entries in list.","lastModifiedDate":"2021-03-21"},{"lineNumber":659,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":660,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":661,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":662,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":663,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":664,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":665,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":666,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":667,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":668,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":669,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":670,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":671,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":672,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":673,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":674,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":675,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":676,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC14 - Get the list of all my completed delivery entries.**","lastModifiedDate":"2021-03-21"},{"lineNumber":677,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":678,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":679,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":680,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":681,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":682,"author":{"gitId":"cheunggalen"},"content":"* Getting the list of all completed delivery entries.","lastModifiedDate":"2021-03-21"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":684,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":686,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all completed delivery entries in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":687,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all delivery entries that are marked as done.","lastModifiedDate":"2021-03-21"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":689,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":691,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":693,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":694,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":695,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":696,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries in the list that are marked as done.","lastModifiedDate":"2021-03-21"},{"lineNumber":697,"author":{"gitId":"cheunggalen"},"content":"    * 1b1. Delivery App informs the User that there are no completed delivery entries in the list.","lastModifiedDate":"2021-03-21"},{"lineNumber":698,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":699,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-21"},{"lineNumber":700,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":701,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":702,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":703,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC15 - Add a tag to a delivery entry in the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":704,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":705,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":706,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":707,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":708,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":709,"author":{"gitId":"cheunggalen"},"content":"* Having the selected delivery entry updated with the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":710,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":711,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":712,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":713,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":714,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":715,"author":{"gitId":"cheunggalen"},"content":"3.  User selects a delivery entry and inputs a tag to add.","lastModifiedDate":"2021-03-21"},{"lineNumber":716,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App adds the specified tag to the selected delivery entry and informs the User.","lastModifiedDate":"2021-03-21"},{"lineNumber":717,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":718,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":719,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":720,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":722,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":723,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":724,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":725,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":726,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":727,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":728,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":729,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":730,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":731,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":732,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":733,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":734,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":735,"author":{"gitId":"cheunggalen"},"content":"* 3b. The selected delivery entry already has the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":736,"author":{"gitId":"cheunggalen"},"content":"  * 3b1. Delivery App informs the User that the selected delivery entry already has the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":737,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":738,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":739,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":740,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":741,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":742,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC16 - Delete a tag from a delivery entry in the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":743,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":744,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":745,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":746,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":747,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":748,"author":{"gitId":"cheunggalen"},"content":"* Having the selected delivery entry updated without the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":749,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":750,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":751,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":752,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":753,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":754,"author":{"gitId":"cheunggalen"},"content":"3.  User selects a delivery entry.","lastModifiedDate":"2021-03-21"},{"lineNumber":755,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows all the tags of the selected delivery entry.","lastModifiedDate":"2021-03-21"},{"lineNumber":756,"author":{"gitId":"cheunggalen"},"content":"5.  User selects a tag to delete.","lastModifiedDate":"2021-03-21"},{"lineNumber":757,"author":{"gitId":"cheunggalen"},"content":"6.  Delivery App removes the selected tag from the delivery entry and informs the User.","lastModifiedDate":"2021-03-21"},{"lineNumber":758,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":759,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":760,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":761,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":762,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":763,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":764,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":765,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":766,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":767,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":768,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":769,"author":{"gitId":"cheunggalen"},"content":"  * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":770,"author":{"gitId":"cheunggalen"},"content":"  * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":771,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":772,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":773,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":774,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":775,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":776,"author":{"gitId":"cheunggalen"},"content":"* 5a. The number of the tag is invalid.","lastModifiedDate":"2021-03-21"},{"lineNumber":777,"author":{"gitId":"cheunggalen"},"content":"  * 5a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":778,"author":{"gitId":"cheunggalen"},"content":"  * 5a2. User enters new entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":779,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":780,"author":{"gitId":"cheunggalen"},"content":"  Steps 5a1-5a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-21"},{"lineNumber":781,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":782,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 6.","lastModifiedDate":"2021-03-21"},{"lineNumber":783,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-21"},{"lineNumber":784,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":785,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":786,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC17 - Edit a tag of a delivery entry in the list.**","lastModifiedDate":"2021-03-21"},{"lineNumber":787,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":788,"author":{"gitId":"cheunggalen"},"content":"**Actor: Delivery driver (app user)**","lastModifiedDate":"2021-03-21"},{"lineNumber":789,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":790,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":791,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":792,"author":{"gitId":"cheunggalen"},"content":"* Having the selected delivery entry updated with the specified tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":793,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":797,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":798,"author":{"gitId":"cheunggalen"},"content":"3.  User selects a delivery entry.","lastModifiedDate":"2021-03-21"},{"lineNumber":799,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows all the tags of the selected delivery entry.","lastModifiedDate":"2021-03-21"},{"lineNumber":800,"author":{"gitId":"cheunggalen"},"content":"5.  User selects a tag to edit and inputs the updated tag.","lastModifiedDate":"2021-03-21"},{"lineNumber":801,"author":{"gitId":"cheunggalen"},"content":"6.  Delivery App updates the selected tag of the delivery entry and informs the User.","lastModifiedDate":"2021-03-21"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":808,"author":{"gitId":"cheunggalen"},"content":"  * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":813,"author":{"gitId":"cheunggalen"},"content":"  * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":814,"author":{"gitId":"cheunggalen"},"content":"  * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":815,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":816,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":817,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":818,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":819,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":820,"author":{"gitId":"cheunggalen"},"content":"* 5a. The number of the tag is invalid.","lastModifiedDate":"2021-03-21"},{"lineNumber":821,"author":{"gitId":"cheunggalen"},"content":"  * 5a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":822,"author":{"gitId":"cheunggalen"},"content":"  * 5a2. User enters new entry number.","lastModifiedDate":"2021-03-21"},{"lineNumber":823,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":824,"author":{"gitId":"cheunggalen"},"content":"  Steps 5a1-5a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-21"},{"lineNumber":825,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 6.","lastModifiedDate":"2021-03-21"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"cheunggalen"},"content":"1. **Usability**:","lastModifiedDate":"2021-03-08"},{"lineNumber":833,"author":{"gitId":"cheunggalen"},"content":"    - Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-03-08"},{"lineNumber":834,"author":{"gitId":"cheunggalen"},"content":"    - A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-08"},{"lineNumber":835,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":836,"author":{"gitId":"cheunggalen"},"content":"2. **Reliability**:","lastModifiedDate":"2021-03-08"},{"lineNumber":837,"author":{"gitId":"cheunggalen"},"content":"    - Should be able to hold up to 1000 delivery entries and display all data if requested by the user in less than 5 seconds","lastModifiedDate":"2021-03-08"},{"lineNumber":838,"author":{"gitId":"cheunggalen"},"content":"    - Should be able to detect and inform users of duplicate delivery entries and confirm with user if they wish to proceed in adding them to the list","lastModifiedDate":"2021-03-08"},{"lineNumber":839,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":840,"author":{"gitId":"cheunggalen"},"content":"3. **Security:**","lastModifiedDate":"2021-03-08"},{"lineNumber":841,"author":{"gitId":"cheunggalen"},"content":"    - Users that request for any delivery entry data to be deleted will have the data permanently erased from memory","lastModifiedDate":"2021-03-08"},{"lineNumber":842,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":843,"author":{"gitId":"cheunggalen"},"content":"4. **Integrity**","lastModifiedDate":"2021-03-08"},{"lineNumber":844,"author":{"gitId":"cheunggalen"},"content":"    - For any time-related data presented to the user, the date formats will be `DD-MM-YYYY`","lastModifiedDate":"2021-03-08"},{"lineNumber":845,"author":{"gitId":"cheunggalen"},"content":"    - Delivery entries made by the user will be stored in a _JSON_ file inside the hard disks","lastModifiedDate":"2021-03-08"},{"lineNumber":846,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":847,"author":{"gitId":"cheunggalen"},"content":"5. **Flexibility**","lastModifiedDate":"2021-03-08"},{"lineNumber":848,"author":{"gitId":"cheunggalen"},"content":"    - TimeforWheels should be able to handle as many date format inputs as possible by the user and convert the date format to `DD-MM-YYYY`","lastModifiedDate":"2021-03-08"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":852,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":854,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":855,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":856,"author":{"gitId":"cheunggalen"},"content":"* **JSON:** JavaScript Object Notation","lastModifiedDate":"2021-03-08"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":858,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":864,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":865,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":882,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":883,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":884,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":885,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":886,"author":{"gitId":"cheunggalen"},"content":"### Deleting a customer","lastModifiedDate":"2021-03-17"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"cheunggalen"},"content":"1. Deleting a customer while all customers are being shown","lastModifiedDate":"2021-03-17"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"cheunggalen"},"content":"   1. Prerequisites: List all customers using the `list` command. Multiple customers in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":891,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":896,"author":{"gitId":"cheunggalen"},"content":"      Expected: No customer is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-17"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":906,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":907,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":908,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheunggalen":561,"pasha-292":15,"-":333}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"   1. Run the `seedu.timeforwheels.Main` and try a few commands.","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"cheunggalen":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"   e.g. `seedu.timeforwheels.commons.StringUtilTest`","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"   e.g. `seedu.timeforwheels.storage.StorageManagerTest`","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"   e.g. `seedu.timeforwheels.logic.LogicManagerTest`","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"cheunggalen":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"Welcome fellow drivers!","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"TimeForWheels is a delivery task management app for delivery drivers to manage and track their own workflow. ","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"It is optimized for use via a Command Line Interface while still having the benefits of a Graphical User Interface(GUI). ","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"Overall, TimeForWheels aims to be your perfect delivery companion by improving productivity and simplifying the delivery planning process.","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"* **Table of Contents**","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    * Quick Start","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    * Features","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        * Viewing help","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"        * Add a delivery task","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"        * Add a remark to a delivery task","lastModifiedDate":"2021-04-09"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"        * Edit a delivery task","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"        * Find delivery task using keyword matching any attribute  ","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        * Delete a delivery task","lastModifiedDate":"2021-04-09"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        * Clear all delivery tasks","lastModifiedDate":"2021-04-09"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        * List all delivery tasks","lastModifiedDate":"2021-04-09"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        * Mark delivery task as done","lastModifiedDate":"2021-04-09"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"        * View completed delivery tasks","lastModifiedDate":"2021-04-09"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        * View uncompleted delivery tasks","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        * Statistics of delivery workflow","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"        * Exit application","lastModifiedDate":"2021-03-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"1. Download the latest `TimeforWheels.jar` from [here](https://github.com/AY2021S2-CS2103T-W10-3/tp/releases).","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TimeforWheels.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-03-05"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    * **`list`** : Lists all delivery tasks","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"    * **`add`**`n/Johnathan Tan p/98723456 a/108 Bishan street, block 123, #01-01 e/johnathan@gmail.com d/2021-05-05` : Adds a delivery task with address `108 Bishan street, block 123, #01-01` to the","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"      delivery list.","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"    * **`delete`**`3` : Deletes the 3rd delivery task shown in the current delivery list.","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    * **`done`**`3` : Marks the 3rd delivery task as done.","lastModifiedDate":"2021-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"* Attributes of a delivery tasks includes name, phone number, address, email, date, tags, date","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"* Words in `UPPER_CASE` are the inputs to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"  e.g. in `add n/NAME`, `NAME` is an input which can be used as `add n/John Doe`.","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Spa t/fragile` or as `n/John Spa`.","lastModifiedDate":"2021-04-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/fragile`, `t/hot t/cold` etc.","lastModifiedDate":"2021-04-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"* Inputs can be in any order.\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"* If an input is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-04-10"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"* For commands that do not take in inputs (such as `help`, `list`, `exit` and `clear`), any input will be","lastModifiedDate":"2021-04-10"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Shows all the available commands and how to use them","lastModifiedDate":"2021-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"**Format:** `help`","lastModifiedDate":"2021-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":"* `help` - Help returns a list of available commands, examples and User Guide link.","lastModifiedDate":"2021-04-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":100,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/HelpCommand.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"Jacob-109"},"content":"### Add a delivery tasks: `add`","lastModifiedDate":"2021-04-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Adds a delivery task to the delivery list.","lastModifiedDate":"2021-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"**Format:** `add n/NAME p/PHONE a/ADDRESS e/EMAIL d/DATE [t/TAG]`","lastModifiedDate":"2021-04-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Jacob-109"},"content":"* `add n/Mark p/92841234 a/20 Watten Estate e/mark1998@gmail.com d/2021-02-02","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"  `","lastModifiedDate":"2021-03-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/AddCommand.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"### Edit a delivery task: `edit TASK_NUMBER PREFIX/ATTRIBUTE`","lastModifiedDate":"2021-04-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Edits any selected attribute of the delivery tasks except the remark.","lastModifiedDate":"2021-04-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"**PREFIX:** `n/` for name , `p/` for phone number , `a/` for address , `e/` for email, `t/` for tags, `d/` for date","lastModifiedDate":"2021-04-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"**ATTRIBUTE:** Enter information based on the format of the attribute specified.","lastModifiedDate":"2021-04-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"**Note:** ","lastModifiedDate":"2021-04-09"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"  * You can edit multiple attributes.","lastModifiedDate":"2021-04-09"},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"  * Remark can be edited separately through the remark command.","lastModifiedDate":"2021-04-09"},{"lineNumber":127,"author":{"gitId":"CSjiade"},"content":"  * TASK_NUMBER refers to the number shown in front of each delivery","lastModifiedDate":"2021-04-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":129,"author":{"gitId":"CSjiade"},"content":"**Format:** `edit TASK_NUMBER PREFIX/ATTRIBUTE`","lastModifiedDate":"2021-04-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":131,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-04-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":133,"author":{"gitId":"pasha-292"},"content":"* `edit 8 n/Joshua`","lastModifiedDate":"2021-04-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":135,"author":{"gitId":"pasha-292"},"content":"![Ui](images/EditSingleAttribute.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":137,"author":{"gitId":"pasha-292"},"content":"* `edit 8 a/Clementi Road d/2021-10-01`","lastModifiedDate":"2021-04-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"![Ui](images/EditMultipleAttribute.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":141,"author":{"gitId":"Jacob-109"},"content":"### Add a remark to a delivery tasks: `add`","lastModifiedDate":"2021-04-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":143,"author":{"gitId":"Jacob-109"},"content":"**Purpose:** Adds a remark to a delivery task in the delivery list.","lastModifiedDate":"2021-04-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":145,"author":{"gitId":"CSjiade"},"content":"**Format:** `remark TASK_NUMBER r/REMARK`","lastModifiedDate":"2021-04-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":147,"author":{"gitId":"Jacob-109"},"content":"**Examples:**","lastModifiedDate":"2021-04-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":149,"author":{"gitId":"Jacob-109"},"content":"* `remark 1 r/needs utensils","lastModifiedDate":"2021-04-09"},{"lineNumber":150,"author":{"gitId":"Jacob-109"},"content":"  `","lastModifiedDate":"2021-04-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":152,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/RemarkCommand.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":154,"author":{"gitId":"Jacob-109"},"content":"### Delete a delivery task : `delete`","lastModifiedDate":"2021-04-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Deletes the delivery task from the delivery list.","lastModifiedDate":"2021-04-07"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"CSjiade"},"content":"**Format:** `delete TASK_NUMBER``","lastModifiedDate":"2021-04-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"CSjiade"},"content":"* Deletes a delivery task from the list.","lastModifiedDate":"2021-04-07"},{"lineNumber":161,"author":{"gitId":"CSjiade"},"content":"* The TASK_NUMBER refers to the number shown in the displayed delivery list.","lastModifiedDate":"2021-04-10"},{"lineNumber":162,"author":{"gitId":"CSjiade"},"content":"* The TASK_NUMBER must be a positive number 1, 2, 3,","lastModifiedDate":"2021-04-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"CSjiade"},"content":"* `delete 2` - delete 2 will delete the second delivery task in the delivery list.","lastModifiedDate":"2021-04-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/DeleteCommand.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"Jacob-109"},"content":"### List all delivery tasks : `list`","lastModifiedDate":"2021-04-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":172,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Shows all the delivery tasks","lastModifiedDate":"2021-04-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":174,"author":{"gitId":"Jacob-109"},"content":"**Format:** `list`","lastModifiedDate":"2021-04-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":176,"author":{"gitId":"Jacob-109"},"content":"**Examples:**","lastModifiedDate":"2021-04-09"},{"lineNumber":177,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":178,"author":{"gitId":"CSjiade"},"content":"* `list` - Lists all the delivery tasks","lastModifiedDate":"2021-04-10"},{"lineNumber":179,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":180,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/ListCommand.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":181,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":182,"author":{"gitId":"Jacob-109"},"content":"### Clear all delivery tasks : `list`","lastModifiedDate":"2021-04-09"},{"lineNumber":183,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":184,"author":{"gitId":"Jacob-109"},"content":"**Purpose:** Clear all the delivery tasks","lastModifiedDate":"2021-04-09"},{"lineNumber":185,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":186,"author":{"gitId":"Jacob-109"},"content":"**Format:** `clear`","lastModifiedDate":"2021-04-09"},{"lineNumber":187,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":188,"author":{"gitId":"Jacob-109"},"content":"**Examples:**","lastModifiedDate":"2021-04-09"},{"lineNumber":189,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":190,"author":{"gitId":"Jacob-109"},"content":"* `clear` - Clears all the delivery tasks in the delivery list","lastModifiedDate":"2021-04-09"},{"lineNumber":191,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":192,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/ClearCommand.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":193,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":194,"author":{"gitId":"Jacob-109"},"content":"### Mark delivery task as done : `done`","lastModifiedDate":"2021-04-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Set a delivery task in the delivery list to done or not done","lastModifiedDate":"2021-04-07"},{"lineNumber":197,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":198,"author":{"gitId":"CSjiade"},"content":"**Format:** `done TASK_NUMBER`","lastModifiedDate":"2021-04-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"CSjiade"},"content":"* Sets the delivery task as done [✓].","lastModifiedDate":"2021-04-07"},{"lineNumber":201,"author":{"gitId":"CSjiade"},"content":"* The TASK_NUMBER refers to the number shown in the displayed delivery list.","lastModifiedDate":"2021-04-10"},{"lineNumber":202,"author":{"gitId":"CSjiade"},"content":"* The TASK_NUMBER must be a positive number such as 1, 2, 3","lastModifiedDate":"2021-04-10"},{"lineNumber":203,"author":{"gitId":"CSjiade"},"content":"* If the delivery task is already marked as done [✓], running this command will mark it as not done [X]","lastModifiedDate":"2021-04-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"pasha-292"},"content":"**Example:**","lastModifiedDate":"2021-03-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"CSjiade"},"content":"* `done 2` - done 2 will set the second delivery task in the delivery list as done.","lastModifiedDate":"2021-04-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/DoneCommand.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"Jacob-109"},"content":"### Find deliveries using keywords matching any attribute: `find KEYWORDS`","lastModifiedDate":"2021-04-09"},{"lineNumber":213,"author":{"gitId":"CSjiade"},"content":"**Attributes:** Name, Phone number, Address, Date, Remark, Done, Email, Tags","lastModifiedDate":"2021-04-10"},{"lineNumber":214,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":215,"author":{"gitId":"CSjiade"},"content":"**Purpose** Find deliveries with attributes that match the KEYWORDS","lastModifiedDate":"2021-04-10"},{"lineNumber":216,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":217,"author":{"gitId":"pasha-292"},"content":"**Notes:**","lastModifiedDate":"2021-04-09"},{"lineNumber":218,"author":{"gitId":"pasha-292"},"content":"* It is worth noting that you have to key in a full `KEYWORD` to retrieve a result.","lastModifiedDate":"2021-04-09"},{"lineNumber":219,"author":{"gitId":"pasha-292"},"content":"  That is, if you want to find `Alex Yeoh`, then typing `find Al` would not return a result,","lastModifiedDate":"2021-04-09"},{"lineNumber":220,"author":{"gitId":"pasha-292"},"content":"  but `find Alex` or `find Yeoh` will. So, avoid keying in incomplete keywords.","lastModifiedDate":"2021-04-09"},{"lineNumber":221,"author":{"gitId":"pasha-292"},"content":"* Incomplete keywords are disabled in order to reduce the number of unnecessary search results which","lastModifiedDate":"2021-04-09"},{"lineNumber":222,"author":{"gitId":"pasha-292"},"content":"  may defeat the aim of the feature.","lastModifiedDate":"2021-04-09"},{"lineNumber":223,"author":{"gitId":"CSjiade"},"content":"* When finding dates, the format of the `KEYWORD` should be in YYYY-MM-DD format. For example, ","lastModifiedDate":"2021-04-10"},{"lineNumber":224,"author":{"gitId":"CSjiade"},"content":"  when finding 4th January 2021, use `find 2021-01-04`.","lastModifiedDate":"2021-04-10"},{"lineNumber":225,"author":{"gitId":"pasha-292"},"content":"  ","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"pasha-292"},"content":"**Format** `find KEYWORDS`","lastModifiedDate":"2021-04-09"},{"lineNumber":227,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"pasha-292"},"content":"* One of the following results will show:","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"pasha-292"},"content":"  * Deliveries matching the keywords","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"pasha-292"},"content":"  * No matches found","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"pasha-292"},"content":"    ","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"pasha-292"},"content":"**Example**","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"pasha-292"},"content":"1. Finding by name: `find Alex`","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"pasha-292"},"content":"   ![Ui](images/FindName.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"pasha-292"},"content":"2. Finding by address: `find Tampines`","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"pasha-292"},"content":"   ![Ui](images/FindAddress.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"pasha-292"},"content":"3. finding by telephone number: `find 87438807`","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"pasha-292"},"content":"   ![Ui](images/FindTelephone.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"pasha-292"},"content":"4. finding by date of delivery: `find 2021-10-10`","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":254,"author":{"gitId":"pasha-292"},"content":"   ![Ui](images/FindDate.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":255,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"cheunggalen"},"content":"### Sort delivery tasks in the list: `sort`","lastModifiedDate":"2021-04-10"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":259,"author":{"gitId":"cheunggalen"},"content":"**Purpose** Sort delivery tasks first by completion status (incomplete first), ","lastModifiedDate":"2021-04-10"},{"lineNumber":260,"author":{"gitId":"cheunggalen"},"content":"then urgency tags (only applicable for incomplete tasks), and lastly date.","lastModifiedDate":"2021-04-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":262,"author":{"gitId":"cheunggalen"},"content":"**Format:** `sort`","lastModifiedDate":"2021-04-10"},{"lineNumber":263,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":264,"author":{"gitId":"cheunggalen"},"content":"**Examples:**","lastModifiedDate":"2021-04-10"},{"lineNumber":265,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":266,"author":{"gitId":"cheunggalen"},"content":"* `sort` - Lists all incomplete delivery tasks (urgent ones first) followed by completed delivery tasks, which are all","lastModifiedDate":"2021-04-10"},{"lineNumber":267,"author":{"gitId":"cheunggalen"},"content":"sorted by date.","lastModifiedDate":"2021-04-10"},{"lineNumber":268,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":269,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":270,"author":{"gitId":"CSjiade"},"content":"### Statistics of delivery workflow : `stats`","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Get a summary report of the current delivery workflow","lastModifiedDate":"2021-04-07"},{"lineNumber":273,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"CSjiade"},"content":"**Format:** `stats`","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"CSjiade"},"content":"* The following data will be calculated and shown on the screen:","lastModifiedDate":"2021-04-07"},{"lineNumber":277,"author":{"gitId":"CSjiade"},"content":"  * Deliveries Done, Deliveries Not Done, Deliveries Due, Deliveries Not Due","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"CSjiade"},"content":"  * Fragile Deliveries , Liquid Deliveries, Food Deliveries, Hot Deliveries","lastModifiedDate":"2021-04-07"},{"lineNumber":279,"author":{"gitId":"CSjiade"},"content":"  * Cold Deliveries , Heavy Deliveries, Bulky Deliveries, Urgent Deliveries","lastModifiedDate":"2021-04-07"},{"lineNumber":280,"author":{"gitId":"CSjiade"},"content":"  * Other Deliveries","lastModifiedDate":"2021-04-07"},{"lineNumber":281,"author":{"gitId":"CSjiade"},"content":"  ","lastModifiedDate":"2021-04-10"},{"lineNumber":282,"author":{"gitId":"CSjiade"},"content":"**Definition:**","lastModifiedDate":"2021-04-10"},{"lineNumber":283,"author":{"gitId":"CSjiade"},"content":"  * `Deliveries Done` are Deliveries that have been marked done","lastModifiedDate":"2021-04-07"},{"lineNumber":284,"author":{"gitId":"CSjiade"},"content":"  * `Deliveries Not Done` are Deliveries that have not been marked as done","lastModifiedDate":"2021-04-07"},{"lineNumber":285,"author":{"gitId":"CSjiade"},"content":"  * `Deliveries Due` are Deliveries that have exceeded their delivery date and are still marked as not done","lastModifiedDate":"2021-04-07"},{"lineNumber":286,"author":{"gitId":"CSjiade"},"content":"  * `Deliveries Not Due` are Deliveries that have not yet exceeded their delivery date and are marked as not done","lastModifiedDate":"2021-04-07"},{"lineNumber":287,"author":{"gitId":"CSjiade"},"content":"  * `Fragile Deliveries` are Deliveries with tags marked as fragile","lastModifiedDate":"2021-04-07"},{"lineNumber":288,"author":{"gitId":"CSjiade"},"content":"  * `Liquid Deliveries` are Deliveries with tags marked as liquid","lastModifiedDate":"2021-04-07"},{"lineNumber":289,"author":{"gitId":"CSjiade"},"content":"  * `Food Deliveries` are Deliveries with tags marked as food","lastModifiedDate":"2021-04-07"},{"lineNumber":290,"author":{"gitId":"CSjiade"},"content":"  * `Hot Deliveries` are Deliveries with tags marked as hot","lastModifiedDate":"2021-04-07"},{"lineNumber":291,"author":{"gitId":"CSjiade"},"content":"  * `Cold Deliveries` are Deliveries with tags marked as cold","lastModifiedDate":"2021-04-07"},{"lineNumber":292,"author":{"gitId":"CSjiade"},"content":"  * `Heavy Deliveries` are Deliveries with tags marked as heavy","lastModifiedDate":"2021-04-07"},{"lineNumber":293,"author":{"gitId":"CSjiade"},"content":"  * `Bulky Deliveries` are Deliveries with tags marked as bulky","lastModifiedDate":"2021-04-07"},{"lineNumber":294,"author":{"gitId":"CSjiade"},"content":"  * `Urgent Deliveries` are Deliveries with tags marked as urgent","lastModifiedDate":"2021-04-07"},{"lineNumber":295,"author":{"gitId":"CSjiade"},"content":"  * `Other Deliveries` are Deliveries without any tags ","lastModifiedDate":"2021-04-07"},{"lineNumber":296,"author":{"gitId":"CSjiade"},"content":"  ","lastModifiedDate":"2021-04-07"},{"lineNumber":297,"author":{"gitId":"CSjiade"},"content":"  ","lastModifiedDate":"2021-04-07"},{"lineNumber":298,"author":{"gitId":"CSjiade"},"content":"**How to interpret the displayed data:**","lastModifiedDate":"2021-04-07"},{"lineNumber":299,"author":{"gitId":"CSjiade"},"content":" * `Deliveries Done : 5 ( 83.33% )` means 5 and 83.33% of the deliveries in the list are marked as done ","lastModifiedDate":"2021-04-07"},{"lineNumber":300,"author":{"gitId":"CSjiade"},"content":" * `Deliveries Due: 1 ( 16.67% )` means 1 and 16.67% of the deliveries in the list are due ","lastModifiedDate":"2021-04-07"},{"lineNumber":301,"author":{"gitId":"CSjiade"},"content":"  ","lastModifiedDate":"2021-03-29"},{"lineNumber":302,"author":{"gitId":"CSjiade"},"content":"**Example:**","lastModifiedDate":"2021-03-29"},{"lineNumber":303,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":304,"author":{"gitId":"CSjiade"},"content":"* `stats` - outputs the calculated figures as shown below","lastModifiedDate":"2021-04-07"},{"lineNumber":305,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":306,"author":{"gitId":"Jacob-109"},"content":"### View completed delivery tasks: `completed`","lastModifiedDate":"2021-04-09"},{"lineNumber":307,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":308,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Filter out the completed delivery tasks in the delivery list","lastModifiedDate":"2021-04-10"},{"lineNumber":309,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":310,"author":{"gitId":"Jacob-109"},"content":"**Format:** `completed`","lastModifiedDate":"2021-03-29"},{"lineNumber":311,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":312,"author":{"gitId":"Jacob-109"},"content":"**Example:**","lastModifiedDate":"2021-03-29"},{"lineNumber":313,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":314,"author":{"gitId":"CSjiade"},"content":"* `completed` - outputs the list of completed delivery tasks","lastModifiedDate":"2021-04-10"},{"lineNumber":315,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":316,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/CompletedCommand.png)","lastModifiedDate":"2021-03-29"},{"lineNumber":317,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":318,"author":{"gitId":"Jacob-109"},"content":"### View uncompleted delivery tasks: `uncompleted`","lastModifiedDate":"2021-04-09"},{"lineNumber":319,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":320,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Filter out the uncompleted delivery tasks in the delivery list","lastModifiedDate":"2021-04-10"},{"lineNumber":321,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":322,"author":{"gitId":"Jacob-109"},"content":"**Format:** `uncompleted`","lastModifiedDate":"2021-04-09"},{"lineNumber":323,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":324,"author":{"gitId":"Jacob-109"},"content":"**Example:**","lastModifiedDate":"2021-04-09"},{"lineNumber":325,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":326,"author":{"gitId":"CSjiade"},"content":"* `uncompleted` - outputs the list of uncompleted delivery tasks","lastModifiedDate":"2021-04-10"},{"lineNumber":327,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":328,"author":{"gitId":"Jacob-109"},"content":"![Ui](images/UncompletedCommand.png)","lastModifiedDate":"2021-04-09"},{"lineNumber":329,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":330,"author":{"gitId":"Jacob-109"},"content":"### Exit application : `exit`","lastModifiedDate":"2021-04-09"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"CSjiade"},"content":"**Purpose:** Exits the application.","lastModifiedDate":"2021-04-10"},{"lineNumber":333,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":334,"author":{"gitId":"pasha-292"},"content":"**Format:** `exit`","lastModifiedDate":"2021-03-05"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"CSjiade"},"content":"* `exit` - Exits the application","lastModifiedDate":"2021-04-10"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"pasha-292"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-03-05"},{"lineNumber":346,"author":{"gitId":"CSjiade"},"content":"the data of your previous TimeforWheels home folder.","lastModifiedDate":"2021-04-10"},{"lineNumber":347,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":348,"author":{"gitId":"CSjiade"},"content":"**Q**: Where can I find the data stored in TimeforWheels?\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":349,"author":{"gitId":"CSjiade"},"content":"**A**: All delivery list data is stored in a file named deliverylist.json and can be found in the same directory where TimeforWheels.jar file is saved.","lastModifiedDate":"2021-04-10"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"pasha-292"},"content":"Action | Format,\u003cbr\u003e Example(s)","lastModifiedDate":"2021-03-05"},{"lineNumber":356,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"pasha-292"},"content":"**Help** | `help`\u003cbr\u003e e.g., `help`","lastModifiedDate":"2021-03-05"},{"lineNumber":358,"author":{"gitId":"Jacob-109"},"content":"**Add** | `add n/NAME p/PHONE a/ADDRESS e/EMAIL d/DATETIME` \u003cbr\u003e e.g., `add n/Johnathan p/98723456 a/123, Clementi Rd, 1234665 e/johnathan@gmail.com d/01-02-2021`","lastModifiedDate":"2021-04-09"},{"lineNumber":359,"author":{"gitId":"Jacob-109"},"content":"**Edit** | `edit INDEX n/NAME`, `p/PHONE`, `a/ADDRESS`, `e/EMAIL`, `t/TAG`, `d/DATE `\u003cbr\u003e e.g.,`edit 1 a/102 Bishan Street`","lastModifiedDate":"2021-04-09"},{"lineNumber":360,"author":{"gitId":"Jacob-109"},"content":"**Remark** | `remark INDEX r/REMARK`\u003cbr\u003e e.g.,`remark 1 r/needs untensils`","lastModifiedDate":"2021-04-09"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"Jacob-109"},"content":"**Clear** | `clear`\u003cbr\u003e e.g., `clear`","lastModifiedDate":"2021-04-09"},{"lineNumber":363,"author":{"gitId":"pasha-292"},"content":"**List** | `list`\u003cbr\u003e e.g., `list`","lastModifiedDate":"2021-03-05"},{"lineNumber":364,"author":{"gitId":"Jacob-109"},"content":"**Done** | `done INDEX`\u003cbr\u003e e.g., `done 2`","lastModifiedDate":"2021-03-04"},{"lineNumber":365,"author":{"gitId":"pasha-292"},"content":"**Find** | `find \u003ckeyword\u003e` e.g., `find alex`","lastModifiedDate":"2021-03-29"},{"lineNumber":366,"author":{"gitId":"Jacob-109"},"content":"**Stats** | `stats` \u003cbr\u003e e.g., `stats`","lastModifiedDate":"2021-03-29"},{"lineNumber":367,"author":{"gitId":"Jacob-109"},"content":"**Completed** | `completed` \u003cbr\u003e e.g., `completed`","lastModifiedDate":"2021-03-29"},{"lineNumber":368,"author":{"gitId":"Jacob-109"},"content":"**Uncompleted** | `uncompleted` \u003cbr\u003e e.g., `uncompleted`","lastModifiedDate":"2021-04-09"},{"lineNumber":369,"author":{"gitId":"pasha-292"},"content":"**Exit** | `exit`\u003cbr\u003e e.g., `exit`","lastModifiedDate":"2021-03-05"},{"lineNumber":370,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":371,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":372,"author":{"gitId":"CSjiade"},"content":"## Glossary","lastModifiedDate":"2021-04-10"},{"lineNumber":373,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":374,"author":{"gitId":"CSjiade"},"content":"Term | Definition,\u003cbr\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":375,"author":{"gitId":"CSjiade"},"content":"--------|------------------","lastModifiedDate":"2021-04-10"},{"lineNumber":376,"author":{"gitId":"CSjiade"},"content":"**Attribute** | `A key detail of a delivery task`\u003cbr\u003e e.g., `name`","lastModifiedDate":"2021-04-10"},{"lineNumber":377,"author":{"gitId":"CSjiade"},"content":"**TASK_NUMBER** | `The delivery task number shown in the delivery list` \u003cbr\u003e e.g., `add n/Johnathan p/98723456 a/123, Clementi Rd, 1234665 e/johnathan@gmail.com d/01-02-2021`","lastModifiedDate":"2021-04-10"},{"lineNumber":378,"author":{"gitId":"CSjiade"},"content":"**PREFIX** | `refers to the letter representing the respective attribute.` \u003cbr\u003e e.g., Letter a for attribute ADDRESS`","lastModifiedDate":"2021-04-10"},{"lineNumber":379,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":380,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":381,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-04"}],"authorContributionMap":{"cheunggalen":11,"Jacob-109":79,"pasha-292":75,"-":111,"CSjiade":105}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteCustomer(c)","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTimesForWheels(deliveryList)","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"pasha-292":2,"-":36}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"TimesForWheels *-right-\u003e \"1\" UniqueCustomerList","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"TimesForWheels *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"UniqueTagList -[hidden]down- UniqueCustomerList","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"UniqueTagList -[hidden]down- UniqueCustomerList","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"UniqueCustomerList o-right-\u003e Customer","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"Customer -up-\u003e \"*\" Tag","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"Customer *--\u003e Name","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"Customer *--\u003e Phone","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"Customer *--\u003e Email","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"Customer *--\u003e Address","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"Customer *--\u003e Date","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"Customer *--\u003e Remark","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"pasha-292":12,"-":11}},{"path":"docs/diagrams/FindCommandActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"@startuml","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"start","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":":User executes find command;","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"if (attribute matching keyword found) then ([find command commits TimesForWheels])","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"    :Add delivery tasks with attributes matching keyword;","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    :Save TimesForWheels matching delivery tasks to","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    DeliveryList;","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"else ([else])","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    : No matches found;","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    : Return Empty Delivery list;","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"endif","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"stop","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"@enduml","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"pasha-292":17}},{"path":"docs/diagrams/FindCommandLogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"@startuml","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"!include style.puml","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"participant \":TimesForWheelsParser\" as TimesForWheelsParser LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"participant \"d:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"end box","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"end box","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"[-\u003e LogicManager : execute(\"find Alex\")","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"activate LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"LogicManager -\u003e TimesForWheelsParser : parseCommand(\"find Alex\")","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"activate TimesForWheelsParser","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"create FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"TimesForWheelsParser -\u003e FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"activate FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"FindCommandParser --\u003e TimesForWheelsParser","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"TimesForWheelsParser -\u003e FindCommandParser : parse(\"find Alex\")","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"activate FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"create FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"FindCommandParser -\u003e FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"activate FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"FindCommand --\u003e FindCommandParser : d","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"deactivate FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"FindCommandParser --\u003e TimesForWheelsParser : d","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"deactivate FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-04-10"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"FindCommandParser -[hidden]-\u003e TimesForWheelsParser","lastModifiedDate":"2021-04-10"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"destroy FindCommandParser","lastModifiedDate":"2021-04-10"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"TimesForWheelsParser --\u003e LogicManager : d","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"deactivate TimesForWheelsParser","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"LogicManager -\u003e FindCommand : execute()","lastModifiedDate":"2021-04-10"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"activate FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"FindCommand -\u003e Model : findPerson(\"Alex\")","lastModifiedDate":"2021-04-10"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"activate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"deactivate Model","lastModifiedDate":"2021-04-10"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"create CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"activate CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"deactivate CommandResult","lastModifiedDate":"2021-04-10"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2021-04-10"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"deactivate FindCommand","lastModifiedDate":"2021-04-10"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"deactivate LogicManager","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"@enduml","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"pasha-292":69}},{"path":"docs/diagrams/FindCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"@startuml","lastModifiedDate":"2021-04-10"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"!include style.puml","lastModifiedDate":"2021-04-10"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"user -[USER_COLOR]\u003e ui : \"find Alex\"","lastModifiedDate":"2021-04-10"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"activate ui UI_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"find Alex\")","lastModifiedDate":"2021-04-10"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"logic -[LOGIC_COLOR]\u003e model : findCustomer(c)","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"deactivate model","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveTimesForWheels(deliveryList)","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"deactivate storage","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"deactivate storage","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"deactivate logic","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"deactivate ui","lastModifiedDate":"2021-04-10"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"@enduml","lastModifiedDate":"2021-04-10"}],"authorContributionMap":{"pasha-292":38}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package Parser {","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"Class TimesForWheelsParser","lastModifiedDate":"2021-04-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Command {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager .up.|\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"LogicManager --\u003e\"1\" TimesForWheelsParser","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"TimesForWheelsParser .left.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"XYZCommandParser ..|\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult","lastModifiedDate":"2019-07-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult -[hidden]-\u003e Parser","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"pasha-292":3,"-":59}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"Class CustomerListPanel","lastModifiedDate":"2021-04-10"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"Class CustomerCard","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"MainWindow *-down-\u003e CustomerListPanel","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"CustomerListPanel -down-\u003e CustomerCard","lastModifiedDate":"2021-04-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"CustomerListPanel --|\u003e UiPart","lastModifiedDate":"2021-04-10"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"CustomerCard --|\u003e UiPart","lastModifiedDate":"2021-04-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"CustomerCard ..\u003e Model","lastModifiedDate":"2021-04-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"CustomerListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-04-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"pasha-292":8,"-":52}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"ecp -\u003e ec ++: index, editCustomerDescriptor","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"cheunggalen":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"title: TimeforWheels","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-3/tp/actions)","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W10-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W10-3/tp)","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"**TimeforWheels is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"* If you are interested in using TimeforWheels, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"* If you are interested about developing TimeforWheels, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":12,"CSjiade":9}},{"path":"docs/team/lianjiade.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"layout: page","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"title: Lian Jiade\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"## Project: TimeForWheels","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"TimeForWheels is an app for delivery drivers to manage their orders efficiently. It is optimized","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"for use via a Command Line Interface while still having the benefits of a Graphical User","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"Interface(GUI). Overall, TimeForWheels aims to increase work productivity for delivery drivers","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"by simplifying the delivery management and planning process.","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"* **Project management**:","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"  * Managed releases `v1.1` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"CSjiade":21}},{"path":"docs/team/pasha-292.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"layout: page ","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"title: Juhaer\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"---","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"## Project: TimeForWheels","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"TimeForWheels is an app for delivery drivers to manage their orders efficiently. It is optimized for use via a Command","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"Line Interface while still having the benefits of a Graphical User Interface(GUI). Overall, TimeForWheels aims to","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"increase work productivity for delivery drivers by simplifying the delivery management and planning process.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"* **Code contributed**: [RepoSense Link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dpasha\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dpasha-292\u0026tabRepo\u003dAY2021S2-CS2103T-W10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-09"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"* **Repository Link**:  [Repository Link](https://github.com/pasha-292/tp)","lastModifiedDate":"2021-04-09"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"* **Project management**:","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    * Managed releases `v1.1` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    * Released `v1.1` and `v1.3` on GitHub.","lastModifiedDate":"2021-04-09"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"* **Features**:","lastModifiedDate":"2021-04-09"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"   * Add the date feature to TimesForWheels to take into account the delivery date.(PRs: ","lastModifiedDate":"2021-04-09"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"     [#35](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/35), ","lastModifiedDate":"2021-04-09"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"     [#47](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/47))","lastModifiedDate":"2021-04-09"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"   * Change the find feature to enable finding by all customer attributes.(PRs:","lastModifiedDate":"2021-04-09"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"     [#35](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/35),","lastModifiedDate":"2021-04-09"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"     [#47](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/47),","lastModifiedDate":"2021-04-09"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"     [#63](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/63)) ","lastModifiedDate":"2021-04-09"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-04-10"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"* **Tests**:","lastModifiedDate":"2021-04-09"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"   * Add Date Tests to check if dates are valid. (PR: [#35](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/35))","lastModifiedDate":"2021-04-09"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"   * Update AttributesContainsPredicateTest. (PR: [#35](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/35))","lastModifiedDate":"2021-04-09"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    ","lastModifiedDate":"2021-04-09"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"* **Enhancement to existing features**:","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"1. Update the end messages for some of the commands.(","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"   PR: [#27](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/27))","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"2. Update the find command to enable searching by telephone number and address.(","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"   PR: [#35](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/35))","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"3. Add Date class to the project to enable making use of delivery dates.(","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"   PR: [#35](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/35))","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"4. Integrate the date class to the Customer class and make the relevant alterations to files.(","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"   PR: [#47](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/47))","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"5. Update the find command to enable searching for customer by using the date.(","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"   PR: [#47](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/47))","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"6. Format the date output to make it more in line with the project.(","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"   PR: [#48](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/48))","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"7. Modify the find command to enable search by other customer attributes.(","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"   PR: [#63](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/63))   ","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"* **Documentation**:","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"1. Update User Guide, by adding features description and enhance existing info.(","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"   PR: [#16](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/16),","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"   [#58](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/58),","lastModifiedDate":"2021-04-09"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"   [#113](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/113))","lastModifiedDate":"2021-04-09"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"2. Update Developer Guide, by updating the information about the find command.(","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"   PR: [#55](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/55))","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"3. Update Existing Developer Guide diagrams to make them more in line with the project.(","lastModifiedDate":"2021-04-10"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"   PR: [#124](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/124))","lastModifiedDate":"2021-04-10"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"4. Update DG to include three UML diagrams for the Find Command and add them to DG.(","lastModifiedDate":"2021-04-10"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"   PR: [#124](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/124))   ","lastModifiedDate":"2021-04-10"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"* **Community**:","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"1. Commented on the following PRs: [#50](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/50)","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"   , [#52](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/52)","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"   , [#54](https://github.com/AY2021S2-CS2103T-W10-3/tp/pull/54).","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"2. Issues: ","lastModifiedDate":"2021-04-09"},{"lineNumber":80,"author":{"gitId":"pasha-292"},"content":"   [#71](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/71),","lastModifiedDate":"2021-04-09"},{"lineNumber":81,"author":{"gitId":"pasha-292"},"content":"   [#72](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/72),","lastModifiedDate":"2021-04-09"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"   [#80](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/80),","lastModifiedDate":"2021-04-09"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"   [#81](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/81),","lastModifiedDate":"2021-04-09"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"   [#88](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/88),","lastModifiedDate":"2021-04-09"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"   [#92](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/92),","lastModifiedDate":"2021-04-09"},{"lineNumber":86,"author":{"gitId":"pasha-292"},"content":"   [#99](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/99),","lastModifiedDate":"2021-04-09"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"   [#104](https://github.com/AY2021S2-CS2103T-W10-3/tp/issues/104) ","lastModifiedDate":"2021-04-09"},{"lineNumber":88,"author":{"gitId":"pasha-292"},"content":"   ","lastModifiedDate":"2021-04-09"}],"authorContributionMap":{"pasha-292":88}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":" * Changes the remark of an existing customer in the address book.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the customer identified \"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"            + \"by the index number used in the last customer listing. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"     * @param index of the customer in the filtered customer list to edit the remark","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"     * @param remark of the customer to be updated to","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":"Create a `RemarkCommandParser` class in the `seedu.timeforwheels.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-03-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"cheunggalen"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of customer data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the customer’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"cheunggalen"},"content":"Create a new `Remark` in `seedu.timeforwheels.model.customer`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-20"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"cheunggalen"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"cheunggalen"},"content":"Simply add the following to [`seedu.timeforwheels.ui.CustomerCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-20"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"cheunggalen"},"content":"public PersonCard(Person customer, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"cheunggalen"},"content":"    remark.setText(customer.getRemark().value);","lastModifiedDate":"2021-03-17"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"cheunggalen"},"content":"        Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":344,"author":{"gitId":"cheunggalen"},"content":"        Person editedCustomer \u003d new Person(customerToEdit.getName(), customerToEdit.getPhone(), customerToEdit.getEmail(),","lastModifiedDate":"2021-03-17"},{"lineNumber":345,"author":{"gitId":"cheunggalen"},"content":"                customerToEdit.getAddress(), remark, customerToEdit.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"cheunggalen"},"content":"        model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"cheunggalen"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomer));","lastModifiedDate":"2021-03-17"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"cheunggalen"},"content":"     * {@code customerToEdit}.","lastModifiedDate":"2021-03-17"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"cheunggalen"},"content":"    private String generateSuccessMessage(Person customerToEdit) {","lastModifiedDate":"2021-03-17"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"cheunggalen"},"content":"        return String.format(message, customerToEdit);","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"cheunggalen":23,"-":371}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Person` model to suit your use case.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Person`.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"The `address` field in `Person` is actually an instance of the `seedu.timeforwheels.model.customer.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheunggalen":2,"-":101}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.timeforwheels.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":"       Person customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"       Person editedCustomer \u003d createEditedPerson(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"       if (!customerToEdit.isSamePerson(editedCustomer) \u0026\u0026 model.hasPerson(editedCustomer)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"       model.setPerson(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedCustomer));","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"cheunggalen"},"content":"       customers.addAll(","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheunggalen":7,"-":243}},{"path":"src/main/java/seedu/timeforwheels/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.FileUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"cheunggalen":3,"-":61}},{"path":"src/main/java/seedu/timeforwheels/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"cheunggalen":1,"-":24}},{"path":"src/main/java/seedu/timeforwheels/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Config;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Version;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.ConfigUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.StringUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.Logic;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.LogicManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.DeliveryListStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.JsonDeliveryListStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.Storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.StorageManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.UserPrefsStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.ui.Ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.ui.UiManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 6, 0, true);","lastModifiedDate":"2017-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing DeliveryList ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        DeliveryListStorage deliveryListStorage \u003d new JsonDeliveryListStorage(userPrefs.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        storage \u003d new StorageManager(deliveryListStorage, userPrefsStorage);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s delivery list and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"     * The data from the sample delivery list will be used instead if {@code storage}\u0027s delivery list is not found,","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"     * or an empty delivery list will be used instead if errors occur when reading {@code storage}\u0027s delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        Optional\u003cReadOnlyDeliveryList\u003e deliveryListOptional;","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        ReadOnlyDeliveryList initialData;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"            deliveryListOptional \u003d storage.readDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"            if (!deliveryListOptional.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"                logger.info(\"Data file not found. Will be starting with a sample DeliveryList\");","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"            initialData \u003d deliveryListOptional.orElseGet(SampleDataUtil::getSampleDeliveryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty DeliveryList\");","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"            initialData \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty DeliveryList\");","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"            initialData \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty DeliveryList\");","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":"        logger.info(\"Starting DeliveryList \" + MainApp.VERSION);","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"cheunggalen"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Delivery List ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":43,"-":140}},{"path":"src/main/java/seedu/timeforwheels/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":62}},{"path":"src/main/java/seedu/timeforwheels/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":78}},{"path":"src/main/java/seedu/timeforwheels/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    private static final String LOG_FILE \u003d \"deliveryList.log\";","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":2,"-":110}},{"path":"src/main/java/seedu/timeforwheels/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX \u003d \"The customer index provided is invalid\";","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_CUSTOMERS_LISTED_OVERVIEW \u003d \"%1$d Customers listed!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    public static final String MESSAGE_CUSTOMERS_COMPLETED \u003d \"Listed below are the completed deliveries\";","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    public static final String MESSAGE_CUSTOMERS_UNCOMPLETED \u003d \"Listed below are the uncompleted deliveries\";","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":3,"Jacob-109":2,"-":9}},{"path":"src/main/java/seedu/timeforwheels/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":115}},{"path":"src/main/java/seedu/timeforwheels/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core.index;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cheunggalen":1,"-":53}},{"path":"src/main/java/seedu/timeforwheels/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.exceptions;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":10}},{"path":"src/main/java/seedu/timeforwheels/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.exceptions;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":1,"-":20}},{"path":"src/main/java/seedu/timeforwheels/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.MainApp;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheunggalen":2,"-":40}},{"path":"src/main/java/seedu/timeforwheels/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":1,"-":34}},{"path":"src/main/java/seedu/timeforwheels/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Config;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":3,"-":20}},{"path":"src/main/java/seedu/timeforwheels/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":82}},{"path":"src/main/java/seedu/timeforwheels/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":3,"-":140}},{"path":"src/main/java/seedu/timeforwheels/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":2,"-":66}},{"path":"src/main/java/seedu/timeforwheels/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.CommandResult;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     * Returns the DeliveryList.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"     * @see seedu.timeforwheels.model.Model#getDeliveryList()","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    ReadOnlyDeliveryList getDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    /** Returns an unmodifiable view of the filtered list of customers */","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     * Returns the user prefs\u0027 delivery list file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    Path getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheunggalen":14,"-":36}},{"path":"src/main/java/seedu/timeforwheels/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.Command;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.CommandResult;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.DeliveryListParser;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.Storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    private final DeliveryListParser deliveryListParser;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        deliveryListParser \u003d new DeliveryListParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        Command command \u003d deliveryListParser.parseCommand(commandText);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"            storage.saveDeliveryList(model.getDeliveryList());","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    public ReadOnlyDeliveryList getDeliveryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        return model.getDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        return model.getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"    public Path getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        return model.getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheunggalen":22,"-":59}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":" * Adds a customer to the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a customer to the delivery list. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"            + PREFIX_DATE + \"DATE \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"            + PREFIX_DATE + \"2021-10-10\";","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The following new customer has been added: %1$s\";","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the delivery list\";","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    private final Customer toAdd;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * Creates an AddCommand to add the specified {@code Customer}","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"    public AddCommand(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        toAdd \u003d customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        if (model.hasCustomer(toAdd)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        model.addCustomer(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":20,"pasha-292":3,"-":43,"CSjiade":1}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":" * Clears the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TimeForWheels\u0027 entries has been cleared!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        model.setDeliveryList(new DeliveryList());","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":5,"pasha-292":1,"-":16}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":3,"-":17}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":1,"-":70}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/CompletedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":" * Finds and lists all completed deliveries in delivery list","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"public class CompletedCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public static final String COMMAND_WORD \u003d \"completed\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filter all completed deliveries\"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    public CommandResult execute (Model model) {","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"        String trimmedArgs \u003d \"[✓]\";","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate complete \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"            new AttributeContainsKeywordsPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        model.updateFilteredCustomerList(complete);","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"                String.format(Messages.MESSAGE_CUSTOMERS_COMPLETED, model.getFilteredCustomerList().size()));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"cheunggalen":3,"Jacob-109":29}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":" * Deletes a customer identified using it\u0027s displayed index from the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"            + \": Deletes the customer identified by the index number used in the displayed customer list.\\n\"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_DELETE_CUSTOMER_SUCCESS \u003d \"The following Customer has been deleted: %1$s\";","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"        Customer customerToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        model.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":14,"-":40}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import java.util.List;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Done;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":" * Edits the details of an existing customer in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"            + \": Marks a task as done with a tick \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            + \"by the index number used in the listing. \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_DONE_CUSTOMER_SUCCESS \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        \"The following Delivery Order has been checkmarked : %1$s\";","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public static final String CHECKMARK \u003d \"[✓]\";","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    public static final String CROSS \u003d \"[X]\";","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    private final Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * @param targetIndex of the customer in the filtered customer list to edit","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"    public DoneCommand(Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"        requireAllNonNull(targetIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        this.done \u003d new Done(CHECKMARK);","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        Customer customerToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer;","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"        if (!customerToEdit.getDone().toString().equals(CHECKMARK)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"            editedCustomer \u003d new Customer(customerToEdit.getName(), customerToEdit.getPhone(),","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                    customerToEdit.getEmail(), customerToEdit.getAddress(),","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"                    customerToEdit.getRemark(), customerToEdit.getDate(),","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"                    customerToEdit.getTags(), done);","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"            editedCustomer \u003d new Customer(customerToEdit.getName(), customerToEdit.getPhone(),","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"                    customerToEdit.getEmail(), customerToEdit.getAddress(),","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"                    customerToEdit.getRemark(), customerToEdit.getDate(),","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"                    customerToEdit.getTags(), new Done(CROSS));","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_CUSTOMER_SUCCESS, customerToEdit));","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"cheunggalen":26,"pasha-292":3,"CSjiade":45}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.customer.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Done;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":" * Edits the details of an existing customer in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the customer identified \"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"            + \"by the index number used in the displayed customer list. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_EDIT_CUSTOMER_SUCCESS \u003d \"Edited Customer: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"This customer already exists in the delivery list.\";","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    private final EditCustomerDescriptor editCustomerDescriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     * @param index                  of the customer in the filtered customer list to edit","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"     * @param editCustomerDescriptor details to edit the customer with","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"    public EditCommand(Index index, EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(editCustomerDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"        this.editCustomerDescriptor \u003d new EditCustomerDescriptor(editCustomerDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d createEditedCustomer(customerToEdit, editCustomerDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        if (!customerToEdit.isSameCustomer(editedCustomer) \u0026\u0026 model.hasCustomer(editedCustomer)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer));","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"     * Creates and returns a {@code Customer} with the details of {@code customerToEdit}","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"     * edited with {@code editCustomerDescriptor}.","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"    private static Customer createEditedCustomer(Customer customerToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"                                                 EditCustomerDescriptor editCustomerDescriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"        assert customerToEdit !\u003d null;","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"        Name updatedName \u003d editCustomerDescriptor.getName().orElse(customerToEdit.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        Phone updatedPhone \u003d editCustomerDescriptor.getPhone().orElse(customerToEdit.getPhone());","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        Email updatedEmail \u003d editCustomerDescriptor.getEmail().orElse(customerToEdit.getEmail());","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"        Address updatedAddress \u003d editCustomerDescriptor.getAddress().orElse(customerToEdit.getAddress());","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        Set\u003cTag\u003e updatedTags \u003d editCustomerDescriptor.getTags().orElse(customerToEdit.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"        Remark updatedRemark \u003d editCustomerDescriptor.getRemark().orElse(customerToEdit.getRemark());","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"        Done updatedDone \u003d editCustomerDescriptor.getDone().orElse(customerToEdit.getDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"        Date updatedDate \u003d editCustomerDescriptor.getDate().orElse(customerToEdit.getDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"        return new Customer(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"                updatedRemark, updatedDate, updatedTags, updatedDone);","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 editCustomerDescriptor.equals(e.editCustomerDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"     * Stores the details to edit the customer with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"     * corresponding field value of the customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"    public static class EditCustomerDescriptor {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":142,"author":{"gitId":"CSjiade"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":143,"author":{"gitId":"CSjiade"},"content":"        private Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":144,"author":{"gitId":"pasha-292"},"content":"        private Date date;","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"pasha-292"},"content":"        public EditCustomerDescriptor() {","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"        public EditCustomerDescriptor(EditCustomerDescriptor toCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":158,"author":{"gitId":"pasha-292"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"CSjiade"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"CSjiade"},"content":"            setDone(toCopy.done);","lastModifiedDate":"2021-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"pasha-292"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, date, remark);","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":203,"author":{"gitId":"CSjiade"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"CSjiade"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"CSjiade"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"CSjiade"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"CSjiade"},"content":"        public void setDone(Done done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":212,"author":{"gitId":"CSjiade"},"content":"            this.done \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":213,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":214,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":215,"author":{"gitId":"pasha-292"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"pasha-292"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"pasha-292"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"pasha-292"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"CSjiade"},"content":"        public Optional\u003cDone\u003e getDone() {","lastModifiedDate":"2021-03-15"},{"lineNumber":224,"author":{"gitId":"CSjiade"},"content":"            return Optional.ofNullable(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":225,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":226,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":239,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":246,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":248,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":252,"author":{"gitId":"cheunggalen"},"content":"            if (!(other instanceof EditCustomerDescriptor)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":257,"author":{"gitId":"cheunggalen"},"content":"            EditCustomerDescriptor e \u003d (EditCustomerDescriptor) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":261,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":262,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":263,"author":{"gitId":"CSjiade"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-15"},{"lineNumber":264,"author":{"gitId":"pasha-292"},"content":"                    \u0026\u0026 getDone().equals(e.getDone())","lastModifiedDate":"2021-03-24"},{"lineNumber":265,"author":{"gitId":"pasha-292"},"content":"                    \u0026\u0026 getDate().equals(e.getDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"cheunggalen":61,"pasha-292":20,"-":162,"CSjiade":25}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TimeForWheels as requested ...\";","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cheunggalen":2,"pasha-292":1,"-":16}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":" * Finds and lists all customers in delivery list whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all customers whose names contain any of \"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    private final AttributeContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    public FindCommand(AttributeContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"                String.format(Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW, model.getFilteredCustomerList().size()));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cheunggalen":10,"-":33}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":2,"-":19}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":" * Lists all customer in the delivery list to the user.","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all customers\";","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":6,"-":18}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"            + \": Edits the remark of the customer identified \"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"            + \"by the index number used in the last customer listing. \"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Customer: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Customer: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    private final Index index;","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     * @param index of the customer in the filtered customer list to edit the remark","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"     * @param remark of the customer to be updated to","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"            return true;","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"            return false;","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"        // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        Customer customerToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d new Customer(customerToEdit.getName(), customerToEdit.getPhone(),","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"                customerToEdit.getEmail(), customerToEdit.getAddress(), remark, customerToEdit.getDate(),","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"                customerToEdit.getTags(), customerToEdit.getDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        model.setCustomer(customerToEdit, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        return new CommandResult(generateSuccessMessage(editedCustomer));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"    private String generateSuccessMessage(Customer editedCustomer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"CSjiade"},"content":"                : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        return String.format(message, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"cheunggalen":25,"pasha-292":1,"CSjiade":63}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/SortCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-04-03"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-03"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-04-03"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-04-03"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;","lastModifiedDate":"2021-04-03"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import java.util.Set;","lastModifiedDate":"2021-04-03"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    public static final String COMMAND_WORD \u003d \"sort\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": sort all deliveries based on urgency followed by date\"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Sorted all delivery entries.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e currentList \u003d new ArrayList\u003c\u003e(model.getDeliveryList().getCustomerList());","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        currentList.sort((x, y) -\u003e {","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"            LocalDate d1 \u003d x.getDate().getLocalDate();","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"            LocalDate d2 \u003d y.getDate().getLocalDate();","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"            return d1.compareTo(d2);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        });","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e doneList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e notDoneList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        int size \u003d currentList.size();","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"            Customer customer \u003d currentList.get(i);","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"            boolean isDone \u003d customer.getDone().value.equals(\"[✓]\");","lastModifiedDate":"2021-04-02"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"            if (isDone) {","lastModifiedDate":"2021-04-02"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"                doneList.add(customer);","lastModifiedDate":"2021-04-02"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"                notDoneList.add(customer);","lastModifiedDate":"2021-04-02"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e urgentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e notUrgentList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        size \u003d notDoneList.size();","lastModifiedDate":"2021-04-02"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"            Customer customer \u003d notDoneList.get(i);","lastModifiedDate":"2021-04-02"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"            Set\u003cTag\u003e tags \u003d customer.getTags();","lastModifiedDate":"2021-04-02"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"            boolean isUrgent \u003d false;","lastModifiedDate":"2021-04-02"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"            for (Tag tag : tags) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                if (tag.tagName.equals(\"urgent\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                    urgentList.add(customer);","lastModifiedDate":"2021-04-02"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"                    isUrgent \u003d true;","lastModifiedDate":"2021-04-02"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"                    break;","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"            if (!isUrgent) {","lastModifiedDate":"2021-04-02"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"                notUrgentList.add(customer);","lastModifiedDate":"2021-04-02"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"        urgentList.addAll(notUrgentList);","lastModifiedDate":"2021-04-02"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        urgentList.addAll(doneList);","lastModifiedDate":"2021-04-02"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList sortedList \u003d new DeliveryList();","lastModifiedDate":"2021-04-02"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"        for (Customer customer : urgentList) {","lastModifiedDate":"2021-04-02"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"            sortedList.addCustomer(customer);","lastModifiedDate":"2021-04-02"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-04-02"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        model.setDeliveryList(sortedList);","lastModifiedDate":"2021-04-02"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"cheunggalen":78}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/StatsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static seedu.timeforwheels.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import java.time.Period;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":" * Lists all customer in the delivery list to the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"public class StatsCommand extends Command {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"    public static final String COMMAND_WORD \u003d \"stats\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    public static final String CHECKMARK \u003d \"[✓]\";","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Here are the summary statistics \\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            + \"Deliveries Done : %1$s\\n\" + \"Deliveries Not Done : %2$s\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            + \"Deliveries Due: %3$s\\n\" + \"Deliveries Not Due: %4$s\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"            + \"Fragile Deliveries : %5$s\\n\" + \"Liquid Deliveries : %6$s\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"            + \"Food Deliveries : %7$s\\n\" + \"Hot Deliveries : %8$s\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"            + \"Cold Deliveries : %9$s\\n\" + \"Heavy Deliveries : %10$s\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"            + \"Bulky Deliveries : %11$s\\n\" + \"Urgent Deliveries : %12$s\\n\"","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"            + \"Other Deliveries : %13$s\\n\";","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    public final String[] tagList \u003d {\"[hot]\", \"[liquid]\", \"[heavy]\", \"[fragile]\",","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"        \"[bulky]\", \"[food]\", \"[cold]\", \"[urgent]\"};","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    public final HashMap\u003cString, Integer\u003e tagMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"        List\u003cCustomer\u003e lastShownList \u003d model.getFilteredCustomerList();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        double size \u003d lastShownList.size();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"        double tagless \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"        double doneCounter \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"        int deliveriesDone;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"        int deliveriesNotDone;","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"        double liquidPercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"        double heavyPercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"        double fragilePercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"        double taglessPercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"        double donePercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"        double hotPercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"        double bulkyPercentage;","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"        double coldPercentage;","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"        double foodPercentage;","lastModifiedDate":"2021-04-07"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        double urgentPercentage;","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"        double deliveriesNotdue \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"        double deliveriesDue \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"        double deliveriesDuePercentage;","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"            return new CommandResult(String.format(\"No Data\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"        for (Customer customer : lastShownList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"            if (customer.getDone().toString().equals(CHECKMARK)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"                doneCounter +\u003d 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"        for (Customer customer : lastShownList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"            Set\u003cTag\u003e customerTag \u003d customer.getTag();","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"            if (customerTag.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"                tagless +\u003d 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"            for (Tag tag : customerTag) {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"                for (String taglist : tagList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"                    if (tag.toString().equals(taglist)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"                        tagMap.put(tag.toString(), tagMap.getOrDefault(tag.toString(), 0) + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"                    }","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"        liquidPercentage \u003d (tagMap.getOrDefault(\"[liquid]\", 0) / size) * 100;","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"CSjiade"},"content":"        heavyPercentage \u003d (tagMap.getOrDefault(\"[heavy]\", 0) / size) * 100;","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"        fragilePercentage \u003d (tagMap.getOrDefault(\"[fragile]\", 0) / size) * 100;","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"CSjiade"},"content":"        bulkyPercentage \u003d (tagMap.getOrDefault(\"[bulky]\", 0) / size) * 100;","lastModifiedDate":"2021-04-07"},{"lineNumber":86,"author":{"gitId":"CSjiade"},"content":"        coldPercentage \u003d (tagMap.getOrDefault(\"[cold]\", 0) / size) * 100;","lastModifiedDate":"2021-04-07"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"        foodPercentage \u003d (tagMap.getOrDefault(\"[food]\", 0) / size) * 100;","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"        urgentPercentage \u003d (tagMap.getOrDefault(\"[urgent]\", 0) / size) * 100;","lastModifiedDate":"2021-04-07"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"        hotPercentage \u003d (tagMap.getOrDefault(\"[hot]\", 0) / size) * 100;","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":91,"author":{"gitId":"CSjiade"},"content":"        taglessPercentage \u003d (tagless / size) * 100;","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"CSjiade"},"content":"        donePercentage \u003d (doneCounter / size) * 100;","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"CSjiade"},"content":"        deliveriesDone \u003d (int) doneCounter;","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"        deliveriesNotDone \u003d (int) size - deliveriesDone;","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"CSjiade"},"content":"        LocalDate now \u003d LocalDate.now();","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"        for (Customer customer : lastShownList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":"            seedu.timeforwheels.model.customer.Date c \u003d customer.getDate();","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"CSjiade"},"content":"            Period period \u003d Period.between(c.getLocalDate(), now);","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"CSjiade"},"content":"            if (period.getDays() \u003c 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"                deliveriesNotdue +\u003d 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"CSjiade"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"CSjiade"},"content":"            if (period.getDays() \u003e 0) {","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"CSjiade"},"content":"                if (!customer.getDone().toString().equals(\"[✓]\")) {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"CSjiade"},"content":"                    deliveriesDue +\u003d 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"                }","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"CSjiade"},"content":"        deliveriesDuePercentage \u003d (deliveriesDue / size) * 100;","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"CSjiade"},"content":"        int liquid \u003d tagMap.getOrDefault(\"[liquid]\", 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"CSjiade"},"content":"        int fragile \u003d tagMap.getOrDefault(\"[fragile]\", 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"        int hot \u003d tagMap.getOrDefault(\"[hot]\", 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"        int heavy \u003d tagMap.getOrDefault(\"[heavy]\", 0);","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"        int cold \u003d tagMap.getOrDefault(\"[cold]\", 0);","lastModifiedDate":"2021-04-07"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"        int bulky \u003d tagMap.getOrDefault(\"[bulky]\", 0);","lastModifiedDate":"2021-04-07"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"        int food \u003d tagMap.getOrDefault(\"[food]\", 0);","lastModifiedDate":"2021-04-07"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"        int urgent \u003d tagMap.getOrDefault(\"[urgent]\", 0);","lastModifiedDate":"2021-04-07"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"        int deliveryDue \u003d (int) deliveriesDue;","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"CSjiade"},"content":"        int deliveryNotDue \u003d (int) size - deliveryDue;","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"        int notag \u003d (int) tagless;","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"CSjiade"},"content":"        model.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"CSjiade"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"CSjiade"},"content":"                deliveriesDone + \" ( \" + String.format(\"%.2f\", donePercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"CSjiade"},"content":"                deliveriesNotDone + \" ( \" + String.format(\"%.2f\", 100 - donePercentage)","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"CSjiade"},"content":"                        + \"%\" + \" )\",","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"CSjiade"},"content":"                deliveryDue + \" ( \" + String.format(\"%.2f\", deliveriesDuePercentage)","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"CSjiade"},"content":"                        + \"%\" + \" )\",","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"CSjiade"},"content":"                deliveryNotDue - deliveriesDone + \" ( \" + String.format(\"%.2f\",","lastModifiedDate":"2021-04-07"},{"lineNumber":133,"author":{"gitId":"CSjiade"},"content":"                        100 - deliveriesDuePercentage - donePercentage)","lastModifiedDate":"2021-04-07"},{"lineNumber":134,"author":{"gitId":"CSjiade"},"content":"                        + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":135,"author":{"gitId":"CSjiade"},"content":"                fragile + \" ( \" + String.format(\"%.2f\", fragilePercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":136,"author":{"gitId":"CSjiade"},"content":"                liquid + \" ( \" + String.format(\"%.2f\", liquidPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":137,"author":{"gitId":"CSjiade"},"content":"                food + \" ( \" + String.format(\"%.2f\", foodPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":138,"author":{"gitId":"CSjiade"},"content":"                hot + \" ( \" + String.format(\"%.2f\", hotPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":139,"author":{"gitId":"CSjiade"},"content":"                cold + \" ( \" + String.format(\"%.2f\", coldPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":140,"author":{"gitId":"CSjiade"},"content":"                heavy + \" ( \" + String.format(\"%.2f\", heavyPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":141,"author":{"gitId":"CSjiade"},"content":"                bulky + \" ( \" + String.format(\"%.2f\", bulkyPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":142,"author":{"gitId":"CSjiade"},"content":"                urgent + \" ( \" + String.format(\"%.2f\", urgentPercentage) + \"%\" + \" )\",","lastModifiedDate":"2021-04-07"},{"lineNumber":143,"author":{"gitId":"CSjiade"},"content":"                notag + \" ( \" + String.format(\"%.2f\", taglessPercentage) + \"%\" + \" )\"","lastModifiedDate":"2021-04-07"},{"lineNumber":144,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":145,"author":{"gitId":"CSjiade"},"content":"        ));","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"CSjiade":147}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/UncompletedCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":" * Finds and lists all uncompleted deliveries in delivery list","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"public class UncompletedCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public static final String COMMAND_WORD \u003d \"uncompleted\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filter all uncompleted deliveries\"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    public CommandResult execute (Model model) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"        String trimmedArgs \u003d \"[X]\";","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate uncomplete \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"            new AttributeContainsKeywordsPredicate(Arrays.asList(nameKeywords));","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        model.updateFilteredCustomerList(uncomplete);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"                String.format(Messages.MESSAGE_CUSTOMERS_UNCOMPLETED, model.getFilteredCustomerList().size()));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"cheunggalen":3,"Jacob-109":29}},{"path":"src/main/java/seedu/timeforwheels/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands.exceptions;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"cheunggalen":1,"-":16}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.AddCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.customer.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Done;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"                        PREFIX_ADDRESS, PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"                PREFIX_EMAIL, PREFIX_DATE) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"                    AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"        Done done \u003d new Done(\"[X]\"); // add command does not allow adding done straight away","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"        Customer customer \u003d new Customer(name, phone, email, address, remark, date, tagList, done);","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        return new AddCommand(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"cheunggalen":18,"Jacob-109":1,"pasha-292":6,"-":34,"CSjiade":10}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"cheunggalen":1,"-":59}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"cheunggalen":1,"-":147}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cheunggalen":1,"pasha-292":1,"-":15,"CSjiade":1}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cheunggalen":5,"-":24}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/DeliveryListParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.AddCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.Command;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.CompletedCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.EditCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.FindCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.ListCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.SortCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"import seedu.timeforwheels.logic.commands.StatsCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"import seedu.timeforwheels.logic.commands.UncompletedCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"public class DeliveryListParser {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"        case CompletedCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"            return new CompletedCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"        case UncompletedCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":"            return new UncompletedCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"        case StatsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"CSjiade"},"content":"            return new StatsCommand();","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        case SortCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"            return new SortCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":9,"Jacob-109":19,"-":62,"CSjiade":11}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":" * Parses input arguments and creates a new DoneCommand object.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"cheunggalen":5,"CSjiade":23}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"                        PREFIX_DATE, PREFIX_TAG);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        EditCommand.EditCustomerDescriptor editCustomerDescriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"            editCustomerDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"            editCustomerDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"            editCustomerDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"            editCustomerDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"            editCustomerDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editCustomerDescriptor::setTags);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        if (!editCustomerDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        return new EditCommand(index, editCustomerDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cheunggalen":19,"pasha-292":10,"-":61}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.FindCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        return new FindCommand(new AttributeContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"cheunggalen":6,"-":27}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.Command;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"cheunggalen":3,"-":13}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.StringUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.customer.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"     * Parses a {@code String date} into an {@code Date}.","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"pasha-292"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"pasha-292"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"pasha-292"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"pasha-292"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"pasha-292"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"pasha-292"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"pasha-292"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"cheunggalen":9,"pasha-292":16,"-":115}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"cheunggalen":1,"-":38}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"        Index index;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        try {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"cheunggalen":8,"CSjiade":27}},{"path":"src/main/java/seedu/timeforwheels/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser.exceptions;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"cheunggalen":2,"-":15}},{"path":"src/main/java/seedu/timeforwheels/model/DeliveryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.UniqueCustomerList;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":" * Wraps all data at the delivery-list level","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":" * Duplicates are not allowed (by .isSameCustomer comparison)","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"public class DeliveryList implements ReadOnlyDeliveryList {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    private final UniqueCustomerList customers;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    /*","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        customers \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryList() {}","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"     * Creates an DeliveryList using the Customers in the {@code toBeCopied}","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryList(ReadOnlyDeliveryList toBeCopied) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        this();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Replaces the contents of the customer list with {@code customers}.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        this.customers.setCustomers(customers);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"     * Resets the existing data of this {@code DeliveryList} with {@code newData}.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public void resetData(ReadOnlyDeliveryList newData) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        setCustomers(newData.getCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"    //// customer-level operations","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"        return customers.contains(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"     * Adds a customer to the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"     * The customer must not already exist in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"    public void addCustomer(Customer c) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        customers.add(c);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"     * Replaces the given customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"     * {@code target} must exist in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"     * another existing customer in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        customers.setCustomer(target, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"     * Removes {@code key} from this {@code DeliveryList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"     * {@code key} must exist in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"    public void removeCustomer(Customer key) {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        customers.remove(key);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"    //// util methods","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"        return customers.asUnmodifiableObservableList().size() + \" customers\";","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"    public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        return customers.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"                || (other instanceof DeliveryList // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 customers.equals(((DeliveryList) other).customers));","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"        return customers.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":121}},{"path":"src/main/java/seedu/timeforwheels/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    Predicate\u003cCustomer\u003e PREDICATE_SHOW_ALL_CUSTOMERS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     * Returns the user prefs\u0027 delivery list file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    Path getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Sets the user prefs\u0027 delivery list file path.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    void setDeliveryListFilePath(Path deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"     * Replaces delivery list data with the data in {@code deliveryList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    void setDeliveryList(ReadOnlyDeliveryList deliveryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    /** Returns the DeliveryList */","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    ReadOnlyDeliveryList getDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"     * Returns true if a customer with the same identity as {@code customer} exists in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    boolean hasCustomer(Customer customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"     * Deletes the given customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"     * The customer must exist in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    void deleteCustomer(Customer target);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"     * Adds the given customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"     * {@code customer} must not already exist in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"    void addCustomer(Customer customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"     * Replaces the given customer {@code target} with {@code editedCustomer}.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"     * {@code target} must exist in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"     * another existing customer in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"    void setCustomer(Customer target, Customer editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"    /** Returns an unmodifiable view of the filtered customer list */","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"    ObservableList\u003cCustomer\u003e getFilteredCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"     * Updates the filter of the filtered customer list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"    void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheunggalen":29,"-":59}},{"path":"src/main/java/seedu/timeforwheels/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":" * Represents the in-memory model of the delivery list data.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    private final DeliveryList deliveryList;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    private final FilteredList\u003cCustomer\u003e filteredCustomers;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     * Initializes a ModelManager with the given deliveryList and userPrefs.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public ModelManager(ReadOnlyDeliveryList deliveryList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        requireAllNonNull(deliveryList, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"        logger.fine(\"Initializing with delivery list: \" + deliveryList + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        this.deliveryList \u003d new DeliveryList(deliveryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        filteredCustomers \u003d new FilteredList\u003c\u003e(this.deliveryList.getCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        this(new DeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"    public Path getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        return userPrefs.getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"    public void setDeliveryListFilePath(Path deliveryListFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        userPrefs.setDeliveryListFilePath(deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DeliveryList \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"    public void setDeliveryList(ReadOnlyDeliveryList deliveryList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        this.deliveryList.resetData(deliveryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"    public ReadOnlyDeliveryList getDeliveryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        return deliveryList;","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"    public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        return deliveryList.hasCustomer(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"    public void deleteCustomer(Customer target) {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.removeCustomer(target);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"    public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.addCustomer(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.setCustomer(target, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Customer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"     * Returns an unmodifiable view of the list of {@code Customer} backed by the internal list of","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"     * {@code versionedDeliveryList}","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"    public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        return filteredCustomers;","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"    public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"        filteredCustomers.setPredicate(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"        return deliveryList.equals(other.deliveryList)","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 filteredCustomers.equals(other.filteredCustomers);","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":45,"-":106}},{"path":"src/main/java/seedu/timeforwheels/model/ReadOnlyDeliveryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Unmodifiable view of an delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"public interface ReadOnlyDeliveryList {","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"     * Returns an unmodifiable view of the customers list.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"     * This list will not contain any duplicate customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    ObservableList\u003cCustomer\u003e getCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":17}},{"path":"src/main/java/seedu/timeforwheels/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    Path getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"cheunggalen":3,"-":13}},{"path":"src/main/java/seedu/timeforwheels/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    private Path deliveryListFilePath \u003d Paths.get(\"data\" , \"deliverylist.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        setDeliveryListFilePath(newUserPrefs.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    public Path getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        return deliveryListFilePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"    public void setDeliveryListFilePath(Path deliveryListFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        this.deliveryListFilePath \u003d deliveryListFilePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 deliveryListFilePath.equals(o.deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        return Objects.hash(guiSettings, deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        sb.append(\"\\nLocal data file location : \" + deliveryListFilePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":12,"-":75}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer\u0027s address in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":3,"-":54}},{"path":"src/main/java/seedu/timeforwheels/model/customer/AttributeContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.StringUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":" * Tests that a {@code Customer}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"public class AttributeContainsKeywordsPredicate implements Predicate\u003cCustomer\u003e {","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    public AttributeContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    public boolean test(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(customer.getName().fullName, keyword)","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"                        || StringUtil.containsWordIgnoreCase(customer.getAddress().value, keyword)","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"                        || StringUtil.containsWordIgnoreCase(customer.getPhone().value, keyword)","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"                        || StringUtil.containsWordIgnoreCase(customer.getDate().value, keyword)","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"                        || StringUtil.containsWordIgnoreCase(customer.getDone().value, keyword)","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"                        || StringUtil.containsWordIgnoreCase(customer.getEmail().value, keyword)","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"                        || StringUtil.containsWordIgnoreCase(customer.getRemark().value, keyword)","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"                        || matchTags(keyword, customer.getTag()));","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"     * Returns true if keyword matches a certain tag","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"     * @param keyword","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"     * @param tags","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"     * @return if a match is found","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    public boolean matchTags(String keyword, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        boolean result \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"            for (Tag tag : tags) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"                if (StringUtil.containsWordIgnoreCase(tag.tagName, keyword)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"                    result \u003d true;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"                }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"            return result;","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                || (other instanceof AttributeContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-04-07"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 keywords.equals(((AttributeContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheunggalen":10,"Jacob-109":1,"pasha-292":28,"-":21}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Customer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"public class Customer {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    private final Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"    private final Date date;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    public Customer(Name name, Phone phone, Email email, Address address, Remark remark,","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"                    Date date, Set\u003cTag\u003e tags, Done done) {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"        return remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"    public Done getDone() {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"        return done;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"    public Date getDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"        return date;","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"    public Set\u003cTag\u003e getTag() {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"        return this.tags;","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"     * Returns true if both customers have the same name.","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"     * This defines a weaker notion of equality between two customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"    public boolean isSameCustomer(Customer otherCustomer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        if (otherCustomer \u003d\u003d this) {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"        return otherCustomer !\u003d null","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 otherCustomer.getName().equals(getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"     * Returns true if both customers have the same identity and data fields.","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"     * This defines a stronger notion of equality between two customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"        if (!(other instanceof Customer)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"        Customer otherCustomer \u003d (Customer) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"        return otherCustomer.getName().equals(getName())","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 otherCustomer.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 otherCustomer.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 otherCustomer.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"pasha-292"},"content":"                \u0026\u0026 otherCustomer.getTags().equals(getTags())","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"                \u0026\u0026 otherCustomer.getDate().equals(getDate());","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"        return Objects.hash(name, phone, email, address, date, tags, done);","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"CSjiade"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"pasha-292"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"                .append(getDate())","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"CSjiade"},"content":"                .append(getDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":19,"pasha-292":13,"-":100,"CSjiade":18}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"public class Date {","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be of the format YYYY-MM-DD, and must not be blank.\";","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    /*","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"     * The first character of the date must not be a whitespace,","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\";","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    public final String value;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"     * @param date A valid address.","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"    public Date(String date) {","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        value \u003d date;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"            return true;","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"            return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    public LocalDate getLocalDate() {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"        return this.date;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"    public String toString() {","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"        assert isValidDate(value);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd LLLL yyyy\");","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"        return date.format(formatter);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-20"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"cheunggalen":2,"pasha-292":62,"CSjiade":4}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Done.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer\u0027s remark in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"public class Done {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * @param done A valid string.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    public Done(String done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        value \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"                || (other instanceof Done // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"                \u0026\u0026 value.equals(((Done) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"cheunggalen":2,"CSjiade":40}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer\u0027s email in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":3,"-":64}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer\u0027s name in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"            \"Names should only contain alphanumeric characters and spaces. It should not be blank\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":3,"pasha-292":1,"-":55}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer\u0027s phone number in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":3,"-":50}},{"path":"src/main/java/seedu/timeforwheels/model/customer/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":" * Represents a Customer\u0027s remark in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"public class Remark {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"    public final String value;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"     * Creates a Remark object to be associated with a Customer object.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * @param remark a non null remark","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        value \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    public String toString() {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        return value;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"cheunggalen":3,"CSjiade":35}},{"path":"src/main/java/seedu/timeforwheels/model/customer/UniqueCustomerList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":" * A list of customers that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":" * A customer is considered unique by comparing using {@code Customer#isSameCustomer(Customer)}.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":" * As such, adding and updating of customers uses Customer#isSameCustomer(Customer) for equality","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":" * so as to ensure that the customer being added or updated is unique in terms of identity in the UniqueCustomerList.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":" * However, the removal of a customer uses Customer#equals(Object)","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":" * so as to ensure that the customer with exactly the same fields will be removed.","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":" *","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":" *","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":" * @see Customer#isSameCustomer(Customer)","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"public class UniqueCustomerList implements Iterable\u003cCustomer\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    private final ObservableList\u003cCustomer\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    private final ObservableList\u003cCustomer\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"     * Returns true if the list contains an equivalent customer as the given argument.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    public boolean contains(Customer toCheck) {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        return internalList.stream().anyMatch(toCheck::isSameCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"     * Adds a customer to the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * The customer must not already exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"    public void add(Customer toAdd) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"     * Replaces the customer {@code target} in the list with {@code editedCustomer}.","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"     * The customer identity of {@code editedCustomer} must not be the same as another existing customer in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        requireAllNonNull(target, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        if (!target.isSameCustomer(editedCustomer) \u0026\u0026 contains(editedCustomer)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        internalList.set(index, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"     * Removes the equivalent customer from the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"     * The customer must exist in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"    public void remove(Customer toRemove) {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"            throw new CustomerNotFoundException();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers(UniqueCustomerList replacement) {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"     * Replaces the contents of this list with {@code customers}.","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"     * {@code customers} must not contain duplicate customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        requireAllNonNull(customers);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        if (!customersAreUnique(customers)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"            throw new DuplicateCustomerException();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        internalList.setAll(customers);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"    public ObservableList\u003cCustomer\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"    public Iterator\u003cCustomer\u003e iterator() {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"                || (other instanceof UniqueCustomerList // instanceof handles nulls","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"                        \u0026\u0026 internalList.equals(((UniqueCustomerList) other).internalList));","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"     * Returns true if {@code customers} contains only unique customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"    private boolean customersAreUnique(List\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c customers.size() - 1; i++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"            for (int j \u003d i + 1; j \u003c customers.size(); j++) {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"                if (customers.get(i).isSameCustomer(customers.get(j))) {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"                    return false;","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"                }","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"        return true;","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":138}},{"path":"src/main/java/seedu/timeforwheels/model/customer/exceptions/CustomerNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer.exceptions;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" * Signals that the operation is unable to find the specified customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"public class CustomerNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":6}},{"path":"src/main/java/seedu/timeforwheels/model/customer/exceptions/DuplicateCustomerException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer.exceptions;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" * Signals that the operation will result in duplicate Customers","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" * (Customers are considered duplicates if they have the same identity).","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"public class DuplicateCustomerException extends RuntimeException {","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    public DuplicateCustomerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"        super(\"Operation would result in duplicate customers\");","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":11}},{"path":"src/main/java/seedu/timeforwheels/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Represents a Tag in the delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be \\\"urgent\\\", \\\"fragile\\\", \\\"bulky\\\", \"","lastModifiedDate":"2021-04-02"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        + \"\\\"food\\\", \\\"liquid\\\", \\\"hot\\\", \\\"cold\\\", or \\\"heavy\\\".\";","lastModifiedDate":"2021-04-02"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    public static final String[] VALID_TAGS \u003d {\"urgent\", \"fragile\", \"bulky\", \"food\", \"liquid\", \"hot\", \"cold\", \"heavy\"};","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    public static boolean isValidTagName(String inputTag) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        for (String validTag : VALID_TAGS) {","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"            if (validTag.matches(inputTag)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"                return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"cheunggalen":13,"-":45}},{"path":"src/main/java/seedu/timeforwheels/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.customer.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Done;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":" * Contains utility methods for populating {@code DeliveryList} with sample data.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-04-09"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public static final Done NOT_DONE \u003d new Done(\"[X]\");","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    public static final Done DONE \u003d new Done(\"[✓]\");","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public static Customer[] getSampleCustomers() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        return new Customer[] {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"            new Customer(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), new Remark(\"Starbucks coffee\"), new Date(\"2021-01-04\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"                getTagSet(\"liquid\", \"cold\"), DONE),","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"            new Customer(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), new Remark(\"Dell laptop\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"                new Date(\"2021-10-25\"), getTagSet(\"fragile\"), NOT_DONE),","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"            new Customer(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), new Remark(\"work documents\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"                new Date(\"2021-02-10\"), getTagSet(\"urgent\"), DONE),","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"            new Customer(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), new Remark(\"Samsung tv\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"                new Date(\"2021-11-12\"), getTagSet(\"bulky\", \"heavy\"), NOT_DONE),","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"            new Customer(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), new Remark(\"fried wings meal\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"                new Date(\"2021-03-07\"), getTagSet(\"urgent\", \"food\", \"hot\"), DONE),","lastModifiedDate":"2021-04-07"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"            new Customer(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), new Remark(\"iPhone 11 case\"), new Date(\"2021-12-22\"),","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"                getTagSet(), NOT_DONE)","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public static ReadOnlyDeliveryList getSampleDeliveryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList sampleAb \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        for (Customer sampleCustomer : getSampleCustomers()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"            sampleAb.addCustomer(sampleCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"cheunggalen":38,"Jacob-109":1,"pasha-292":1,"-":25,"CSjiade":5}},{"path":"src/main/java/seedu/timeforwheels/storage/DeliveryListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":" * Represents a storage for {@link DeliveryList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"public interface DeliveryListStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    Path getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"     * Returns DeliveryList data as a {@link ReadOnlyDeliveryList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"     * @see #getDeliveryListFilePath()","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     * Saves the given {@link ReadOnlyDeliveryList} to the storage.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * @param deliveryList cannot be null.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    void saveDeliveryList(ReadOnlyDeliveryList deliveryList) throws IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * @see #saveDeliveryList(ReadOnlyDeliveryList)","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"    void saveDeliveryList(ReadOnlyDeliveryList deliveryList, Path filePath) throws IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":46}},{"path":"src/main/java/seedu/timeforwheels/storage/JsonAdaptedCustomer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.customer.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Done;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":" * Jackson-friendly version of {@link Customer}.","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"class JsonAdaptedCustomer {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Customer\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    private final String done;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"    private final String date;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"    private final String remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"     * Constructs a {@code JsonAdaptedCustomer} with the given customer details.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    public JsonAdaptedCustomer(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                               @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"                               @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"                               @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"                               @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"                               @JsonProperty(\"done\") String done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     * Converts a given {@code Customer} into this class for Jackson use.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"    public JsonAdaptedCustomer(Customer source) {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"        date \u003d source.getDate().value;","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"        done \u003d source.getDone().value;","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"     * Converts this Jackson-friendly adapted customer object into the model\u0027s {@code Customer} object.","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"    public Customer toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        final List\u003cTag\u003e customerTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"            customerTags.add(tag.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"CSjiade"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"CSjiade"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(customerTags);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"CSjiade"},"content":"        final Done modelDone \u003d new Done(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"pasha-292"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"pasha-292"},"content":"        return new Customer(modelName, modelPhone, modelEmail, modelAddress, modelRemark,","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"                modelDate, modelTags, modelDone);","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":23,"pasha-292":14,"-":79,"CSjiade":26}},{"path":"src/main/java/seedu/timeforwheels/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":3,"-":45}},{"path":"src/main/java/seedu/timeforwheels/storage/JsonDeliveryListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.FileUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.JsonUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":" * A class to access DeliveryList data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"public class JsonDeliveryListStorage implements DeliveryListStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonDeliveryListStorage.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public JsonDeliveryListStorage(Path filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public Path getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        return filePath;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    public Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList() throws DataConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        return readDeliveryList(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"     * Similar to {@link #readDeliveryList()}.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    public Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        Optional\u003cJsonSerializableDeliveryList\u003e jsonDeliveryList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"                filePath, JsonSerializableDeliveryList.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        if (!jsonDeliveryList.isPresent()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"            return Optional.of(jsonDeliveryList.get().toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"    public void saveDeliveryList(ReadOnlyDeliveryList deliveryList) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        saveDeliveryList(deliveryList, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"     * Similar to {@link #saveDeliveryList(ReadOnlyDeliveryList)}.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"    public void saveDeliveryList(ReadOnlyDeliveryList deliveryList, Path filePath) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(deliveryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableDeliveryList(deliveryList), filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":80}},{"path":"src/main/java/seedu/timeforwheels/storage/JsonSerializableDeliveryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":" * An Immutable DeliveryList that is serializable to JSON format.","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"@JsonRootName(value \u003d \"deliverylist\")","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"class JsonSerializableDeliveryList {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    public static final String MESSAGE_DUPLICATE_CUSTOMER \u003d \"Customers list contains duplicate customer(s).\";","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    private final List\u003cJsonAdaptedCustomer\u003e customers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     * Constructs a {@code JsonSerializableDeliveryList} with the given customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public JsonSerializableDeliveryList(@JsonProperty(\"customers\") List\u003cJsonAdaptedCustomer\u003e customers) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        this.customers.addAll(customers);","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     * Converts a given {@code ReadOnlyDeliveryList} into this class for Jackson use.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableDeliveryList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    public JsonSerializableDeliveryList(ReadOnlyDeliveryList source) {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        customers.addAll(source.getCustomerList().stream().map(JsonAdaptedCustomer::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     * Converts this delivery list into the model\u0027s {@code DeliveryList} object.","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryList toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList deliveryList \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        for (JsonAdaptedCustomer jsonAdaptedCustomer : customers) {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"            Customer customer \u003d jsonAdaptedCustomer.toModelType();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"            if (deliveryList.hasCustomer(customer)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"            deliveryList.addCustomer(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        return deliveryList;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":60}},{"path":"src/main/java/seedu/timeforwheels/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.JsonUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":5,"-":42}},{"path":"src/main/java/seedu/timeforwheels/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"public interface Storage extends DeliveryListStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    Path getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    void saveDeliveryList(ReadOnlyDeliveryList deliveryList) throws IOException;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheunggalen":9,"-":23}},{"path":"src/main/java/seedu/timeforwheels/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":" * Manages storage of DeliveryList data in local storage.","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    private DeliveryListStorage deliveryListStorage;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * Creates a {@code StorageManager} with the given {@code DeliveryListStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public StorageManager(DeliveryListStorage deliveryListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        this.deliveryListStorage \u003d deliveryListStorage;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d DeliveryList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public Path getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        return deliveryListStorage.getDeliveryListFilePath();","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    public Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        return readDeliveryList(deliveryListStorage.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"    public Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        return deliveryListStorage.readDeliveryList(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"    public void saveDeliveryList(ReadOnlyDeliveryList deliveryList) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        saveDeliveryList(deliveryList, deliveryListStorage.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"    public void saveDeliveryList(ReadOnlyDeliveryList deliveryList, Path filePath) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        deliveryListStorage.saveDeliveryList(deliveryList, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":22,"-":57}},{"path":"src/main/java/seedu/timeforwheels/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":" * Represents a storage for {@link seedu.timeforwheels.model.UserPrefs}.","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"     * Saves the given {@link seedu.timeforwheels.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":6,"-":30}},{"path":"src/main/java/seedu/timeforwheels/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.CommandResult;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"         * @see seedu.timeforwheels.logic.Logic#execute(String)","lastModifiedDate":"2021-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"cheunggalen":5,"-":80}},{"path":"src/main/java/seedu/timeforwheels/ui/CustomerCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":" * An UI component that displays information of a {@code Customer}.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"public class CustomerCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    private static final String FXML \u003d \"CustomerListCard.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/deliverylist-level4/issues/336\"\u003eThe issue on DeliveryList level 4\u003c/a\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    public final Customer customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"    @FXML","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"    private Label done;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    private Label remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"    @FXML","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"    private Label date;","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"     * Creates a {@code CustomerCode} with the given {@code Customer} and index to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public CustomerCard(Customer customer, int displayedIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        this.customer \u003d customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"        name.setText(\"Name: \" + customer.getName().fullName);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"        phone.setText(\"Phone: \" + customer.getPhone().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"        address.setText(\"Address: \" + customer.getAddress().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"        email.setText(\"Email: \" + customer.getEmail().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"        date.setText(\"Date: \" + customer.getDate().toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"        remark.setText(\"Remark: \" + customer.getRemark().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"        done.setText(\"Completed: \" + customer.getDone().value);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        customer.getTags().stream()","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        if (!(other instanceof CustomerCard)) {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        CustomerCard card \u003d (CustomerCard) other;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"                \u0026\u0026 customer.equals(card.customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheunggalen":14,"Jacob-109":7,"pasha-292":2,"-":59,"CSjiade":4}},{"path":"src/main/java/seedu/timeforwheels/ui/CustomerListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":" * Panel containing the list of customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"public class CustomerListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    private static final String FXML \u003d \"CustomerListPanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(CustomerListPanel.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    private ListView\u003cCustomer\u003e customerListView;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * Creates a {@code CustomerListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public CustomerListPanel(ObservableList\u003cCustomer\u003e customerList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        customerListView.setItems(customerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        customerListView.setCellFactory(listView -\u003e new CustomerListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    public Logger getLogger() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"        return logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Customer} using a {@code CustomerCard}.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    static class CustomerListViewCell extends ListCell\u003cCustomer\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        protected void updateItem(Customer customer, boolean empty) {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"            super.updateItem(customer, empty);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"            if (empty || customer \u003d\u003d null) {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"                setText(null);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"            } else {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"                setGraphic(new CustomerCard(customer, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":53}},{"path":"src/main/java/seedu/timeforwheels/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    public static final String HELP_MESSAGE \u003d \"Add delivery task - add n/NAME p/PHONE a/ADDRESS \"","lastModifiedDate":"2021-04-10"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"            + \"e/EMAIL t/TAG d/DATETIME \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"            + \"Edit delivery task (only way to add tag(s)\"","lastModifiedDate":"2021-04-10"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"            + \" - edit INDEX n/NAME p/PHONE a/ADDRESS e/EMAIL t/TAG d/DATETIME \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"            + \"Add remark (usually for parcel name) - remark INDEX r/REMARK \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"            + \"Delete delivery task - delete INDEX \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"            + \"Clear delivery tasks - clear \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"            + \"List delivery tasks - list \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"            + \"Mark delivery tasks as done - done INDEX \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"            + \"Find delivery task - find KEYWORD \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"            + \"Sort the delivery tasks by completion status (incomplete first), urgency (for incomplete), then date\"","lastModifiedDate":"2021-04-10"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"            + \" - sort \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"            + \"Statistics of delivery workflow - stats \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"            + \"View completed delivery tasks - completed \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"            + \"View uncompleted delivery tasks - uncompleted \\n\"","lastModifiedDate":"2021-04-10"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"            + \"For more detailed examples, please refer to our user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheunggalen":8,"Jacob-109":11,"-":98}},{"path":"src/main/java/seedu/timeforwheels/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.Logic;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.CommandResult;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    private CustomerListPanel customerListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    private StackPane customerListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"        customerListPanel \u003d new CustomerListPanel(logic.getFilteredCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"        customerListPanelPlaceholder.getChildren().add(customerListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"    public CustomerListPanel getCustomerListPanel() {","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"        return customerListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"cheunggalen"},"content":"     * @see seedu.timeforwheels.logic.Logic#execute(String)","lastModifiedDate":"2021-03-20"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheunggalen":15,"-":181}},{"path":"src/main/java/seedu/timeforwheels/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheunggalen":1,"-":27}},{"path":"src/main/java/seedu/timeforwheels/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":27}},{"path":"src/main/java/seedu/timeforwheels/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"cheunggalen":1,"-":12}},{"path":"src/main/java/seedu/timeforwheels/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.MainApp;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.LogsCenter;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.StringUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.Logic;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/TimesForWheelsLogo.png\";","lastModifiedDate":"2021-04-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheunggalen":5,"pasha-292":1,"-":83}},{"path":"src/main/java/seedu/timeforwheels/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.MainApp;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"cheunggalen":2,"-":86}},{"path":"src/main/resources/view/CustomerListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"      \u003cLabel fx:id\u003d\"done\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$done\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"pasha-292":1,"-":36,"CSjiade":2}},{"path":"src/main/resources/view/CustomerListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"  \u003cListView fx:id\u003d\"customerListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":7}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color:derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"Jacob-109"},"content":"    -fx-background-color: #169873;","lastModifiedDate":"2021-04-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"Jacob-109"},"content":"    -fx-background-color: #9EBD6E;","lastModifiedDate":"2021-04-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"    -fx-background-color: #33673B;","lastModifiedDate":"2021-04-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"Jacob-109"},"content":"     -fx-background-color: derive(#495867, 20%);","lastModifiedDate":"2021-04-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"Jacob-109"},"content":"     -fx-background-color: derive(#495867, 20%);","lastModifiedDate":"2021-04-10"},{"lineNumber":141,"author":{"gitId":"Jacob-109"},"content":"     -fx-border-color: derive(#495867, 10%);","lastModifiedDate":"2021-04-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"Jacob-109"},"content":"    -fx-background-color: derive(#495867, 30%);","lastModifiedDate":"2021-04-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"Jacob-109"},"content":"    -fx-background-color: transparent,#169873, transparent, #169873;","lastModifiedDate":"2021-04-10"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"cheunggalen"},"content":"#filterField, #customerListPanel, #customerWebpage {","lastModifiedDate":"2021-03-24"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"Jacob-109"},"content":"    -fx-background-color: transparent,#9EBD6E, transparent,#9EBD6E;","lastModifiedDate":"2021-04-10"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"cheunggalen":1,"Jacob-109":9,"-":342}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"         title\u003d\"TimeForWheels\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"    \u003cImage url\u003d\"@/images/TimesForWheelsLogo.png\" /\u003e","lastModifiedDate":"2021-04-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        \u003cVBox fx:id\u003d\"customerList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"          \u003cStackPane fx:id\u003d\"customerListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cheunggalen":3,"pasha-292":1,"-":56}},{"path":"src/test/data/JsonDeliveryListStorageTest/invalidAndValidCustomerDeliveryList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"    \"name\": \"Valid Customer\",","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    \"remark\": \"table\",","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    \"date\": \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\": [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    \"name\": \"Customer With Invalid Phone Field\",","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    \"remark\": \"table\",","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    \"date\": \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\": [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":9,"-":8,"CSjiade":6}},{"path":"src/test/data/JsonDeliveryListStorageTest/invalidCustomerDeliveryList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"    \"name\": \"Customer with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    \"remark\": \"table\",","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    \"date\": \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\": [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":5,"-":5,"CSjiade":2}},{"path":"src/test/data/JsonSerializableDeliveryListTest/duplicateCustomerDeliveryList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    \"remark\": \"table\",","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    \"date\": \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\": [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    \"remark\": \"table\",","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    \"date\": \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\": [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":7,"-":11,"CSjiade":3}},{"path":"src/test/data/JsonSerializableDeliveryListTest/invalidCustomerDeliveryList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"  \"customers\": [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    \"remark\": \"table\",","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    \"date\": \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\": [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":4,"-":6,"CSjiade":2}},{"path":"src/test/data/JsonSerializableDeliveryListTest/typicalCustomersDeliveryList.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"  \"_comment\": \"DeliveryList save file which contains the same Customer values as in TypicalCustomers#getTypicalDeliveryList()\",","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"  \"customers\" : [ {","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"John Tan\",","lastModifiedDate":"2021-04-05"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"96214618\",","lastModifiedDate":"2021-04-05"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"johntan@gmail.com\",","lastModifiedDate":"2021-04-05"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Yeo Chu Kang Ave 11, Blk 17, #09-14\",","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"ice cream\",","lastModifiedDate":"2021-04-05"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-01\",","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\" : [ \"cold\", \"urgent\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    \"done\" : \"[X]\"","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"James Ng\",","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"82604390\",","lastModifiedDate":"2021-04-05"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"jamesng@gmail.com\",","lastModifiedDate":"2021-04-05"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Serangoon Ave 2, Blk 15, #01-12\",","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"mechanical keyboard\",","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-15\",","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\" : [ \"urgent\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    \"done\" : \"[X]\"","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"Ian Lee\",","lastModifiedDate":"2021-04-05"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"81347122\",","lastModifiedDate":"2021-04-05"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"ianlee@gmail.com\",","lastModifiedDate":"2021-04-05"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Bukit Timah Ave 9, Blk 51, #01-88\",","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"dumbells\",","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-10\",","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ \"heavy\" ],","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    \"done\" : \"[X]\"","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"Adi Ban\",","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"94501234\",","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"adiban20@gmail.com\",","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Kallang St 12, Blk 6, #03-345\",","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"foldable bed\",","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-12\",","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\" : [ \"bulky\", \"heavy\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    \"done\" : \"[X]\"","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"  }, {","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"Jaryl Chan\",","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"96503348\",","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"jarylchan@gmail.com\",","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Pasir Ris Ave 7, Blk 107, #06-255\",","lastModifiedDate":"2021-04-05"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"starbucks coffee\",","lastModifiedDate":"2021-04-05"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-17\",","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\" : [ \"liquid\", \"hot\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"    \"done\" : \"[X]\"","lastModifiedDate":"2021-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"Galen Yeo\",","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"85229402\",","lastModifiedDate":"2021-04-05"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"cheunggalen@yahoo.com.sg\",","lastModifiedDate":"2021-04-05"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Bishan St 23, Blk 223, #14-133\",","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"coffee machine\",","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-01\",","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\" : [ \"bulky\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"    \"done\" : \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    \"name\" : \"Daniel Tan\",","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"    \"phone\" : \"94512214\",","lastModifiedDate":"2021-04-05"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    \"email\" : \"danieltan@gmail.com\",","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    \"address\" : \"Yishun Ave 6, Blk 399, #02-420\",","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    \"remark\" : \"gaming mouse\",","lastModifiedDate":"2021-04-05"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"    \"date\" : \"2021-04-30\",","lastModifiedDate":"2021-04-05"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    \"tagged\" : [ \"urgent\" ],","lastModifiedDate":"2021-04-05"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"    \"done\" : \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":56,"-":8,"CSjiade":3}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"  \"deliveryListFilePath\": \"timeforwheels.json\"","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"  \"deliveryListFilePath\": \"timeforwheels.json\"","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":1,"-":10}},{"path":"src/test/java/seedu/timeforwheels/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"cheunggalen":1,"-":57}},{"path":"src/test/java/seedu/timeforwheels/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"cheunggalen":1,"-":26}},{"path":"src/test/java/seedu/timeforwheels/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":2,"-":133}},{"path":"src/test/java/seedu/timeforwheels/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.core.index;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        final Index fifthCustomerIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(fifthCustomerIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(fifthCustomerIndex.equals(fifthCustomerIndex));","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(fifthCustomerIndex.equals(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(fifthCustomerIndex.equals(5.0f));","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(fifthCustomerIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cheunggalen":9,"-":51}},{"path":"src/test/java/seedu/timeforwheels/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        assertNotNull(AppUtil.getImage(\"/images/TimesForWheelsLogo.png\"));","lastModifiedDate":"2021-04-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"            -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"cheunggalen":4,"pasha-292":1,"-":32}},{"path":"src/test/java/seedu/timeforwheels/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"cheunggalen":3,"-":105}},{"path":"src/test/java/seedu/timeforwheels/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Config;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DataConversionException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"            -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"            -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":8,"-":110}},{"path":"src/test/java/seedu/timeforwheels/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":2,"-":21}},{"path":"src/test/java/seedu/timeforwheels/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.SerializableTestClass;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.TestUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":3,"-":42}},{"path":"src/test/java/seedu/timeforwheels/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.commons.util;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"cheunggalen":6,"-":139}},{"path":"src/test/java/seedu/timeforwheels/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.AddCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.CommandResult;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.ListCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.JsonDeliveryListStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.storage.StorageManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        JsonDeliveryListStorage deliveryListStorage \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"                new JsonDeliveryListStorage(temporaryFolder.resolve(\"deliveryList.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        StorageManager storage \u003d new StorageManager(deliveryListStorage, userPrefsStorage);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        // Setup LogicManager with JsonDeliveryListIoExceptionThrowingStub","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        JsonDeliveryListStorage deliveryListStorage \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"                new JsonDeliveryListIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionDeliveryList.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        StorageManager storage \u003d new StorageManager(deliveryListStorage, userPrefsStorage);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"pasha-292"},"content":"                + ADDRESS_DESC_AMY + DATE_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.addCustomer(expectedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredCustomerList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(model.getDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"    private static class JsonDeliveryListIoExceptionThrowingStub extends JsonDeliveryListStorage {","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"        private JsonDeliveryListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"        public void saveDeliveryList(ReadOnlyDeliveryList deliveryList, Path filePath) throws IOException {","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"cheunggalen":39,"pasha-292":2,"-":122}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public void execute_newCustomer_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(model.getDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.addCustomer(validCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        assertCommandSuccess(new AddCommand(validCustomer), model,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validCustomer), expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        Customer customerInList \u003d model.getDeliveryList().getCustomerList().get(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(new AddCommand(customerInList), model, AddCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cheunggalen":19,"-":26}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public void constructor_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    public void execute_customerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        ModelStubAcceptingCustomerAdded modelStub \u003d new ModelStubAcceptingCustomerAdded();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        CommandResult commandResult \u003d new AddCommand(validCustomer).execute(modelStub);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validCustomer), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(Arrays.asList(validCustomer), modelStub.customersAdded);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    public void execute_duplicateCustomer_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        Customer validCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        AddCommand addCommand \u003d new AddCommand(validCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        ModelStub modelStub \u003d new ModelStubWithCustomer(validCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_CUSTOMER, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"            -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        Customer alice \u003d new CustomerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        Customer bob \u003d new CustomerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"        public Path getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"        public void setDeliveryListFilePath(Path deliveryListFilePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"        public void setDeliveryList(ReadOnlyDeliveryList newData) {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        public ReadOnlyDeliveryList getDeliveryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"        public void deleteCustomer(Customer target) {","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        public void setCustomer(Customer target, Customer editedCustomer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"        public ObservableList\u003cCustomer\u003e getFilteredCustomerList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"        public void updateFilteredCustomerList(Predicate\u003cCustomer\u003e predicate) {","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"     * A Model stub that contains a single customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"    private class ModelStubWithCustomer extends ModelStub {","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"        private final Customer customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"        ModelStubWithCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":"            this.customer \u003d customer;","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"            return this.customer.isSameCustomer(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"cheunggalen"},"content":"     * A Model stub that always accept the customer being added.","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"cheunggalen"},"content":"    private class ModelStubAcceptingCustomerAdded extends ModelStub {","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"cheunggalen"},"content":"        final ArrayList\u003cCustomer\u003e customersAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"cheunggalen"},"content":"        public boolean hasCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"cheunggalen"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"cheunggalen"},"content":"            return customersAdded.stream().anyMatch(customer::isSameCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"cheunggalen"},"content":"        public void addCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"cheunggalen"},"content":"            requireNonNull(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"cheunggalen"},"content":"            customersAdded.add(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"cheunggalen"},"content":"        public ReadOnlyDeliveryList getDeliveryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"cheunggalen"},"content":"            return new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"cheunggalen":56,"-":139}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    public void execute_emptyDeliveryList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    public void execute_nonEmptyDeliveryList_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        Model model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setDeliveryList(new DeliveryList());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"cheunggalen":12,"-":20}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"cheunggalen":1,"-":53}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    public static final String VALID_TAG_HEAVY \u003d \"heavy\";","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    public static final String VALID_TAG_FRAGILE \u003d \"fragile\";","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Overseas\";","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    public static final String VALID_DONE \u003d \"[✓]\";","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"    public static final String VALID_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Busy\";","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    public static final String TAG_DESC_FRAGILE \u003d \" \" + PREFIX_TAG + VALID_TAG_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public static final String TAG_DESC_HEAVY \u003d \" \" + PREFIX_TAG + VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE + VALID_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"invalid\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-04-05"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"10-10-10-10\";","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"    public static final EditCommand.EditCustomerDescriptor DESC_AMY;","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    public static final EditCommand.EditCustomerDescriptor DESC_BOB;","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        DESC_AMY \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"                .withTags(VALID_TAG_FRAGILE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        DESC_BOB \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"                .withTags(VALID_TAG_HEAVY, VALID_TAG_FRAGILE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"     * - the delivery list, filtered customer list and selected customer in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList expectedDeliveryList \u003d new DeliveryList(actualModel.getDeliveryList());","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedDeliveryList, actualModel.getDeliveryList());","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"     * Updates {@code model}\u0027s filtered list to show only the customer at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"     * {@code model}\u0027s delivery list.","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"    public static void showCustomerAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"        Customer customer \u003d model.getFilteredCustomerList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"        final String[] splitName \u003d customer.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(new AttributeContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-04-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(1, model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cheunggalen":38,"pasha-292":4,"-":89,"CSjiade":3}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    private Model model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        Customer customerToDelete \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_CUSTOMER_SUCCESS, customerToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(model.getDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.deleteCustomer(customerToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        showNoCustomer(expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"        // ensures that outOfBoundIndex is still in bounds of delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDeliveryList().getCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"    private void showNoCustomer(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        model.updateFilteredCustomerList(p -\u003e false);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(model.getFilteredCustomerList().isEmpty());","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"cheunggalen":40,"-":69}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    private Model model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(editedCustomer).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        Index indexLastCustomer \u003d Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        Customer lastCustomer \u003d model.getFilteredCustomerList().get(indexLastCustomer.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        CustomerBuilder customerInList \u003d new CustomerBuilder(lastCustomer);","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d customerInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                .withTags(VALID_TAG_HEAVY).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HEAVY).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastCustomer, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setCustomer(lastCustomer, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER, new EditCommand.EditCustomerDescriptor());","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        Customer customerInFilteredList \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(customerInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_CUSTOMER_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setCustomer(model.getFilteredCustomerList().get(0), editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"    public void execute_duplicateCustomerUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(firstCustomer).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_CUSTOMER, descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"    public void execute_duplicateCustomerFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"        // edit customer in filtered list into a duplicate in delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"        Customer customerInList \u003d model.getDeliveryList().getCustomerList().get(INDEX_SECOND_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"                new EditCustomerDescriptorBuilder(customerInList).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"     * but smaller than size of delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        // ensures that outOfBoundIndex is still in bounds of delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDeliveryList().getCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_CUSTOMER, DESC_AMY);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor copyDescriptor \u003d new EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_CUSTOMER, copyDescriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_CUSTOMER, DESC_AMY)));","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_CUSTOMER, DESC_BOB)));","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"cheunggalen":81,"-":92}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/EditCustomerDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"public class EditCustomerDescriptorTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptorWithSameValues \u003d new EditCommand.EditCustomerDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        EditCommand.EditCustomerDescriptor editedAmy \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"            new EditCustomerDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        editedAmy \u003d new EditCustomerDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HEAVY).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cheunggalen":18,"-":41}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"cheunggalen":5,"-":15}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_CUSTOMERS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.CARL;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.ELLE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.FIONA;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    private Model model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"                new AttributeContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"                new AttributeContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    public void execute_zeroKeywords_noCustomerFound() {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"    public void execute_multipleKeywords_multipleCustomersFound() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CUSTOMERS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.updateFilteredCustomerList(predicate);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"     * Parses {@code userInput} into a {@code AttributeContainsKeywordsPredicate}.","lastModifiedDate":"2021-04-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"    private AttributeContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        return new AttributeContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-04-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheunggalen":31,"-":52}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"cheunggalen":5,"-":15}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        expectedModel \u003d new ModelManager(model.getDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheunggalen":11,"-":28}},{"path":"src/test/java/seedu/timeforwheels/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.commands;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.showCustomerAtIndex;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.Messages;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ModelManager;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    private Model model \u003d new ModelManager(getTypicalDeliveryList(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(firstCustomer).withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"                new Remark(editedCustomer.getRemark().value));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setCustomer(firstCustomer, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d new CustomerBuilder(firstCustomer).withRemark(\"\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"                new Remark(editedCustomer.getRemark().toString()));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setCustomer(firstCustomer, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"        Customer firstCustomer \u003d model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        Customer editedCustomer \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"                new CustomerBuilder(model.getFilteredCustomerList().get(INDEX_FIRST_CUSTOMER.getZeroBased()))","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"                new Remark(editedCustomer.getRemark().value));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        Model expectedModel \u003d new ModelManager(new DeliveryList(model.getDeliveryList()), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        expectedModel.setCustomer(firstCustomer, editedCustomer);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"    public void execute_invalidCustomerIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredCustomerList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"CSjiade"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"     * but smaller than size of delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"    public void execute_invalidCustomerIndexFilteredList_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        showCustomerAtIndex(model, INDEX_FIRST_CUSTOMER);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        // ensures that outOfBoundIndex is still in bounds of delivery list","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getDeliveryList().getCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_CUSTOMER_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"CSjiade"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"CSjiade"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"CSjiade"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"CSjiade"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"CSjiade"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"CSjiade"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"CSjiade"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2021-03-01"},{"lineNumber":133,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":134,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"cheunggalen":56,"CSjiade":78}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.TAG_DESC_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.TAG_DESC_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.AddCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_FRAGILE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRAGILE + DATE_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRAGILE + DATE_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRAGILE + DATE_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRAGILE + DATE_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRAGILE + DATE_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        Customer expectedCustomerMultipleTags \u003d new CustomerBuilder(BOB).withTags(VALID_TAG_FRAGILE, VALID_TAG_HEAVY)","lastModifiedDate":"2021-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"                + TAG_DESC_HEAVY + TAG_DESC_FRAGILE + DATE_DESC_AMY, new AddCommand(expectedCustomerMultipleTags));","lastModifiedDate":"2021-04-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        Customer expectedCustomer \u003d new CustomerBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"pasha-292"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"                + DATE_DESC_AMY, new AddCommand(expectedCustomer));","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"                + TAG_DESC_HEAVY + TAG_DESC_FRAGILE + DATE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"                + TAG_DESC_HEAVY + TAG_DESC_FRAGILE + DATE_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"                + TAG_DESC_HEAVY + TAG_DESC_FRAGILE + DATE_DESC_AMY, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"                + TAG_DESC_HEAVY + TAG_DESC_FRAGILE + DATE_DESC_AMY, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRAGILE + DATE_DESC_AMY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"pasha-292"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"pasha-292"},"content":"                + DATE_DESC_AMY, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HEAVY + TAG_DESC_FRAGILE + DATE_DESC_AMY,","lastModifiedDate":"2021-04-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"cheunggalen":53,"pasha-292":5,"-":84}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"cheunggalen":1,"-":149}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.Command;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"cheunggalen":3,"-":35}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_CUSTOMER));","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"cheunggalen":9,"-":24}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/DeliveryListParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.AddCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.FindCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.ListCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"public class DeliveryListParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    private final DeliveryListParser parser \u003d new DeliveryListParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(CustomerUtil.getAddCommand(customer));","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(new AddCommand(customer), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_CUSTOMER.getOneBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_CUSTOMER), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder(customer).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"                + INDEX_FIRST_CUSTOMER.getOneBased() + \" \" + CustomerUtil.getEditCustomerDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_CUSTOMER, descriptor), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(FindCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"            + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(new FindCommand(new AttributeContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"CSjiade"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"                + INDEX_FIRST_CUSTOMER.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_CUSTOMER, remark), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"cheunggalen":41,"-":66,"CSjiade":6}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    private DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"cheunggalen":6,"CSjiade":15}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.TAG_DESC_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.TAG_DESC_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.EditCustomerDescriptorBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Customer} being edited,","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRAGILE + TAG_DESC_HEAVY + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRAGILE + TAG_EMPTY + TAG_DESC_HEAVY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRAGILE + TAG_DESC_HEAVY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-04-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_SECOND_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HEAVY","lastModifiedDate":"2021-04-05"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"                .withTags(VALID_TAG_HEAVY, VALID_TAG_FRAGILE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        EditCommand.EditCustomerDescriptor descriptor \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"                new EditCustomerDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withTags(VALID_TAG_FRAGILE).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":171,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"cheunggalen"},"content":"                + TAG_DESC_FRAGILE + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRAGILE","lastModifiedDate":"2021-04-05"},{"lineNumber":174,"author":{"gitId":"cheunggalen"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"cheunggalen"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRAGILE, VALID_TAG_HEAVY)","lastModifiedDate":"2021-04-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":189,"author":{"gitId":"cheunggalen"},"content":"        EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":196,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":204,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_THIRD_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"cheunggalen"},"content":"        EditCommand.EditCustomerDescriptor descriptor \u003d new EditCustomerDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"cheunggalen":69,"-":143}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.FindCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"                new FindCommand(new AttributeContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"cheunggalen":9,"-":26}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    private static final String INVALID_TAG \u003d \"invalid\";","lastModifiedDate":"2021-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    private static final String VALID_TAG_1 \u003d \"fragile\";","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    private static final String VALID_TAG_2 \u003d \"heavy\";","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(INDEX_FIRST_CUSTOMER, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"cheunggalen":15,"-":181}},{"path":"src/test/java/seedu/timeforwheels/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.logic.parser;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalIndexes.INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"        // have remark","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        Index targetIndex \u003d INDEX_FIRST_CUSTOMER;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER, new Remark(nonEmptyRemark));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"        // no remark","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_CUSTOMER, new Remark(\"\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"        // no parameters","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        // no index","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"cheunggalen":12,"CSjiade":31}},{"path":"src/test/java/seedu/timeforwheels/model/DeliveryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"public class DeliveryListTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    private final DeliveryList deliveryList \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(Collections.emptyList(), deliveryList.getCustomerList());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e deliveryList.resetData(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    public void resetData_withValidReadOnlyDeliveryList_replacesData() {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList newData \u003d getTypicalDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.resetData(newData);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(newData, deliveryList);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"    public void resetData_withDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        // Two customers with the same identity fields","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HEAVY)","lastModifiedDate":"2021-04-05"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e newCustomers \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        DeliveryListStub newData \u003d new DeliveryListStub(newCustomers);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e deliveryList.resetData(newData));","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e deliveryList.hasCustomer(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_customerNotInDeliveryList_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(deliveryList.hasCustomer(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_customerInDeliveryList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.addCustomer(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(deliveryList.hasCustomer(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_customerWithSameIdentityFieldsInDeliveryList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.addCustomer(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HEAVY)","lastModifiedDate":"2021-04-05"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(deliveryList.hasCustomer(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"    public void getCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e deliveryList.getCustomerList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"     * A stub ReadOnlyDeliveryList whose customers list can violate interface constraints.","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"    private static class DeliveryListStub implements ReadOnlyDeliveryList {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        private final ObservableList\u003cCustomer\u003e customers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"        DeliveryListStub(Collection\u003cCustomer\u003e customers) {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"            this.customers.setAll(customers);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        public ObservableList\u003cCustomer\u003e getCustomerList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"            return customers;","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":102}},{"path":"src/test/java/seedu/timeforwheels/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.model.Model.PREDICATE_SHOW_ALL_CUSTOMERS;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.AttributeContainsKeywordsPredicate;","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.DeliveryListBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(new DeliveryList(), new DeliveryList(modelManager.getDeliveryList()));","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        userPrefs.setDeliveryListFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        userPrefs.setDeliveryListFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    public void setDeliveryListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setDeliveryListFilePath(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"    public void setDeliveryListFilePath_validPath_setsDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"        modelManager.setDeliveryListFilePath(path);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(path, modelManager.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasCustomer(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_customerNotInDeliveryList_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"    public void hasCustomer_customerInDeliveryList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        modelManager.addCustomer(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(modelManager.hasCustomer(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"    public void getFilteredCustomerList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"            -\u003e modelManager.getFilteredCustomerList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList deliveryList \u003d new DeliveryListBuilder().withCustomer(ALICE).withCustomer(BENSON).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList differentDeliveryList \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        modelManager \u003d new ModelManager(deliveryList, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(deliveryList, userPrefs);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"        // different deliveryList -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentDeliveryList, userPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"        modelManager.updateFilteredCustomerList(new AttributeContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-04-07"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(modelManager.equals(new ModelManager(deliveryList, userPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"        modelManager.updateFilteredCustomerList(PREDICATE_SHOW_ALL_CUSTOMERS);","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"        differentUserPrefs.setDeliveryListFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(modelManager.equals(new ModelManager(deliveryList, differentUserPrefs)));","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"cheunggalen":37,"-":96}},{"path":"src/test/java/seedu/timeforwheels/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    public void setDeliveryListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setDeliveryListFilePath(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"cheunggalen":4,"-":17}},{"path":"src/test/java/seedu/timeforwheels/model/customer/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheunggalen":2,"-":34}},{"path":"src/test/java/seedu/timeforwheels/model/customer/AttributeContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"public class AttributeContainsKeywordsPredicateTest {","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"            new AttributeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"            new AttributeContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"            new AttributeContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-04-07"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"            new AttributeContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"        //Address with only one keyword","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Collections.singletonList(\"Tampines\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"        //Address with only one matching keyword","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"Tampines\", \"Gardens\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"        // Address with multiple keywords","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"Tampines\", \"Street\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"        // Address with mixed-case keywords","lastModifiedDate":"2021-03-19"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"TaMpInEs\", \"STrEeT\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":79,"author":{"gitId":"pasha-292"},"content":"        //Address with only one keyword","lastModifiedDate":"2021-03-20"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Collections.singletonList(\"12345\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(predicate.test(new CustomerBuilder().withPhone(\"12345\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        AttributeContainsKeywordsPredicate predicate \u003d new AttributeContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-04-07"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"        // Keywords does not match name","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"        predicate \u003d new AttributeContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-04-07"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":97,"author":{"gitId":"pasha-292"},"content":"        assertFalse(predicate.test(new CustomerBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"cheunggalen":35,"pasha-292":12,"-":52}},{"path":"src/test/java/seedu/timeforwheels/model/customer/CustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"public class CustomerTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        Customer customer \u003d new CustomerBuilder().build();","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e customer.getTags().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    public void isSameCustomer() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(ALICE.isSameCustomer(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(ALICE.isSameCustomer(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HEAVY).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(ALICE.isSameCustomer(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        Customer editedBob \u003d new CustomerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        editedBob \u003d new CustomerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(BOB.isSameCustomer(editedBob));","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        Customer aliceCopy \u003d new CustomerBuilder(ALICE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        // different customer -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        editedAlice \u003d new CustomerBuilder(ALICE).withTags(VALID_TAG_HEAVY).build();","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"cheunggalen":32,"-":59}},{"path":"src/test/java/seedu/timeforwheels/model/customer/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"public class DateTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        // null date","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        //Invalid Input","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2010-10-40\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2010-20-01\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"20 20-11-11\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2020-1 0-12\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\" 2021-10-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2019-11-10 \"));","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"20a1-05-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2020-02-30\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"20-20-11-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"10-03-2019\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"@2015-07-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        // valid date","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2020-10-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2020-11-11\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2021-02-11\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2021-03-12\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2021-03-12\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"cheunggalen":2,"pasha-292":44}},{"path":"src/test/java/seedu/timeforwheels/model/customer/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheunggalen":2,"-":59}},{"path":"src/test/java/seedu/timeforwheels/model/customer/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheunggalen":2,"-":38}},{"path":"src/test/java/seedu/timeforwheels/model/customer/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"cheunggalen":2,"-":38}},{"path":"src/test/java/seedu/timeforwheels/model/customer/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"public class RemarkTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"cheunggalen":1,"CSjiade":30}},{"path":"src/test/java/seedu/timeforwheels/model/customer/UniqueCustomerListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.exceptions.CustomerNotFoundException;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.exceptions.DuplicateCustomerException;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.CustomerBuilder;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"public class UniqueCustomerListTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    private final UniqueCustomerList uniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    public void contains_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.contains(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    public void contains_customerNotInList_returnsFalse() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    public void contains_customerInList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(uniqueCustomerList.contains(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    public void contains_customerWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HEAVY)","lastModifiedDate":"2021-04-05"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        assertTrue(uniqueCustomerList.contains(editedAlice));","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    public void add_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.add(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"    public void add_duplicateCustomer_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.add(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_nullTargetCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(null, ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_nullEditedCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, null));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"    public void setPCustomer_targetCustomerNotInList_throwsCustomerNotFoundException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_editedCustomerIsSameCustomer_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.setCustomer(ALICE, ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        expectedUniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_editedCustomerHasSameIdentity_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        Customer editedAlice \u003d new CustomerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HEAVY)","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.setCustomer(ALICE, editedAlice);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"        expectedUniqueCustomerList.add(editedAlice);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_editedCustomerHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.setCustomer(ALICE, BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_editedCustomerHasNonUniqueIdentity_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DuplicateCustomerException.class, () -\u003e uniqueCustomerList.setCustomer(ALICE, BOB));","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"    public void remove_nullCustomer_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.remove(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"    public void remove_customerDoesNotExist_throwsCustomerNotFoundException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(CustomerNotFoundException.class, () -\u003e uniqueCustomerList.remove(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"    public void remove_existingCustomer_removesCustomer() {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.remove(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomer_nullUniqueCustomerList_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((UniqueCustomerList) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers_uniqueCustomerList_replacesOwnListWithProvidedUniqueCustomerList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.setCustomers(expectedUniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueCustomerList.setCustomers((List\u003cCustomer\u003e) null));","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e customerList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"        uniqueCustomerList.setCustomers(customerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"        UniqueCustomerList expectedUniqueCustomerList \u003d new UniqueCustomerList();","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":"        expectedUniqueCustomerList.add(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(expectedUniqueCustomerList, uniqueCustomerList);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"    public void setCustomers_listWithDuplicateCustomers_throwsDuplicateCustomerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":"        List\u003cCustomer\u003e listWithDuplicateCustomers \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DuplicateCustomerException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"            -\u003e uniqueCustomerList.setCustomers(listWithDuplicateCustomers));","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"cheunggalen"},"content":"            -\u003e uniqueCustomerList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"cheunggalen"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"cheunggalen":171}},{"path":"src/test/java/seedu/timeforwheels/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.model.tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"cheunggalen":2,"-":24}},{"path":"src/test/java/seedu/timeforwheels/storage/JsonAdaptedCustomerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.storage.JsonAdaptedCustomer.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.BENSON;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"public class JsonAdaptedCustomerTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    private static final String VALID_DONE \u003d BENSON.getDone().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    public void toModelType_validCustomerDetails_returnsCustomer() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(BENSON);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(BENSON, customer.toModelType());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"                new JsonAdaptedCustomer(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"                VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2021-03-02"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"                new JsonAdaptedCustomer(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"                        VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"pasha-292"},"content":"                INVALID_ADDRESS, VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"                expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"                null, VALID_REMARK, VALID_DATE, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"        JsonAdaptedCustomer customer \u003d","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"                new JsonAdaptedCustomer(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"                        VALID_REMARK, VALID_DATE, invalidTags, VALID_DONE);","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, customer::toModelType);","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":35,"pasha-292":10,"-":73,"CSjiade":5}},{"path":"src/test/java/seedu/timeforwheels/storage/JsonDeliveryListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.ALICE;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.HOON;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.IDA;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"public class JsonDeliveryListStorageTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonDeliveryListStorageTest\");","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public void readDeliveryList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e readDeliveryList(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    private java.util.Optional\u003cReadOnlyDeliveryList\u003e readDeliveryList(String filePath) throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        return new JsonDeliveryListStorage(Paths.get(filePath)).readDeliveryList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        assertFalse(readDeliveryList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"            readDeliveryList(\"notJsonFormatDeliveryList.json\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"    public void readDeliveryList_invalidCustomerDeliveryList_throwDataConversionException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"            readDeliveryList(\"invalidCustomerDeliveryList.json\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    public void readDeliveryList_invalidAndValidCustomerDeliveryList_throwDataConversionException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"            readDeliveryList(\"invalidAndValidCustomerDeliveryList.json\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    public void readAndSaveDeliveryList_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        Path filePath \u003d testFolder.resolve(\"TempDeliveryList.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList original \u003d getTypicalDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        JsonDeliveryListStorage jsonDeliveryListStorage \u003d new JsonDeliveryListStorage(filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        jsonDeliveryListStorage.saveDeliveryList(original, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        ReadOnlyDeliveryList readBack \u003d jsonDeliveryListStorage.readDeliveryList(filePath).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(original, new DeliveryList(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        original.addCustomer(HOON);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        original.removeCustomer(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        jsonDeliveryListStorage.saveDeliveryList(original, filePath);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        readBack \u003d jsonDeliveryListStorage.readDeliveryList(filePath).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(original, new DeliveryList(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        original.addCustomer(IDA);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        jsonDeliveryListStorage.saveDeliveryList(original); // file path not specified","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        readBack \u003d jsonDeliveryListStorage.readDeliveryList().get(); // file path not specified","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(original, new DeliveryList(readBack));","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"    public void saveDeliveryList_nullDeliveryList_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDeliveryList(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"     * Saves {@code deliveryList} at the specified {@code filePath}.","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"    private void saveDeliveryList(ReadOnlyDeliveryList deliveryList, String filePath) {","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"            new JsonDeliveryListStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"                    .saveDeliveryList(deliveryList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"    public void saveDeliveryList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveDeliveryList(new DeliveryList(), null));","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":48,"-":65}},{"path":"src/test/java/seedu/timeforwheels/storage/JsonSerializableDeliveryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.util.JsonUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.testutil.TypicalCustomers;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"public class JsonSerializableDeliveryListTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableDeliveryListTest\");","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    private static final Path TYPICAL_CUSTOMERS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalCustomersDeliveryList.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    private static final Path INVALID_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidCustomerDeliveryList.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    private static final Path DUPLICATE_CUSTOMER_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateCustomerDeliveryList.json\");","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    public void toModelType_typicalCustomersFile_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        JsonSerializableDeliveryList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CUSTOMERS_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"                JsonSerializableDeliveryList.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList deliveryListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList typicalCustomersDeliveryList \u003d TypicalCustomers.getTypicalDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(deliveryListFromFile.toString(), typicalCustomersDeliveryList.toString());","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    public void toModelType_invalidCustomerFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        JsonSerializableDeliveryList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CUSTOMER_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"                JsonSerializableDeliveryList.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    public void toModelType_duplicateCustomers_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        JsonSerializableDeliveryList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CUSTOMER_FILE,","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"                JsonSerializableDeliveryList.class).get();","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableDeliveryList.MESSAGE_DUPLICATE_CUSTOMER,","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"cheunggalen":24,"Jacob-109":1,"-":23}},{"path":"src/test/java/seedu/timeforwheels/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        userPrefs.setDeliveryListFilePath(Paths.get(\"timeforwheels.json\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"cheunggalen":6,"-":117}},{"path":"src/test/java/seedu/timeforwheels/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.storage;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.TypicalCustomers.getTypicalDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.GuiSettings;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.ReadOnlyDeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.UserPrefs;","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        JsonDeliveryListStorage deliveryListStorage \u003d new JsonDeliveryListStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        storageManager \u003d new StorageManager(deliveryListStorage, userPrefsStorage);","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    public void deliveryListReadSave() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"         * {@link JsonDeliveryListStorage} class.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonDeliveryListStorageTest} class.","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList original \u003d getTypicalDeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        storageManager.saveDeliveryList(original);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        ReadOnlyDeliveryList retrieved \u003d storageManager.readDeliveryList().get();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(original, new DeliveryList(retrieved));","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    public void getDeliveryListFilePath() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        assertNotNull(storageManager.getDeliveryListFilePath());","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":17,"-":51}},{"path":"src/test/java/seedu/timeforwheels/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"cheunggalen":1,"-":33}},{"path":"src/test/java/seedu/timeforwheels/testutil/CustomerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"import seedu.timeforwheels.model.customer.Date;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Done;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Remark;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":" * A utility class to help with building Customer objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"public class CustomerBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    public static final String DEFAULT_REMARK \u003d \"Busy\";","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    public static final String DEFAULT_DONE \u003d \"[✓]\";","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"    public static final String DEFAULT_DATE \u003d \"2021-10-10\";","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    private Remark remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"    private Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    private Date date;","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"     * Creates a {@code CustomerBuilder} with the default details.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"        done \u003d new Done(DEFAULT_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"     * Initializes the CustomerBuilder with the data of {@code customerToCopy}.","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder(Customer customerToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        name \u003d customerToCopy.getName();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        phone \u003d customerToCopy.getPhone();","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        email \u003d customerToCopy.getEmail();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        address \u003d customerToCopy.getAddress();","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        remark \u003d customerToCopy.getRemark();","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"        date \u003d customerToCopy.getDate();","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"        tags \u003d new HashSet\u003c\u003e(customerToCopy.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        done \u003d customerToCopy.getDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Name} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Address} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withAddress(String address) {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Phone} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Email} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withEmail(String email) {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Remark} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withRemark(String remark) {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"CSjiade"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Remark} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"    public CustomerBuilder withDone(String done) {","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d new Done(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"pasha-292"},"content":"     * Sets the {@code Date} of the {@code Customer} that we are building.","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"pasha-292"},"content":"    public CustomerBuilder withDate(String date) {","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"pasha-292"},"content":"        return this;","lastModifiedDate":"2021-03-24"},{"lineNumber":129,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"    public Customer build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"pasha-292"},"content":"        return new Customer(name, phone, email, address, remark, date, tags, done);","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"cheunggalen":38,"pasha-292":13,"-":65,"CSjiade":19}},{"path":"src/test/java/seedu/timeforwheels/testutil/CustomerUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.AddCommand;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":" * A utility class for Customer.","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"public class CustomerUtil {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"     * Returns an add command string for adding the {@code customer}.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    public static String getAddCommand(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getCustomerDetails(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"     * Returns the part of command string for the given {@code customer}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    public static String getCustomerDetails(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        sb.append(PREFIX_NAME + customer.getName().fullName + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        sb.append(PREFIX_PHONE + customer.getPhone().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        sb.append(PREFIX_EMAIL + customer.getEmail().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        sb.append(PREFIX_ADDRESS + customer.getAddress().value + \" \");","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"        sb.append(PREFIX_DATE + customer.getDate().value + \" \");","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        customer.getTags().stream().forEach(","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"     * Returns the part of command string for the given {@code EditCustomerDescriptor}\u0027s details.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"    public static String getEditCustomerDescriptorDetails(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"cheunggalen":24,"pasha-292":2,"-":38}},{"path":"src/test/java/seedu/timeforwheels/testutil/DeliveryListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * A utility class to help with building Deliverylist objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":" *     {@code DeliveryList ab \u003d new DeliveryListBuilder().withCustomer(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"public class DeliveryListBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    private DeliveryList deliveryList;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryListBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        deliveryList \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryListBuilder(DeliveryList deliveryList) {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        this.deliveryList \u003d deliveryList;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * Adds a new {@code Customer} to the {@code DeliveryList} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryListBuilder withCustomer(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        deliveryList.addCustomer(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    public DeliveryList build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"        return deliveryList;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":16,"-":18}},{"path":"src/test/java/seedu/timeforwheels/testutil/EditCustomerDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.logic.commands.EditCommand.EditCustomerDescriptor;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Address;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Email;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Name;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Phone;","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.tag.Tag;","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":" * A utility class to help with building EditCustomerDescriptor objects.","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"public class EditCustomerDescriptorBuilder {","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    private EditCustomerDescriptor descriptor;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder(EditCustomerDescriptor descriptor) {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        this.descriptor \u003d new EditCustomerDescriptor(descriptor);","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"     * Returns an {@code EditCustomerDescriptor} with fields containing {@code customer}\u0027s details","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder(Customer customer) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        descriptor \u003d new EditCustomerDescriptor();","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        descriptor.setName(customer.getName());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        descriptor.setPhone(customer.getPhone());","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        descriptor.setEmail(customer.getEmail());","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        descriptor.setAddress(customer.getAddress());","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        descriptor.setTags(customer.getTags());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Name} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Phone} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Email} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"     * Sets the {@code Address} of the {@code EditCustomerDescriptor} that we are building.","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditCustomerDescriptor}","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"    public EditCustomerDescriptor build() {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"cheunggalen":34,"-":53}},{"path":"src/test/java/seedu/timeforwheels/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":1,"-":71}},{"path":"src/test/java/seedu/timeforwheels/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.Model;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * Returns the middle index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size() / 2);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Returns the last index of the customer in the {@code model}\u0027s customer list.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        return Index.fromOneBased(model.getFilteredCustomerList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"     * Returns the customer in the {@code model}\u0027s customer list at {@code index}.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    public static Customer getCustomer(Model model, Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        return model.getFilteredCustomerList().get(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"cheunggalen":11,"-":44}},{"path":"src/test/java/seedu/timeforwheels/testutil/TypicalCustomers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_DONE;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_FRAGILE;","lastModifiedDate":"2021-04-05"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.logic.commands.CommandTestUtil.VALID_TAG_HEAVY;","lastModifiedDate":"2021-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.DeliveryList;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.model.customer.Customer;","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":" * A utility class containing a list of {@code Customer} objects to be used in tests.","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"public class TypicalCustomers {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer ALICE \u003d new CustomerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"            .withPhone(\"94351253\").withRemark(\"Busy\")","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"            .withTags(\"liquid\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer BENSON \u003d new CustomerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRemark(\"Very Busy\")","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"            .withTags(\"hot\", \"fragile\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer CARL \u003d new CustomerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer DANIEL \u003d new CustomerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"heavy\").build();","lastModifiedDate":"2021-04-10"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer ELLE \u003d new CustomerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer FIONA \u003d new CustomerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer GEORGE \u003d new CustomerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer HOON \u003d new CustomerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer IDA \u003d new CustomerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    // Manually added - Customer\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer AMY \u003d new CustomerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRAGILE)","lastModifiedDate":"2021-04-05"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"            .withDone(VALID_DONE).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"    public static final Customer BOB \u003d new CustomerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HEAVY, VALID_TAG_FRAGILE)","lastModifiedDate":"2021-04-05"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"            .withDone(VALID_DONE).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    private TypicalCustomers() {} // prevents instantiation","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"     * Returns an {@code DeliveryList} with all the typical customers.","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"    public static DeliveryList getTypicalDeliveryList() {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        DeliveryList ab \u003d new DeliveryList();","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        for (Customer customer : getTypicalCustomers()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"            ab.addCustomer(customer);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"    public static List\u003cCustomer\u003e getTypicalCustomers() {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"cheunggalen":37,"Jacob-109":3,"-":34,"CSjiade":4}},{"path":"src/test/java/seedu/timeforwheels/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.testutil;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.commons.core.index.Index;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    public static final Index INDEX_FIRST_CUSTOMER \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    public static final Index INDEX_SECOND_CUSTOMER \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    public static final Index INDEX_THIRD_CUSTOMER \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"cheunggalen":5,"-":7}},{"path":"src/test/java/seedu/timeforwheels/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cheunggalen":1,"-":34}},{"path":"src/test/java/seedu/timeforwheels/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package seedu.timeforwheels.ui;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import static seedu.timeforwheels.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import seedu.timeforwheels.MainApp;","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cheunggalen":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"\u003c?import seedu.timeforwheels.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"cheunggalen":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"\u003cfx:root type\u003d\"seedu.timeforwheels.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"cheunggalen":1,"-":5}}]
