[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-3/tp/actions)","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"* This is a sample student Software Engineering for delivery drivers to manage their orders efficiently.\u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"  * as a delivery driver for a logistic company looking to better manage their work schedule","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"  * as a delivery driver for an F\u0026B shop looking to better manage their food delivery operations","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"  ","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"* The project simulates an ongoing software project for a desktop application (called _TimeforWheels_) used for managing delivery orders.","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"  * It is **written in Java OOP fashion**. ","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"* It is named `TimeforWheels` since the goal of the app is to help delivey drivers better manage their time.","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"* For the detailed documentation of this project, see the **[TimeforWheels Developer Guide](https://ay2021s2-cs2103t-w10-3.github.io/tp/DeveloperGuide.html)**.","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"* For Users who want to know how to use the app, see the **[TimeforWheels User Guide](https://ay2021s2-cs2103t-w10-3.github.io/tp/UserGuide.html)**.","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":4,"CSjiade":11}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"You can reach us at the email `jdlian505[at]gmail.com`, `juhaeradittya2000[at]gmail.com`, `galencheung97@gmail.com`","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"### Lian Jiade","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"\u003cimg src\u003d\"images/csjiade.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"[[github](https://github.com/CSjiade)]","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"[[portfolio](team/lianjiade.md)]","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"* Role: Developer","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"* Responsibilities: In charge of UI, Logic, Storage","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"###  Md Juhaer Adittya Pasha","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"\u003cimg src\u003d\"images/pasha-292.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"[[portfolio]()]","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"* Role: Developer","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"* Responsibilities: UI, Logic","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"### Galen Cheung","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"\u003cimg src\u003d\"images/cheunggalen.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"[[github](http://github.com/cheunggalen)] [[portfolio]()]","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"* Responsibilities: UI, Logic","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"### Ng Han Poh Jacob","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"\u003cimg src\u003d\"images/jacob-109.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[[github](http://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"[[portfolio]()]","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Responsibilities: Dev Ops + Threading","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheunggalen":4,"Jacob-109":1,"pasha-292":2,"-":31,"CSjiade":12}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"CSjiade"},"content":"* Companies that have delivery operations and freelance delivery drivers","lastModifiedDate":"2021-03-08"},{"lineNumber":240,"author":{"gitId":"cheunggalen"},"content":"* Need to manage many delivery entries and their respective details","lastModifiedDate":"2021-03-08"},{"lineNumber":241,"author":{"gitId":"CSjiade"},"content":"* Prefers typing to mouse interactions","lastModifiedDate":"2021-03-08"},{"lineNumber":242,"author":{"gitId":"cheunggalen"},"content":"* Can type fast","lastModifiedDate":"2021-03-08"},{"lineNumber":243,"author":{"gitId":"CSjiade"},"content":"* Is reasonably comfortable using CLI apps","lastModifiedDate":"2021-03-08"},{"lineNumber":244,"author":{"gitId":"cheunggalen"},"content":"* Looking for a desktop app over other types to better manage their workflow","lastModifiedDate":"2021-03-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"cheunggalen"},"content":"**Value proposition**: manage delivery workflows and details faster than a typical mouse/GUI driven app for greater efficiency","lastModifiedDate":"2021-03-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"| Priority | As a …​                   | I want to …​                                                                                | So that I can…​                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"cheunggalen"},"content":"| -------- | --------------------------| ------------------------------------------------------------------------------------------- | --------------------------------------------------------- |","lastModifiedDate":"2021-03-08"},{"lineNumber":254,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | add a delivery entry to the list (product, pickup/drop off time and address, route)         | make the delivery immediately/later                       |","lastModifiedDate":"2021-03-08"},{"lineNumber":255,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | mark a delivery entry in the list as done                                                   | know which deliveries I\u0027ve done                           |","lastModifiedDate":"2021-03-08"},{"lineNumber":256,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | delete a delivery entry from the list                                                       | remove the delivery entry from the list                   |","lastModifiedDate":"2021-03-08"},{"lineNumber":257,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | delete all delivery entries from the list                                                   | remove all delivery entries from the list                 |","lastModifiedDate":"2021-03-08"},{"lineNumber":258,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | edit a delivery entry in the list                                                           | make necessary changes to the delivery details            |","lastModifiedDate":"2021-03-08"},{"lineNumber":259,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | get the list of delivery entries                                                            | see all the deliveries I have to make                     |","lastModifiedDate":"2021-03-08"},{"lineNumber":260,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | get the list of completed delivery entries                                                  | see all the deliveries I have done                        |","lastModifiedDate":"2021-03-08"},{"lineNumber":261,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | get the list of delivery entries ranked by urgency/timing                                   | see which are the more urgent deliveries to be made first |","lastModifiedDate":"2021-03-08"},{"lineNumber":262,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | find all delivery entries associated with a time (pickup/drop off time)                     | see the deliveries with the pickup/drop off times         |","lastModifiedDate":"2021-03-08"},{"lineNumber":263,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | find all delivery entries associated with a location (pickup/drop off address)              | see the deliveries with the pickup/drop off addresses     |","lastModifiedDate":"2021-03-08"},{"lineNumber":264,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | find all delivery entries associated with a keyword or phrase                               | see the deliveries with the specific keyword/phrase       |","lastModifiedDate":"2021-03-08"},{"lineNumber":265,"author":{"gitId":"cheunggalen"},"content":"| `* * *`  | delivery driver           | exit the app                                                                                | exit the app                                              |","lastModifiedDate":"2021-03-08"},{"lineNumber":266,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | delivery driver           | be notified of a duplicate delivery entry                                                   | avoid adding a duplicate delivery entry to the list       |","lastModifiedDate":"2021-03-08"},{"lineNumber":267,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | delivery driver           | to set reminders for each delivery                                                          | be notified prior to each delivery                        |","lastModifiedDate":"2021-03-08"},{"lineNumber":268,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | delivery driver           | get a pre-planned route for the delivery                                                    | make the delivery faster and more efficiently             |","lastModifiedDate":"2021-03-08"},{"lineNumber":269,"author":{"gitId":"cheunggalen"},"content":"| `* *`    | delivery driver           | get details of the delivery good (fragile, etc.)                                            | take necessary preparations/precautions for various goods |","lastModifiedDate":"2021-03-08"},{"lineNumber":270,"author":{"gitId":"cheunggalen"},"content":"| `*`      | delivery driver           | get basic customer details of the delivery (contact details, delivery frequency, business)  | understand my customers better                            |","lastModifiedDate":"2021-03-08"},{"lineNumber":271,"author":{"gitId":"cheunggalen"},"content":"| `*`      | delivery driver           | to have an estimated delivery duration for a delivery entry                                 | plan my time better                                       |","lastModifiedDate":"2021-03-08"},{"lineNumber":272,"author":{"gitId":"cheunggalen"},"content":"| `*`      | new delivery driver       | see samples of deliveries entries                                                           | familiar myself with the app and process                  |","lastModifiedDate":"2021-03-08"},{"lineNumber":273,"author":{"gitId":"cheunggalen"},"content":"| `*`      | new delivery driver       | receive easier deliveries (shorter distance)                                                | transition into using the app more easily                 |","lastModifiedDate":"2021-03-08"},{"lineNumber":274,"author":{"gitId":"cheunggalen"},"content":"| `*`      | part-time delivery driver | choose specific delivery timings and receive delivery notifications during specific timings | make deliveries during my free time                       |","lastModifiedDate":"2021-03-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC01 - add a delivery entry to the list**","lastModifiedDate":"2021-03-08"},{"lineNumber":283,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":284,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":285,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":286,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":287,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":288,"author":{"gitId":"cheunggalen"},"content":"* A new delivery entry will be added to the list of deliveries.","lastModifiedDate":"2021-03-08"},{"lineNumber":289,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":290,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":291,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":292,"author":{"gitId":"cheunggalen"},"content":"1.  User indicates that they will be adding a delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":293,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App requests for details of the delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":294,"author":{"gitId":"cheunggalen"},"content":"3.  User enters the delivery entry to be added to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":295,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App adds the delivery entry to the list and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":296,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":297,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":298,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":299,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":300,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":301,"author":{"gitId":"cheunggalen"},"content":"* 3a. The delivery entry to be added has an invalid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":302,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":303,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new delivery entry details.","lastModifiedDate":"2021-03-08"},{"lineNumber":304,"author":{"gitId":"cheunggalen"},"content":"      ","lastModifiedDate":"2021-03-08"},{"lineNumber":305,"author":{"gitId":"cheunggalen"},"content":"    Steps 3a1-3a2 are repeated until the valid details are entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":306,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":307,"author":{"gitId":"cheunggalen"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":308,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":309,"author":{"gitId":"cheunggalen"},"content":"* 3b. The delivery entry to be added already exists in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":310,"author":{"gitId":"cheunggalen"},"content":"    * 3b1. Delivery App informs the User of the duplicate.","lastModifiedDate":"2021-03-08"},{"lineNumber":311,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":312,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":313,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":314,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":315,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":316,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC02 - mark a delivery entry in the list as done**","lastModifiedDate":"2021-03-08"},{"lineNumber":317,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":318,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":319,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":320,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":321,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":322,"author":{"gitId":"cheunggalen"},"content":"* A delivery entry in the list will be marked as done.","lastModifiedDate":"2021-03-08"},{"lineNumber":323,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":324,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":325,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":326,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see the list of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":327,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":328,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to mark as done by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":329,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App marks that delivery entry as done and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":330,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":331,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":332,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":333,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":334,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":335,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":336,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":337,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":338,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":339,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":340,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":341,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":342,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":343,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":344,"author":{"gitId":"cheunggalen"},"content":"    Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":345,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":346,"author":{"gitId":"cheunggalen"},"content":"    Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":347,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":348,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":349,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":350,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC03 - delete a delivery entry from the list**","lastModifiedDate":"2021-03-08"},{"lineNumber":351,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":352,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":353,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":354,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":355,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":356,"author":{"gitId":"cheunggalen"},"content":"* An existing delivery entry will be deleted from the list of deliveries.","lastModifiedDate":"2021-03-08"},{"lineNumber":357,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":358,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":359,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":360,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see the list of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":361,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":362,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to be deleted by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":363,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App removes that delivery entry from the list and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":364,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":365,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":366,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":367,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":368,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":369,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":370,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":371,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":372,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":373,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":374,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":375,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":376,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":377,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":378,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":379,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":380,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":381,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":382,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":383,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":384,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC04 - delete all delivery entries from the list**","lastModifiedDate":"2021-03-08"},{"lineNumber":385,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":386,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":387,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":388,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":389,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":390,"author":{"gitId":"cheunggalen"},"content":"* All existing delivery entries will be deleted from the list of deliveries.","lastModifiedDate":"2021-03-08"},{"lineNumber":391,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":392,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":393,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":394,"author":{"gitId":"cheunggalen"},"content":"1.  User indicates to delete all delivery entries from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":395,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App removes all delivery entries from the list and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":396,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":397,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":398,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":399,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":400,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":401,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":402,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that there are no delivery entries to delete.","lastModifiedDate":"2021-03-08"},{"lineNumber":403,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":404,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":405,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":406,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":407,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":408,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC05 - edit a delivery entry in the list**","lastModifiedDate":"2021-03-08"},{"lineNumber":409,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":410,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":411,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":412,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":413,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":414,"author":{"gitId":"cheunggalen"},"content":"* An existing delivery entry will be updated in the list of deliveries.","lastModifiedDate":"2021-03-08"},{"lineNumber":415,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":416,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":417,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":418,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see the list of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":419,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":420,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to edit by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":421,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App requests for updated details of the delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":422,"author":{"gitId":"cheunggalen"},"content":"5.  User enters the updated details.","lastModifiedDate":"2021-03-08"},{"lineNumber":423,"author":{"gitId":"cheunggalen"},"content":"6.  Delivery App replaces the old delivery entry with the updated one and informs the User.","lastModifiedDate":"2021-03-08"},{"lineNumber":424,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":425,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":426,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":427,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":428,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":429,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":430,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":431,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":432,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":433,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":434,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":435,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":436,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":438,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":439,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":440,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":441,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":442,"author":{"gitId":"cheunggalen"},"content":"* 5a. The updated details have an invalid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":443,"author":{"gitId":"cheunggalen"},"content":"    * 5a1. Delivery App requests for a valid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":444,"author":{"gitId":"cheunggalen"},"content":"    * 5a2. User enters new details.","lastModifiedDate":"2021-03-08"},{"lineNumber":445,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":446,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid details are entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":447,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":448,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 6.","lastModifiedDate":"2021-03-08"},{"lineNumber":449,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":450,"author":{"gitId":"cheunggalen"},"content":"* 5b. The edited entry already exists in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":451,"author":{"gitId":"cheunggalen"},"content":"    * 5b1. Delivery App informs the User of the duplicate.","lastModifiedDate":"2021-03-08"},{"lineNumber":452,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":453,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":454,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":455,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":456,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":457,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC06 - get the list of delivery entries**","lastModifiedDate":"2021-03-08"},{"lineNumber":458,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":459,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":460,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":461,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":462,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":463,"author":{"gitId":"cheunggalen"},"content":"* a list of all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":464,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":465,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":466,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":467,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":468,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":469,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":470,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":471,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":472,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":473,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":474,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":475,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":476,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":477,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":478,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":479,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":480,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":481,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC07 - get the list of completed delivery entries**","lastModifiedDate":"2021-03-08"},{"lineNumber":482,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":483,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":484,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":485,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":486,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":487,"author":{"gitId":"cheunggalen"},"content":"* a list of all completed delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":488,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":489,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":490,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":491,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all completed delivery entries from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":492,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all delivery entries that were marked as done.","lastModifiedDate":"2021-03-08"},{"lineNumber":493,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":494,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":495,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":496,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":497,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":498,"author":{"gitId":"cheunggalen"},"content":"* 1a. The completed list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":499,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the completed list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":500,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":501,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":502,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":503,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":504,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":505,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC08 - get the list of delivery entries ranked by urgency**","lastModifiedDate":"2021-03-08"},{"lineNumber":506,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":507,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":508,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":509,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":510,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":511,"author":{"gitId":"cheunggalen"},"content":"* a list of existing delivery entries ranked by urgency.","lastModifiedDate":"2021-03-08"},{"lineNumber":512,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":513,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":515,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries from the list ranked by urgency.","lastModifiedDate":"2021-03-08"},{"lineNumber":516,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries ranked by urgency, starting from most to least urgent.","lastModifiedDate":"2021-03-08"},{"lineNumber":517,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":518,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":520,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":522,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":523,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":524,"author":{"gitId":"cheunggalen"},"content":"  ","lastModifiedDate":"2021-03-08"},{"lineNumber":525,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":526,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":527,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are more than 1 delivery entry with the same urgency.","lastModifiedDate":"2021-03-08"},{"lineNumber":528,"author":{"gitId":"cheunggalen"},"content":"    * 1b1. Delivery App ranks them based on timing then alphabetical order.","lastModifiedDate":"2021-03-08"},{"lineNumber":529,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":530,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":531,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":532,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":533,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":534,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC09 - get the list of delivery entries ranked by timing**","lastModifiedDate":"2021-03-08"},{"lineNumber":535,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":536,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":537,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":538,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":539,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":540,"author":{"gitId":"cheunggalen"},"content":"* a list of existing delivery entries ranked by timing.","lastModifiedDate":"2021-03-08"},{"lineNumber":541,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":542,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":543,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":544,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries from the list ranked by timing.","lastModifiedDate":"2021-03-08"},{"lineNumber":545,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries ranked by timing, starting from oldest to latest.","lastModifiedDate":"2021-03-08"},{"lineNumber":546,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":547,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":548,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":549,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":550,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":551,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":552,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":553,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":554,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":555,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":556,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are more than 1 delivery entry with the same timing.","lastModifiedDate":"2021-03-08"},{"lineNumber":557,"author":{"gitId":"cheunggalen"},"content":"    * 1b1. Delivery App ranks them based on urgency then alphabetical order.","lastModifiedDate":"2021-03-08"},{"lineNumber":558,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":559,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":560,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":561,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":562,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":563,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC10 - find all delivery entries associated with a time (pickup/drop off time)**","lastModifiedDate":"2021-03-08"},{"lineNumber":564,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":565,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":566,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":567,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":568,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":569,"author":{"gitId":"cheunggalen"},"content":"* a list of existing delivery entries associated with a time.","lastModifiedDate":"2021-03-08"},{"lineNumber":570,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":571,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":572,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":573,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries from the list associated with a pickup/drop off time.","lastModifiedDate":"2021-03-08"},{"lineNumber":574,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries associated with the pickup/drop off time.","lastModifiedDate":"2021-03-08"},{"lineNumber":575,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":576,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":577,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":578,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":579,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":580,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":581,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":582,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":583,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":584,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":585,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries associated with the time.","lastModifiedDate":"2021-03-08"},{"lineNumber":586,"author":{"gitId":"cheunggalen"},"content":"    * 1b1. Delivery App informs the User that there are no delivery entries associated with that time.","lastModifiedDate":"2021-03-08"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":588,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":590,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":591,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":592,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC11 - find all delivery entries associated with a location (pickup/drop off address)**","lastModifiedDate":"2021-03-08"},{"lineNumber":593,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":594,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":596,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":598,"author":{"gitId":"cheunggalen"},"content":"* a list of existing delivery entries associated with an address.","lastModifiedDate":"2021-03-08"},{"lineNumber":599,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":600,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":601,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":602,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries from the list associated with a pickup/drop off address.","lastModifiedDate":"2021-03-08"},{"lineNumber":603,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries associated with the pickup/drop off address.","lastModifiedDate":"2021-03-08"},{"lineNumber":604,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":605,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":606,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":607,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":608,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":609,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":610,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":611,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":612,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":613,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":614,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries associated with the address.","lastModifiedDate":"2021-03-08"},{"lineNumber":615,"author":{"gitId":"cheunggalen"},"content":"    * 1b1. Delivery App informs the User that there are no delivery entries associated with that address.","lastModifiedDate":"2021-03-08"},{"lineNumber":616,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":617,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":618,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":619,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":620,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":621,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC12 - find all delivery entries associated with a keyword or phrase**","lastModifiedDate":"2021-03-08"},{"lineNumber":622,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":623,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":624,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":625,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":626,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":627,"author":{"gitId":"cheunggalen"},"content":"* a list of existing delivery entries with details containing the keyword/phrase.","lastModifiedDate":"2021-03-08"},{"lineNumber":628,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":629,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":630,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":631,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries with matching keywords/phrases.","lastModifiedDate":"2021-03-08"},{"lineNumber":632,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries with details containing the keyword/phrase.","lastModifiedDate":"2021-03-08"},{"lineNumber":633,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":634,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":635,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":636,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":637,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":638,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":639,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":640,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":641,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":642,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":643,"author":{"gitId":"cheunggalen"},"content":"* 1b. There are no delivery entries with matching keywords/phrases.","lastModifiedDate":"2021-03-08"},{"lineNumber":644,"author":{"gitId":"cheunggalen"},"content":"    * 1b1. Delivery App informs the User that there are no delivery entries with details containing the keyword/phrase.","lastModifiedDate":"2021-03-08"},{"lineNumber":645,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":646,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":647,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":648,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":649,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":650,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC13 - exit the app**","lastModifiedDate":"2021-03-08"},{"lineNumber":651,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":652,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":653,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":654,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":655,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":656,"author":{"gitId":"cheunggalen"},"content":"* the app exits.","lastModifiedDate":"2021-03-08"},{"lineNumber":657,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":658,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":659,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":660,"author":{"gitId":"cheunggalen"},"content":"1.  User indicates to quit the app.","lastModifiedDate":"2021-03-08"},{"lineNumber":661,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App exits.","lastModifiedDate":"2021-03-08"},{"lineNumber":662,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":663,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":664,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":665,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":666,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":667,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC14 - to set reminders for each delivery**","lastModifiedDate":"2021-03-08"},{"lineNumber":668,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":669,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":670,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":671,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":672,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":673,"author":{"gitId":"cheunggalen"},"content":"* be notified prior to each delivery.","lastModifiedDate":"2021-03-08"},{"lineNumber":674,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":675,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":676,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":677,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":678,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":679,"author":{"gitId":"cheunggalen"},"content":"3.  User indicates which delivery entry to set a reminder for by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":680,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App requests for reminder date/time.","lastModifiedDate":"2021-03-08"},{"lineNumber":681,"author":{"gitId":"cheunggalen"},"content":"5.  User enters the date/time.","lastModifiedDate":"2021-03-08"},{"lineNumber":682,"author":{"gitId":"cheunggalen"},"content":"6.  Delivery App sets the reminder for that delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":683,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":684,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":685,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":686,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":687,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":688,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":689,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":690,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":691,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":692,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":693,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":694,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":695,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":696,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":697,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":698,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":699,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":700,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":701,"author":{"gitId":"cheunggalen"},"content":"* 5a. The reminder date/time have an invalid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":702,"author":{"gitId":"cheunggalen"},"content":"    * 5a1. Delivery App requests for a valid format.","lastModifiedDate":"2021-03-08"},{"lineNumber":703,"author":{"gitId":"cheunggalen"},"content":"    * 5a2. User enters new date/time.","lastModifiedDate":"2021-03-08"},{"lineNumber":704,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":705,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid date/time are entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":706,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":707,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 6.","lastModifiedDate":"2021-03-08"},{"lineNumber":708,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":709,"author":{"gitId":"cheunggalen"},"content":"* 5b. The delivery entry already has the same reminder.","lastModifiedDate":"2021-03-08"},{"lineNumber":710,"author":{"gitId":"cheunggalen"},"content":"    * 5b1. Delivery App informs the User of the duplicate reminder.","lastModifiedDate":"2021-03-08"},{"lineNumber":711,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":712,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":713,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":714,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":715,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":716,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC15 - get a pre-planned route for the delivery**","lastModifiedDate":"2021-03-08"},{"lineNumber":717,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":718,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":719,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":720,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":721,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":722,"author":{"gitId":"cheunggalen"},"content":"* to get a delivery route for the delivery.","lastModifiedDate":"2021-03-08"},{"lineNumber":723,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":724,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":725,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":726,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":727,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":728,"author":{"gitId":"cheunggalen"},"content":"3.  User requests to see the delivery route of an entry by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":729,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows the delivery route for the chosen entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":730,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":731,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":732,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":733,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":734,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":735,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":736,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":737,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":738,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":739,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":740,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":741,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":742,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":743,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":744,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":745,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":746,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":747,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":748,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":749,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":750,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC16 - get details of the delivery good**","lastModifiedDate":"2021-03-08"},{"lineNumber":751,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":752,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":753,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":754,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":755,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":756,"author":{"gitId":"cheunggalen"},"content":"* to get details of the delivery good.","lastModifiedDate":"2021-03-08"},{"lineNumber":757,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":758,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":759,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":760,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":761,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":762,"author":{"gitId":"cheunggalen"},"content":"3.  User requests to see the details of a delivery entry by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":763,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows the details of the chosen delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":764,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":765,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":766,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":767,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":768,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":769,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":770,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":771,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":772,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":773,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":774,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":775,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":776,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":777,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":778,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":779,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":780,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":781,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":782,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":783,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":784,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC17 - get basic customer details of the delivery**","lastModifiedDate":"2021-03-08"},{"lineNumber":785,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":786,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":787,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":788,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":789,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":790,"author":{"gitId":"cheunggalen"},"content":"* to get basic details of the customer of the delivery.","lastModifiedDate":"2021-03-08"},{"lineNumber":791,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":792,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":793,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":794,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":795,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":796,"author":{"gitId":"cheunggalen"},"content":"3.  User requests to see the customer details of a delivery entry by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":797,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows the customer details of the chosen delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":798,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":799,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":800,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":801,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":802,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":803,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":804,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":805,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":806,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":807,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":808,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":809,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":810,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":811,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":812,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":813,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":814,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":815,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":816,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":817,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":818,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC18 - get basic customer details of the delivery**","lastModifiedDate":"2021-03-08"},{"lineNumber":819,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":820,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":821,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":822,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":823,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":824,"author":{"gitId":"cheunggalen"},"content":"* to get basic details of the customer of the delivery.","lastModifiedDate":"2021-03-08"},{"lineNumber":825,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":826,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":827,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":828,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":829,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":830,"author":{"gitId":"cheunggalen"},"content":"3.  User requests to see the customer details of a delivery entry by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":831,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App shows the customer details of the chosen delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":832,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":833,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":834,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":835,"author":{"gitId":"cheunggalen"},"content":"**Extensions**","lastModifiedDate":"2021-03-08"},{"lineNumber":836,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":837,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":838,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":839,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":840,"author":{"gitId":"cheunggalen"},"content":"  Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":841,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":842,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":843,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":844,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":845,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":846,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":847,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":848,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":849,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":850,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":851,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":852,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC19 - to have an estimated delivery duration for a delivery entry**","lastModifiedDate":"2021-03-08"},{"lineNumber":853,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":854,"author":{"gitId":"cheunggalen"},"content":"**Actor: User (delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":855,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":856,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":857,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":858,"author":{"gitId":"cheunggalen"},"content":"* to get an estimated delivery duration of a delivery.","lastModifiedDate":"2021-03-08"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":860,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":862,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see all delivery entries in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":863,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App lists out all existing delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":864,"author":{"gitId":"cheunggalen"},"content":"3.  User requests to get the estimated delivery duration of a delivery entry by entering the entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":865,"author":{"gitId":"cheunggalen"},"content":"4.  Delivery App provides the estimated delivery duration of the chosen delivery entry.","lastModifiedDate":"2021-03-08"},{"lineNumber":866,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":867,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":868,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"cheunggalen"},"content":"* 1a. The list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":872,"author":{"gitId":"cheunggalen"},"content":"    * 1a1. Delivery App informs the User that the list is empty.","lastModifiedDate":"2021-03-08"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":876,"author":{"gitId":"cheunggalen"},"content":"* 3a. The number of the delivery entry is invalid.","lastModifiedDate":"2021-03-08"},{"lineNumber":877,"author":{"gitId":"cheunggalen"},"content":"    * 3a1. Delivery App requests for a valid entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":878,"author":{"gitId":"cheunggalen"},"content":"    * 3a2. User enters new entry number.","lastModifiedDate":"2021-03-08"},{"lineNumber":879,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":880,"author":{"gitId":"cheunggalen"},"content":"  Steps 3a1-3a2 are repeated until the valid entry number is entered.","lastModifiedDate":"2021-03-08"},{"lineNumber":881,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":882,"author":{"gitId":"cheunggalen"},"content":"  Use case resumes from step 4.","lastModifiedDate":"2021-03-08"},{"lineNumber":883,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":884,"author":{"gitId":"cheunggalen"},"content":"**Software System: Delivery App**","lastModifiedDate":"2021-03-08"},{"lineNumber":885,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":886,"author":{"gitId":"cheunggalen"},"content":"**Use case: UC20 - see samples of deliveries made**","lastModifiedDate":"2021-03-08"},{"lineNumber":887,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"cheunggalen"},"content":"**Actor: New User (new delivery person)**","lastModifiedDate":"2021-03-08"},{"lineNumber":889,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"cheunggalen"},"content":"**Guarantees:**","lastModifiedDate":"2021-03-08"},{"lineNumber":891,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":892,"author":{"gitId":"cheunggalen"},"content":"* to get samples of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":893,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":894,"author":{"gitId":"cheunggalen"},"content":"**MSS**","lastModifiedDate":"2021-03-08"},{"lineNumber":895,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":896,"author":{"gitId":"cheunggalen"},"content":"1.  User requests to see samples of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":897,"author":{"gitId":"cheunggalen"},"content":"2.  Delivery App shows samples of delivery entries.","lastModifiedDate":"2021-03-08"},{"lineNumber":898,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":899,"author":{"gitId":"cheunggalen"},"content":"    Use case ends.","lastModifiedDate":"2021-03-08"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":903,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":904,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":905,"author":{"gitId":"cheunggalen"},"content":"1. **Usability**:","lastModifiedDate":"2021-03-08"},{"lineNumber":906,"author":{"gitId":"cheunggalen"},"content":"    - Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2021-03-08"},{"lineNumber":907,"author":{"gitId":"cheunggalen"},"content":"    - A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-03-08"},{"lineNumber":908,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":909,"author":{"gitId":"cheunggalen"},"content":"2. **Reliability**:","lastModifiedDate":"2021-03-08"},{"lineNumber":910,"author":{"gitId":"cheunggalen"},"content":"    - Should be able to hold up to 1000 delivery entries and display all data if requested by the user in less than 5 seconds","lastModifiedDate":"2021-03-08"},{"lineNumber":911,"author":{"gitId":"cheunggalen"},"content":"    - Should be able to detect and inform users of duplicate delivery entries and confirm with user if they wish to proceed in adding them to the list","lastModifiedDate":"2021-03-08"},{"lineNumber":912,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":913,"author":{"gitId":"cheunggalen"},"content":"3. **Security:**","lastModifiedDate":"2021-03-08"},{"lineNumber":914,"author":{"gitId":"cheunggalen"},"content":"    - Users that request for any delivery entry data to be deleted will have the data permanently erased from memory","lastModifiedDate":"2021-03-08"},{"lineNumber":915,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":916,"author":{"gitId":"cheunggalen"},"content":"4. **Integrity**","lastModifiedDate":"2021-03-08"},{"lineNumber":917,"author":{"gitId":"cheunggalen"},"content":"    - For any time-related data presented to the user, the date formats will be `DD-MM-YYYY`","lastModifiedDate":"2021-03-08"},{"lineNumber":918,"author":{"gitId":"cheunggalen"},"content":"    - Delivery entries made by the user will be stored in a _JSON_ file inside the hard disks","lastModifiedDate":"2021-03-08"},{"lineNumber":919,"author":{"gitId":"cheunggalen"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":920,"author":{"gitId":"cheunggalen"},"content":"5. **Flexibility**","lastModifiedDate":"2021-03-08"},{"lineNumber":921,"author":{"gitId":"cheunggalen"},"content":"    - TimeforWheels should be able to handle as many date format inputs as possible by the user and convert the date format to `DD-MM-YYYY`","lastModifiedDate":"2021-03-08"},{"lineNumber":922,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":923,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":924,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":925,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":926,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":927,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"cheunggalen"},"content":"* **JSON:** JavaScript Object Notation","lastModifiedDate":"2021-03-08"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":931,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":933,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":934,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":937,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":938,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":939,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":940,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":941,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":942,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":944,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":945,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":946,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":947,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":948,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":950,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":951,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":952,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":953,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":954,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":957,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":958,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":961,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":962,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":963,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":964,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":965,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":966,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":974,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":976,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":977,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":978,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":980,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":981,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":982,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"cheunggalen":636,"-":343,"CSjiade":3}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-03-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2021-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"TimeForWheels is an app for delivery drivers to manage their orders efficiently. It is optimized for use via a Command","lastModifiedDate":"2021-03-05"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"Line Interface while still having the benefits of a Graphical User Interface(GUI). Overall, TimeForWheels aims to","lastModifiedDate":"2021-03-05"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"increase work productivity for delivery drivers by simplifying the delivery management and planning process.","lastModifiedDate":"2021-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"* **Table of Contents**","lastModifiedDate":"2021-03-05"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    * Quick Start","lastModifiedDate":"2021-03-04"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    * Features","lastModifiedDate":"2021-03-04"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        * Viewing help","lastModifiedDate":"2021-03-04"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"        * Add delivery points","lastModifiedDate":"2021-03-04"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"        * Delete delivery points","lastModifiedDate":"2021-03-04"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        * List all delivery points","lastModifiedDate":"2021-03-04"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        * Mark delivery as Done","lastModifiedDate":"2021-03-04"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        * Exit application","lastModifiedDate":"2021-03-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"1. Download the latest `TimeforWheels.jar` from [here](https://github.com/AY2021S2-CS2103T-W10-3/tp/releases).","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your TimeforWheels.","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app","lastModifiedDate":"2021-03-05"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"   contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2021-03-05"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    * **`list`** : Lists all delivery points","lastModifiedDate":"2021-03-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"    * **`add`**`a/John street, block 123, #01-01` : Adds a delivery point called `John street, block 123, #01-01` to the","lastModifiedDate":"2021-03-05"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"      Delivery list.","lastModifiedDate":"2021-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"    * **`delete`**`3` : Deletes the 3rd delivery point shown in the current list.","lastModifiedDate":"2021-03-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"    * **`done`**`3` : Marks the 3rd delivery task as done.","lastModifiedDate":"2021-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2021-03-05"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be","lastModifiedDate":"2021-03-05"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2021-03-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Shows all the available commands and how to use them","lastModifiedDate":"2021-03-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":85,"author":{"gitId":"pasha-292"},"content":"**Format:** `help`","lastModifiedDate":"2021-03-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":87,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":89,"author":{"gitId":"pasha-292"},"content":"* `help` - Help returns Adding a delivery task: add Deleting a delivery task: delete Listing the delivery task: list","lastModifiedDate":"2021-03-05"},{"lineNumber":90,"author":{"gitId":"pasha-292"},"content":"  Finding a delivery task: find Seeking for tech-support: help","lastModifiedDate":"2021-03-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":92,"author":{"gitId":"pasha-292"},"content":"### Viewing all delivery points : `list`","lastModifiedDate":"2021-03-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":94,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Shows all the delivery points","lastModifiedDate":"2021-03-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"pasha-292"},"content":"**Format:** `list`","lastModifiedDate":"2021-03-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":100,"author":{"gitId":"pasha-292"},"content":"* `list` - Lists all the delivery points","lastModifiedDate":"2021-03-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"Jacob-109"},"content":"### Adding a delivery point: `add`","lastModifiedDate":"2021-03-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Adds a delivery task to the delivery list.","lastModifiedDate":"2021-03-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"pasha-292"},"content":"**Format:** `add a/ADDRESS d/DATETIME`","lastModifiedDate":"2021-03-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"Jacob-109"},"content":"* `add a/John street, block 123, #01-01 d/2021-03-01 1000","lastModifiedDate":"2021-03-04"},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"  `","lastModifiedDate":"2021-03-04"},{"lineNumber":112,"author":{"gitId":"Jacob-109"},"content":"* `add a/Newgate Prison d/2022-05-01 1200","lastModifiedDate":"2021-03-04"},{"lineNumber":113,"author":{"gitId":"Jacob-109"},"content":"  `","lastModifiedDate":"2021-03-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"Jacob-109"},"content":"### Deleting a delivery task : `delete`","lastModifiedDate":"2021-03-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Deletes the specified delivery location from the delivery list.","lastModifiedDate":"2021-03-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"pasha-292"},"content":"**Format:** `delete INDEX`","lastModifiedDate":"2021-03-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"Jacob-109"},"content":"* Deletes the delivery at the specified INDEX.","lastModifiedDate":"2021-03-04"},{"lineNumber":122,"author":{"gitId":"Jacob-109"},"content":"* The index refers to the index number shown in the displayed delivery list.","lastModifiedDate":"2021-03-04"},{"lineNumber":123,"author":{"gitId":"Jacob-109"},"content":"* The index must be a positive integer 1, 2, 3,","lastModifiedDate":"2021-03-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"pasha-292"},"content":"* `delete 2` - delete 2 will delete the second delivery location in the delivery list.","lastModifiedDate":"2021-03-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"Jacob-109"},"content":"### Mark a delivery as done : `done`","lastModifiedDate":"2021-03-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Set a delivery task in the delivery list to done","lastModifiedDate":"2021-03-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":133,"author":{"gitId":"pasha-292"},"content":"**Format:** `done INDEX`","lastModifiedDate":"2021-03-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"Jacob-109"},"content":"* Sets the delivery at the specified INDEX to done.","lastModifiedDate":"2021-03-04"},{"lineNumber":136,"author":{"gitId":"Jacob-109"},"content":"* The index refers to the index number shown in the displayed delivery list.","lastModifiedDate":"2021-03-04"},{"lineNumber":137,"author":{"gitId":"Jacob-109"},"content":"* The index must be a positive integer 1, 2, 3,","lastModifiedDate":"2021-03-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"pasha-292"},"content":"**Example:**","lastModifiedDate":"2021-03-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"pasha-292"},"content":"* `done 2` - done 2 will set the second delivery location in the delivery list as done.","lastModifiedDate":"2021-03-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"pasha-292"},"content":"**Purpose:** Exits the program.","lastModifiedDate":"2021-03-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":147,"author":{"gitId":"pasha-292"},"content":"**Format:** `exit`","lastModifiedDate":"2021-03-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"pasha-292"},"content":"**Examples:**","lastModifiedDate":"2021-03-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"pasha-292"},"content":"* `exit` - Exits the program","lastModifiedDate":"2021-03-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"pasha-292"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains","lastModifiedDate":"2021-03-05"},{"lineNumber":159,"author":{"gitId":"pasha-292"},"content":"the data of your previous AddressBook home folder.","lastModifiedDate":"2021-03-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"pasha-292"},"content":"Action | Format,\u003cbr\u003e Example(s)","lastModifiedDate":"2021-03-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"pasha-292"},"content":"**Help** | `help`\u003cbr\u003e e.g., `help`","lastModifiedDate":"2021-03-05"},{"lineNumber":168,"author":{"gitId":"Jacob-109"},"content":"**Add** | `add a/ADDRESS d/DATETIME` \u003cbr\u003e e.g., `add `a/123, Clementi Rd, 1234665 d/01-02-2021`","lastModifiedDate":"2021-03-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"pasha-292"},"content":"**List** | `list`\u003cbr\u003e e.g., `list`","lastModifiedDate":"2021-03-05"},{"lineNumber":171,"author":{"gitId":"Jacob-109"},"content":"**Done** | `done INDEX`\u003cbr\u003e e.g., `done 2`","lastModifiedDate":"2021-03-04"},{"lineNumber":172,"author":{"gitId":"pasha-292"},"content":"**Exit** | `exit`\u003cbr\u003e e.g., `exit`","lastModifiedDate":"2021-03-05"},{"lineNumber":173,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-05"},{"lineNumber":174,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":175,"author":{"gitId":"Jacob-109"},"content":"","lastModifiedDate":"2021-03-04"}],"authorContributionMap":{"Jacob-109":27,"pasha-292":47,"-":99,"CSjiade":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"title: TimeforWheels","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"[![CI Status](https://github.com/AY2021S2-CS2103T-W10-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2021S2-CS2103T-W10-3/tp/actions)","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-W10-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2021S2-CS2103T-W10-3/tp)","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"**TimeforWheels is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"* If you are interested in using TimeforWheels, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"* If you are interested about developing TimeforWheels, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":12,"CSjiade":9}},{"path":"docs/team/lianjiade.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"layout: page","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"title: Lian Jiade\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"---","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"## Project: TimeForWheels","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"TimeForWheels is an app for delivery drivers to manage their orders efficiently. It is optimized","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"for use via a Command Line Interface while still having the benefits of a Graphical User","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"Interface(GUI). Overall, TimeForWheels aims to increase work productivity for delivery drivers","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"by simplifying the delivery management and planning process.","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"* **Project management**:","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"  * Managed releases `v1.1` - `v1.4` (3 releases) on GitHub","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"CSjiade":21}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"The following new person has been added: %1$s\";","lastModifiedDate":"2021-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pasha-292":2,"-":66}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"TimeForWheels\u0027 entries has been cleared!\";","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pasha-292":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"The following Person has been deleted: %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pasha-292":2,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/DoneCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import java.util.List;","lastModifiedDate":"2021-03-19"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Done;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    public static final String COMMAND_WORD \u003d \"done\";","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"            + \": Marks a task as done with a tick \"","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            + \"by the index number used in the listing. \\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_DONE_PERSON_SUCCESS \u003d \"The following Delivery Order has been checkmarked : %1$s\";","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    public static final String checkMark \u003d \"[✓]\";","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    private final Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"     * @param targetIndex of the person in the filtered person list to edit","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    public DoneCommand(Index targetIndex) {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        requireAllNonNull(targetIndex);","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d new Done(checkMark);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"        Person personToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"        Person editedPerson;","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"        if (personToEdit.getDone().toString().equals(\"\")) {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"            editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"                    personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"                    personToEdit.getRemark(), personToEdit.getTags(), done);","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"        } else {","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"            editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"                    personToEdit.getEmail(), personToEdit.getAddress(),","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"                    personToEdit.getRemark(), personToEdit.getTags(), new Done(\"\"));","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"        return new CommandResult(String.format(MESSAGE_DONE_PERSON_SUCCESS, personToEdit));","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"pasha-292":6,"CSjiade":68}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Done;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"CSjiade"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"CSjiade"},"content":"        Done updatedDone \u003d editPersonDescriptor.getDone().orElse(personToEdit.getDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"                updatedRemark, updatedTags, updatedDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":137,"author":{"gitId":"CSjiade"},"content":"        private Remark remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"CSjiade"},"content":"        private Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":152,"author":{"gitId":"CSjiade"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":153,"author":{"gitId":"CSjiade"},"content":"            setDone(toCopy.done);","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"CSjiade"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-03-15"},{"lineNumber":196,"author":{"gitId":"CSjiade"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":197,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":198,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":199,"author":{"gitId":"CSjiade"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"CSjiade"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"CSjiade"},"content":"        public void setDone(Done done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"CSjiade"},"content":"            this.done \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":205,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":206,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":207,"author":{"gitId":"CSjiade"},"content":"        public Optional\u003cDone\u003e getDone() {","lastModifiedDate":"2021-03-15"},{"lineNumber":208,"author":{"gitId":"CSjiade"},"content":"            return Optional.ofNullable(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":209,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":210,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":222,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":247,"author":{"gitId":"CSjiade"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-03-15"},{"lineNumber":248,"author":{"gitId":"CSjiade"},"content":"                    \u0026\u0026 getDone().equals(e.getDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":222,"CSjiade":29}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting TimeForWheels as requested ...\";","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pasha-292":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"pasha-292":1,"-":42}},{"path":"src/main/java/seedu/address/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import java.util.List;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    private final Index index;","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"            return true;","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"            return false;","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"        // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(),","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"                personToEdit.getEmail(), personToEdit.getAddress(), remark,","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"                personToEdit.getTags(), personToEdit.getDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"CSjiade"},"content":"    private String generateSuccessMessage(Person editedPerson) {","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS","lastModifiedDate":"2021-03-15"},{"lineNumber":85,"author":{"gitId":"CSjiade"},"content":"                : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"CSjiade"},"content":"        return String.format(message, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSjiade":89}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Done;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":" * Parses input arguments and creates a new AddCommand object.","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"                        PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"                PREFIX_EMAIL) || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"                    AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"        Remark remark \u003d new Remark(\"\"); // add command does not allow adding remarks straight away","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"        Done done \u003d new Done(\"\"); // add command does not allow adding done straight away","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        Person person \u003d new Person(name, phone, email, address, remark, tagList, done);","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":52,"CSjiade":14}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"        case DoneCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"            return new DoneCommandParser().parse(arguments);","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":77,"CSjiade":8}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":15,"CSjiade":2}},{"path":"src/main/java/seedu/address/logic/parser/DoneCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":" * Parses input arguments and creates a new DoneCommand object.","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"public class DoneCommandParser implements Parser\u003cDoneCommand\u003e {","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * Parses the given {@code String} of arguments in the context of the DoneCommand","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     * and returns a DoneCommand object for execution.","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    public DoneCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"            return new DoneCommand(index);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"CSjiade":28}},{"path":"src/main/java/seedu/address/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"        Index index;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        try {","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"        return new RemarkCommand(index, new Remark(remark));","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSjiade":35}},{"path":"src/main/java/seedu/address/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"public class Date {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Dates should be of the format YYYY-MM-DD, and must not be blank.\";","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"    /*","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"     * The first character of the date must not be a whitespace,","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\";","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"    public final String value;","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    public final LocalDate date;","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"     *","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"     * @param date A valid address.","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"    public Date(String date) {","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        this.date \u003d LocalDate.parse(date);","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        value \u003d date;","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"    /**","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"     */","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"        try {","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"            LocalDate.parse(test);","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"            return true;","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"            return false;","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"        }","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"    public String toString() {","lastModifiedDate":"2021-03-20"},{"lineNumber":47,"author":{"gitId":"pasha-292"},"content":"        return value;","lastModifiedDate":"2021-03-20"},{"lineNumber":48,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":49,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":50,"author":{"gitId":"pasha-292"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":51,"author":{"gitId":"pasha-292"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-20"},{"lineNumber":52,"author":{"gitId":"pasha-292"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-20"},{"lineNumber":53,"author":{"gitId":"pasha-292"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-03-20"},{"lineNumber":54,"author":{"gitId":"pasha-292"},"content":"                \u0026\u0026 value.equals(((Date) other).value)); // state check","lastModifiedDate":"2021-03-20"},{"lineNumber":55,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":56,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":57,"author":{"gitId":"pasha-292"},"content":"    @Override","lastModifiedDate":"2021-03-20"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-20"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-20"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"pasha-292":61}},{"path":"src/main/java/seedu/address/model/person/Done.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"public class Done {","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    public final String value;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"     * Constructs an {@code Remark}.","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"     *","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * @param done A valid string.","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    public Done(String done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        value \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"    public String toString() {","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        return value;","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"                || (other instanceof Done // instanceof handles nulls","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"                \u0026\u0026 value.equals(((Done) other).value)); // state check","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"CSjiade":42}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"            \"Names should only contain alphanumeric characters and spaces. It should not be blank\";","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"pasha-292":1,"-":58}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword)","lastModifiedDate":"2021-03-19"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"                || StringUtil.containsWordIgnoreCase(person.getAddress().value, keyword)","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"                || StringUtil.containsWordIgnoreCase(person.getPhone().value, keyword));","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pasha-292":3,"-":30}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    private final Remark remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    private final Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Remark remark, Set\u003cTag\u003e tags, Done done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"        return remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"    public Done getDone() {","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"        return done;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"CSjiade"},"content":"        return Objects.hash(name, phone, email, address, tags, done);","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":125,"author":{"gitId":"CSjiade"},"content":"                .append(getAddress())","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"CSjiade"},"content":"                .append(getDone());","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":120,"CSjiade":16}},{"path":"src/main/java/seedu/address/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"/**","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":" */","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"public class Remark {","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"    public final String value;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"     * Creates a Remark object to be associated with a Person object.","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"     * @param remark a non null remark","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"        requireNonNull(remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        value \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"    public String toString() {","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        return value;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    @Override","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"        return value.hashCode();","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSjiade":38}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Done;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(\"\");","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    public static final Done EMPTY_DONE \u003d new Done(\"\");","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"), EMPTY_REMARK,","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"                getTagSet(\"friends\"), EMPTY_DONE),","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"), EMPTY_REMARK,","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"                getTagSet(\"colleagues\", \"friends\"), EMPTY_DONE),","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), EMPTY_REMARK,","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"                getTagSet(\"neighbours\"), EMPTY_DONE),","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"), EMPTY_REMARK,","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"                    getTagSet(\"family\"), EMPTY_DONE),","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"), EMPTY_REMARK,","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"                getTagSet(\"classmates\"), EMPTY_DONE),","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"), EMPTY_REMARK,","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"                getTagSet(\"colleagues\"), EMPTY_DONE)","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":49,"CSjiade":18}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Done;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    private final String done;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"    private final String remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"            @JsonProperty(\"remark\") String remark,","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"            @JsonProperty(\"done\") String done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d done;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"        remark \u003d source.getRemark().value;","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"        done \u003d source.getDone().value;","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"        if (remark \u003d\u003d null) {","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Remark.class.getSimpleName()));","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"        }","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"CSjiade"},"content":"        final Done modelDone \u003d new Done(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"CSjiade"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelRemark, modelTags, modelDone);","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":106,"CSjiade":23}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-w10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jacob-109":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"    @FXML","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"    private Label done;","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    private Label remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        remark.setText(person.getRemark().value);","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"        done.setText(person.getDone().value);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":77,"CSjiade":6}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"      \u003cLabel fx:id\u003d\"done\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$done\" /\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":36,"CSjiade":2}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":11,"CSjiade":6}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"CSjiade":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/duplicatePersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"    \"tagged\": [ \"friends\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":12,"CSjiade":6}},{"path":"src/test/data/JsonSerializableAddressBookTest/invalidPersonAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Hans Muster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"email\": \"invalid@email!3e\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"    \"address\": \"4th street\",","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":7,"CSjiade":2}},{"path":"src/test/data/JsonSerializableAddressBookTest/typicalPersonsAddressBook.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ \"friends\" ],","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"    \"remark\" : \"\",","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"    \"tagged\" : [ ],","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"    \"done\": \"[✓]\"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":39,"CSjiade":21}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Overseas\";","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"    public static final String VALID_DONE \u003d \"[✓]\";","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Busy\";","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":127,"CSjiade":3}},{"path":"src/test/java/seedu/address/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":44,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":48,"author":{"gitId":"CSjiade"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":49,"author":{"gitId":"CSjiade"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(\"\").build();","lastModifiedDate":"2021-03-01"},{"lineNumber":50,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":51,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-01"},{"lineNumber":52,"author":{"gitId":"CSjiade"},"content":"                new Remark(editedPerson.getRemark().toString()));","lastModifiedDate":"2021-03-01"},{"lineNumber":53,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":60,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":61,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":62,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":63,"author":{"gitId":"CSjiade"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-01"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":66,"author":{"gitId":"CSjiade"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-03-01"},{"lineNumber":67,"author":{"gitId":"CSjiade"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-03-01"},{"lineNumber":68,"author":{"gitId":"CSjiade"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-03-01"},{"lineNumber":69,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":70,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().value));","lastModifiedDate":"2021-03-01"},{"lineNumber":71,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":74,"author":{"gitId":"CSjiade"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-03-01"},{"lineNumber":75,"author":{"gitId":"CSjiade"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-03-01"},{"lineNumber":76,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":77,"author":{"gitId":"CSjiade"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-01"},{"lineNumber":78,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":79,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":80,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-03-01"},{"lineNumber":83,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":84,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":85,"author":{"gitId":"CSjiade"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":86,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":87,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":88,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-03-01"},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-03-01"},{"lineNumber":91,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":92,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":93,"author":{"gitId":"CSjiade"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"CSjiade"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"CSjiade"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"CSjiade"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-01"},{"lineNumber":111,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-03-01"},{"lineNumber":112,"author":{"gitId":"CSjiade"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-03-01"},{"lineNumber":113,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-03-01"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":121,"author":{"gitId":"CSjiade"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-01"},{"lineNumber":122,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":123,"author":{"gitId":"CSjiade"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":124,"author":{"gitId":"CSjiade"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2021-03-01"},{"lineNumber":125,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2021-03-01"},{"lineNumber":126,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":127,"author":{"gitId":"CSjiade"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":128,"author":{"gitId":"CSjiade"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-03-01"},{"lineNumber":129,"author":{"gitId":"CSjiade"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2021-03-01"},{"lineNumber":130,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":131,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSjiade":131}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":95,"author":{"gitId":"CSjiade"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2021-03-01"},{"lineNumber":96,"author":{"gitId":"CSjiade"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2021-03-01"},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-01"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.value);","lastModifiedDate":"2021-03-01"},{"lineNumber":99,"author":{"gitId":"CSjiade"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2021-03-01"},{"lineNumber":100,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":101,"CSjiade":11}},{"path":"src/test/java/seedu/address/logic/parser/DoneCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.DoneCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"public class DoneCommandParserTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"    private DoneCommandParser parser \u003d new DoneCommandParser();","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DoneCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"CSjiade":20}},{"path":"src/test/java/seedu/address/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-01"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"import seedu.address.logic.commands.RemarkCommand;","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"    private RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"        // have remark","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"        // no remark","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(\"\"));","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-03-01"},{"lineNumber":35,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-01"},{"lineNumber":36,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":37,"author":{"gitId":"CSjiade"},"content":"        // no parameters","lastModifiedDate":"2021-03-01"},{"lineNumber":38,"author":{"gitId":"CSjiade"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-03-01"},{"lineNumber":39,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":40,"author":{"gitId":"CSjiade"},"content":"        // no index","lastModifiedDate":"2021-03-01"},{"lineNumber":41,"author":{"gitId":"CSjiade"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2021-03-01"},{"lineNumber":42,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":43,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSjiade":43}},{"path":"src/test/java/seedu/address/model/person/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"pasha-292"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-20"},{"lineNumber":2,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":3,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-20"},{"lineNumber":4,"author":{"gitId":"pasha-292"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-20"},{"lineNumber":5,"author":{"gitId":"pasha-292"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-20"},{"lineNumber":6,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":7,"author":{"gitId":"pasha-292"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-20"},{"lineNumber":8,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":9,"author":{"gitId":"pasha-292"},"content":"public class DateTest {","lastModifiedDate":"2021-03-20"},{"lineNumber":10,"author":{"gitId":"pasha-292"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":11,"author":{"gitId":"pasha-292"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":12,"author":{"gitId":"pasha-292"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":13,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":14,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":15,"author":{"gitId":"pasha-292"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":16,"author":{"gitId":"pasha-292"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-20"},{"lineNumber":17,"author":{"gitId":"pasha-292"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2021-03-20"},{"lineNumber":18,"author":{"gitId":"pasha-292"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2021-03-20"},{"lineNumber":19,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":20,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":21,"author":{"gitId":"pasha-292"},"content":"    @Test","lastModifiedDate":"2021-03-20"},{"lineNumber":22,"author":{"gitId":"pasha-292"},"content":"    public void isValidDate() {","lastModifiedDate":"2021-03-20"},{"lineNumber":23,"author":{"gitId":"pasha-292"},"content":"        // null date","lastModifiedDate":"2021-03-20"},{"lineNumber":24,"author":{"gitId":"pasha-292"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-03-20"},{"lineNumber":25,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":26,"author":{"gitId":"pasha-292"},"content":"        //Invalid Input","lastModifiedDate":"2021-03-20"},{"lineNumber":27,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2010-10-40\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":28,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2010-20-01\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":29,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"20 20-11-11\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":30,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2020-1 0-12\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":31,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\" 2021-10-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":32,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2019-11-10 \"));","lastModifiedDate":"2021-03-20"},{"lineNumber":33,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"20a1-05-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":34,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"2020-02-30\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":35,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"20-20-11-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":36,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"10-03-2019\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":37,"author":{"gitId":"pasha-292"},"content":"        assertFalse(Date.isValidDate(\"@2015-07-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":38,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":39,"author":{"gitId":"pasha-292"},"content":"        // valid date","lastModifiedDate":"2021-03-20"},{"lineNumber":40,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2020-10-10\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":41,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2020-11-11\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":42,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2021-02-11\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":43,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2021-03-12\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":44,"author":{"gitId":"pasha-292"},"content":"        assertTrue(Date.isValidDate(\"2021-03-12\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":45,"author":{"gitId":"pasha-292"},"content":"    }","lastModifiedDate":"2021-03-20"},{"lineNumber":46,"author":{"gitId":"pasha-292"},"content":"}","lastModifiedDate":"2021-03-20"}],"authorContributionMap":{"pasha-292":46}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":59,"author":{"gitId":"pasha-292"},"content":"        //Address with only one keyword","lastModifiedDate":"2021-03-19"},{"lineNumber":60,"author":{"gitId":"pasha-292"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Tampines\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":61,"author":{"gitId":"pasha-292"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":62,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":63,"author":{"gitId":"pasha-292"},"content":"        //Address with only one matching keyword","lastModifiedDate":"2021-03-19"},{"lineNumber":64,"author":{"gitId":"pasha-292"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Tampines\", \"Gardens\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":65,"author":{"gitId":"pasha-292"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":66,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":67,"author":{"gitId":"pasha-292"},"content":"        // Address with multiple keywords","lastModifiedDate":"2021-03-19"},{"lineNumber":68,"author":{"gitId":"pasha-292"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Tampines\", \"Street\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":69,"author":{"gitId":"pasha-292"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":70,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":71,"author":{"gitId":"pasha-292"},"content":"        // Address with mixed-case keywords","lastModifiedDate":"2021-03-19"},{"lineNumber":72,"author":{"gitId":"pasha-292"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"TaMpInEs\", \"STrEeT\"));","lastModifiedDate":"2021-03-19"},{"lineNumber":73,"author":{"gitId":"pasha-292"},"content":"        assertTrue(predicate.test(new PersonBuilder().withAddress(\"Tampines Street\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":74,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-20"},{"lineNumber":75,"author":{"gitId":"pasha-292"},"content":"        //Address with only one keyword","lastModifiedDate":"2021-03-20"},{"lineNumber":76,"author":{"gitId":"pasha-292"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"12345\"));","lastModifiedDate":"2021-03-20"},{"lineNumber":77,"author":{"gitId":"pasha-292"},"content":"        assertTrue(predicate.test(new PersonBuilder().withPhone(\"12345\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":78,"author":{"gitId":"pasha-292"},"content":"","lastModifiedDate":"2021-03-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":91,"author":{"gitId":"pasha-292"},"content":"        // Keywords match email, but does not match name","lastModifiedDate":"2021-03-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":93,"author":{"gitId":"pasha-292"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withEmail(\"alice@email.com\").build()));","lastModifiedDate":"2021-03-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"pasha-292":23,"-":72}},{"path":"src/test/java/seedu/address/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CSjiade"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-03-01"},{"lineNumber":2,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":3,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-01"},{"lineNumber":4,"author":{"gitId":"CSjiade"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-01"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":6,"author":{"gitId":"CSjiade"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-01"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":8,"author":{"gitId":"CSjiade"},"content":"public class RemarkTest {","lastModifiedDate":"2021-03-01"},{"lineNumber":9,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":10,"author":{"gitId":"CSjiade"},"content":"    @Test","lastModifiedDate":"2021-03-01"},{"lineNumber":11,"author":{"gitId":"CSjiade"},"content":"    public void equals() {","lastModifiedDate":"2021-03-01"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2021-03-01"},{"lineNumber":13,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":14,"author":{"gitId":"CSjiade"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":15,"author":{"gitId":"CSjiade"},"content":"        assertTrue(remark.equals(remark));","lastModifiedDate":"2021-03-01"},{"lineNumber":16,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":17,"author":{"gitId":"CSjiade"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-01"},{"lineNumber":18,"author":{"gitId":"CSjiade"},"content":"        Remark remarkCopy \u003d new Remark(remark.value);","lastModifiedDate":"2021-03-01"},{"lineNumber":19,"author":{"gitId":"CSjiade"},"content":"        assertTrue(remark.equals(remarkCopy));","lastModifiedDate":"2021-03-01"},{"lineNumber":20,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":21,"author":{"gitId":"CSjiade"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":22,"author":{"gitId":"CSjiade"},"content":"        assertFalse(remark.equals(1));","lastModifiedDate":"2021-03-01"},{"lineNumber":23,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":24,"author":{"gitId":"CSjiade"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"        assertFalse(remark.equals(null));","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":27,"author":{"gitId":"CSjiade"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-03-01"},{"lineNumber":28,"author":{"gitId":"CSjiade"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2021-03-01"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"        assertFalse(remark.equals(differentRemark));","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"}","lastModifiedDate":"2021-03-01"}],"authorContributionMap":{"CSjiade":31}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"CSjiade"},"content":"    private static final String VALID_REMARK \u003d BENSON.getRemark().toString();","lastModifiedDate":"2021-03-01"},{"lineNumber":32,"author":{"gitId":"CSjiade"},"content":"    private static final String VALID_DONE \u003d BENSON.getDone().toString();","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"CSjiade"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-02"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"                VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"CSjiade"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-02"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"                Name.class.getSimpleName());","lastModifiedDate":"2021-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"CSjiade"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"CSjiade"},"content":"                        VALID_ADDRESS, VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"CSjiade"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL,","lastModifiedDate":"2021-03-02"},{"lineNumber":73,"author":{"gitId":"CSjiade"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"CSjiade"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"CSjiade"},"content":"                        VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"CSjiade"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null,","lastModifiedDate":"2021-03-02"},{"lineNumber":90,"author":{"gitId":"CSjiade"},"content":"                VALID_ADDRESS, VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"CSjiade"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-02"},{"lineNumber":98,"author":{"gitId":"CSjiade"},"content":"                INVALID_ADDRESS, VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"CSjiade"},"content":"        assertThrows(IllegalValueException.class,","lastModifiedDate":"2021-03-02"},{"lineNumber":101,"author":{"gitId":"CSjiade"},"content":"                expectedMessage, person::toModelType);","lastModifiedDate":"2021-03-02"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-03-02"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"                null, VALID_REMARK, VALID_TAGS, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"                        VALID_REMARK, invalidTags, VALID_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":98,"CSjiade":24}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Done;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"CSjiade"},"content":"import seedu.address.model.person.Remark;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"CSjiade"},"content":"    public static final String DEFAULT_REMARK \u003d \"Busy\";","lastModifiedDate":"2021-03-01"},{"lineNumber":26,"author":{"gitId":"CSjiade"},"content":"    public static final String DEFAULT_DONE \u003d \"[✓]\";","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"    private Remark remark;","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"CSjiade"},"content":"    private Done done;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"CSjiade"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-03-01"},{"lineNumber":46,"author":{"gitId":"CSjiade"},"content":"        done \u003d new Done(DEFAULT_DONE);","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"CSjiade"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"CSjiade"},"content":"        done \u003d personToCopy.getDone();","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-01"},{"lineNumber":103,"author":{"gitId":"CSjiade"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-01"},{"lineNumber":104,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-01"},{"lineNumber":105,"author":{"gitId":"CSjiade"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-03-01"},{"lineNumber":106,"author":{"gitId":"CSjiade"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-03-01"},{"lineNumber":107,"author":{"gitId":"CSjiade"},"content":"        return this;","lastModifiedDate":"2021-03-01"},{"lineNumber":108,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-01"},{"lineNumber":109,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":110,"author":{"gitId":"CSjiade"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"CSjiade"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-03-15"},{"lineNumber":112,"author":{"gitId":"CSjiade"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"CSjiade"},"content":"    public PersonBuilder withDone(String done) {","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"CSjiade"},"content":"        this.done \u003d new Done(done);","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"CSjiade"},"content":"        return this;","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"CSjiade"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"CSjiade"},"content":"","lastModifiedDate":"2021-03-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":120,"author":{"gitId":"CSjiade"},"content":"        return new Person(name, phone, email, address, remark, tags, done);","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"CSjiade":28}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"CSjiade"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"CSjiade"},"content":"            .withPhone(\"94351253\").withRemark(\"Busy\")","lastModifiedDate":"2021-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":33,"author":{"gitId":"CSjiade"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withRemark(\"Very Busy\")","lastModifiedDate":"2021-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"CSjiade"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"CSjiade"},"content":"            .withDone(VALID_DONE).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"CSjiade"},"content":"            .withDone(VALID_DONE).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":72,"CSjiade":6}}]
