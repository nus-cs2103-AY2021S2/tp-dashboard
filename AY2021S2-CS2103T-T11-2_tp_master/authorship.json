[{"path":".vscode/extensions.json","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"\t\"recommendations\": [","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"\t\t\"vscjava.vscode-java-pack\",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"    \"richardwillis.vscode-gradle-extension-pack\",","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"\t\t\"shengchen.vscode-checkstyle\"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"\t],","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"\t\"unwantedRecommendations\": [","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"\t]","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":9}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"# CoLAB","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d2NR2SMZ01E)](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp)","lastModifiedDate":"2021-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"docs/images/logo.png\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to manage their school projects.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"What are you waiting for? Start tracking your university life now!","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"## Site Map","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"- **[User Guide](https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html)**","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"- **[Developer Guide](https://ay2021s2-cs2103t-t11-2.github.io/tp/DeveloperGuide.html)**","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"- **[About Us](https://ay2021s2-cs2103t-t11-2.github.io/tp/AboutUs.html)**","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"- Libraries used:","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"  - [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"  - [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"  - [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  - [TestFX](https://github.com/TestFX/TestFX)","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":14,"Eriksen2411":1,"-":5,"samuelfangjw":9}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import org.gradle.api.tasks.testing.logging.TestLogEvent","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    String testFxVersion \u003d \u00274.0.16-alpha\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: testFxVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit5\u0027, version: testFxVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-11+26\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    archiveFileName \u003d \u0027CoLAB.jar\u0027","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"test {","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-03-04"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    systemProperty \u0027testfx.setup.timeout\u0027, \u002760000\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    testLogging {","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        events TestLogEvent.FAILED, TestLogEvent.SKIPPED","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        // Prints the currently running test\u0027s name in the CI\u0027s build log,","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        // so that we can check if tests are being silently skipped or","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        // stalling the build.","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        if (System.env.\u0027CI\u0027) {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            events \u003c\u003c TestLogEvent.STARTED","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2021-03-04"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"task headless {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    doFirst {","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        println \u0027Setting headless mode properties.\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        test {","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            systemProperties \u003d [","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027java.awt.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027testfx.robot\u0027: \u0027glass\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027testfx.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027prism.order\u0027: \u0027sw\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027prism.text\u0027: \u0027t2k\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            ]","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"// Makes sure that headless properties are set before running tests","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"test.mustRunAfter headless","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"defaultTasks \u0027clean\u0027, \u0027headless\u0027, \u0027test\u0027","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":64,"samuelfangjw":50}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"## CoLAB Project team","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"### Fang Junwei, Samuel","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/samuelfangjw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/samuelfangjw)]","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/samuelfangjw.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Deliverables and Deadlines","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"### Vevek Selvam","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/vevek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/vevek)]","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/vevek.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Integration","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Model, Logic","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"### Nguyen Duc Danh","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/eriksen2411.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/Eriksen2411)]","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/eriksen2411.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Documentation","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Storage","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"### Li Ruochen","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/lirc572.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/lirc572)]","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/lirc572.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Code quality","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Tests","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eriksen2411":25,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `ContactListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"1. The command execution can affect the `Model` (e.g. adding a contact).","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"1. In addition, the `CommandResult` object also contains a `UiCommand` object, which encapsulates information needed to instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"* exposes an unmodifiable `ObservableList\u003cContact\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Contact` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Contact` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"### Model for Tasks (Todos, Deadlines \u0026 Events)","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"The classes and implementations used to model various Tasks (e.g. Todos, Deadlines \u0026 Events) are facilitated by `CompletableTodo`, `CompletableDeadline` and \u0027`Repeatable` abstract classes. This design is similar to the Contact model from AB3.","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"The client creates a concrete `Todo`, `Deadline` or `Event` that encapsulates all information related to these Tasks. Each concrete `Todo`, `Deadline` or `Event` implements the `CompletableTodo`, `CompletableDeadline` and \u0027`Repeatable` abstract classes respectively. Each `Completable` and `Repeatable` abstract class specifies specific behaviors.","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"Step 1. The user executes the command `addD`, which adds a Deadline to a project specified in the command.","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"Step 2. The `Deadline` object is created during  the parsing of a user\u0027s command. The `Deadline` object requires a description \u0026 LocalDate.","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"Step 3. The `Deadline` object is then passed as a parameter in a created `AddDeadlineCommand` that would be executed.","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"Step 4. During it\u0027s execution, the `Deadline` object would be added to a `DeadlineList` that is stored in a `Project`.","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"##### Aspect: How to store and pass around UI related instructions","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"* **Alternative 1 (current choice):** Implement  `Todo`, `Deadline` or `Event` each with independent abstract classes (`CompletableTodo`, `CompletableDeadline` and `Repeatable` ).","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"        * Design allows the behaviour of `CompletableTodo`, `CompletableDeadline` and `Repeatable` to be extended without (or with minimal) changes to `Todo`, `Deadline` or `Event`.","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"        * Each `CompletableTodo`, `CompletableDeadline` and `Repeatable` encapsulates all information needed for that specific Task. For example, `Event` which implements `Repeatable` has a specific implementation that allows it to repeat in a specified interval. (Note: The intervals are defined in an `Interval` enumeration.)","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"        * Design allows `TodoList`, `DeadlineList` and `EventList` to hold specifically and only `CompletableTodo`, `CompletableDeadline` and `Repeatable` respectively. This ensures that implementation errors with respect to how `CompletableTodo`, `CompletableDeadline` and `Repeatable` are stored, can be minimised.","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"vevek"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"vevek"},"content":"        * Many classes required.","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"vevek"},"content":"* **Alternative 2 (implementation used in AB3):** Implement  `Todo`, `Deadline` or `Event` with a common `Task` abstract class.","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"vevek"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"vevek"},"content":"        * Easy to implement.","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"vevek"},"content":"        * Minimal changes needed if a new implementation of `Task` needs to extend behaviors already defined in `Task`.","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"vevek"},"content":"        * Fewer classes required.","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"vevek"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"vevek"},"content":"        * `Task` is not closed to modification. A new implementation of `Task` might require the addition of fields to store additional behaviours and attributes.","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"vevek"},"content":"        * Risk of having a `Todo` added to a `DeadlineList` is heightened during implementation. This is in contrast to alternative 2, where each `TodoList`, `DeadlineList` and `EventList` holds only `CompletableTodo`, `CompletableDeadline` and `Repeatable` respectively.","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"### View Projects Feature","lastModifiedDate":"2021-03-26"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"This section explains the implementation of the View Project feature. The implementation of other commands that opens panels, windows or tabs are similar.","lastModifiedDate":"2021-03-26"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"The `ViewProject` command results in the UI displaying the specified project together with all its related information. ","lastModifiedDate":"2021-03-26"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"The mechanism to issue the command to display a new project is facilitated by `ViewProjectUiCommand`, a concrete implementation of the `UiCommand` abstract class, which encapsulates the project `Index` as well as the logic that determines which methods to call in the `MainWindow`.","lastModifiedDate":"2021-03-26"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"![View Project Sequence Diagram](images/ViewProjectCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-26"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"Step 1. The user issues the command `viewP 1` to display a panel containing information about the first project in the project list.","lastModifiedDate":"2021-03-26"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"Step 2. A `CommandResult` object is created (see section on [Logic Component](#logic-component)) containing a `ViewProjectUiCommand` object. The `ViewProjectUiCommand` object stores the `Index` of the first project in the project list.","lastModifiedDate":"2021-03-26"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"Step 3. The `CommandResult` is passed to the `MainWindow`, which gets the `UiCommand` by calling `CommandResult#getUiCommand()`.","lastModifiedDate":"2021-03-26"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"Step 4. The `MainWindow` now calls `UiCommand#execute`, which will result in a call to the overridden method `ViewProjectUiCommand#execute`.","lastModifiedDate":"2021-03-26"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"Step5. Execution of this method will result in a call to `MainWindow#selectProject` with the `Index` of the first project as an argument. This will display the first project in the project list.","lastModifiedDate":"2021-03-26"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"##### Aspect: How to store and pass around UI related instructions","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"* **Alternative 1 (current choice):** Encapsulate instructions using `UiCommand` Object.","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"        * Design allows behaviour of `UI` to be extended without (or with minimal) changes to the `MainWindow` and `CommandResult`. This makes it relatively easy to add many `UiCommands`.","lastModifiedDate":"2021-03-26"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"        * `UiCommand` encapsulates all information needed to execute the instruction (e.g. `Index` of project). It is easy to add new commands that store different types of information.","lastModifiedDate":"2021-03-26"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        * Easy to support complex `UiCommands` that perform multiple instructions or contain logic.","lastModifiedDate":"2021-03-26"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        * Many classes required.","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"        * `MainWindow` and `UiCommand` are still highly coupled, as `MainWindow` both invokes the command and performs the requested action. ","lastModifiedDate":"2021-03-26"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"* **Alternative 2 (implementation used in AB3):** Store instructions in `CommandResult` as boolean fields.","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"        * Easy to implement.","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        * Minimal changes needed if the new instruction is a combination of already existing instructions as the already existing boolean fields can be set to true.","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"        * No need for extra classes.","lastModifiedDate":"2021-03-26"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"        * `MainWindow` and `CommandResult` are not closed to modification. A new instruction to change the UI might require the addition of fields to `CommandResult` (boolean fields for instructions and other fields for related data) as well as a new conditional statement in `MainWindow#execute` to handle the new instruction. This makes it relatively difficult to add new instructions.","lastModifiedDate":"2021-03-26"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"lirc572"},"content":"### Update Commands [Coming soon in v1.3]","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"lirc572"},"content":"CoLAB has several update commands for projects, events, deadlines, tasks and groupmates. They are used to edit details of entities that have already been created.","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"lirc572"},"content":"Below is a sequence diagram of how an `updateP` command is executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":223,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"lirc572"},"content":"![UpdateP command sequence diagram](images/UpdateProjectCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"lirc572"},"content":"Step 1. The user types an update project command `updateP 1 n/Group Project`.","lastModifiedDate":"2021-03-25"},{"lineNumber":227,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":228,"author":{"gitId":"lirc572"},"content":"Step 2. User input is passed to the `addressBookParser`, which creates a new `UpdateProjectCommand`.","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"lirc572"},"content":"Step 3. The `UpdateProjectCommand` will then be executed by calling its `execute` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"lirc572"},"content":"Step 4. Since the `ModelManager` is passed to `UpdateProjectCommand#execute`, it is able to call a method `ModelManager#setProject` to change an existing project of a given `Index` in the `ProjectsFolder` to the modified version.","lastModifiedDate":"2021-03-25"},{"lineNumber":233,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":234,"author":{"gitId":"lirc572"},"content":"Step 5. After the project gets updated, `Model#saveProjectsFolder` is called to save the list of projects to files.","lastModifiedDate":"2021-03-25"},{"lineNumber":235,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"lirc572"},"content":"The other update commands require some more work because events, deadlines, tasks and groupmates are sub-components of a project. It is therefore necessary to specify a project in the command so that edits can be applied to that project. Below is a sequence diagram of how an `updateG` (update groupmate) command is executed.","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"lirc572"},"content":"![UpdateP command sequence diagram](images/UpdateGroupmateCommandSequenceDiagram.png)","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":240,"author":{"gitId":"lirc572"},"content":"Step 1. The user types an update project command `updateG 1 n/Alice`.","lastModifiedDate":"2021-03-25"},{"lineNumber":241,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":242,"author":{"gitId":"lirc572"},"content":"Step 2. User input is passed to the `addressBookParser`, which creates a new `UpdateGroupmateCommand`.","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"lirc572"},"content":"Step 3. The `UpdateGroupmateCommand` will then be executed by calling its `execute` method.","lastModifiedDate":"2021-03-25"},{"lineNumber":245,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":246,"author":{"gitId":"lirc572"},"content":"Step 4. It will then get the list of projects through `Model#getFilteredProjectList`, and use the project `Index` to get the project to be updated.","lastModifiedDate":"2021-03-25"},{"lineNumber":247,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":248,"author":{"gitId":"lirc572"},"content":"Step 5. It will then call a method `Project#setGroupmate` to change an existing groupmate of a given `Index` in the `GroupmateList` to the modified version.","lastModifiedDate":"2021-03-25"},{"lineNumber":249,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"lirc572"},"content":"Step 5. After the project gets updated, `Model#saveProjectsFolder` is called to save the list of projects to files.","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":252,"author":{"gitId":"lirc572"},"content":"#### Design consideration:","lastModifiedDate":"2021-03-25"},{"lineNumber":253,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"lirc572"},"content":"##### Aspect: How the target contact is specified when updating contacts","lastModifiedDate":"2021-03-25"},{"lineNumber":255,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":256,"author":{"gitId":"lirc572"},"content":"* **Alternative 1 (current choice):** Pass the `Index` object down to `UniqueContactList#setContact`.","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"lirc572"},"content":"    * Pros: More Consistent in how to pass indexes and locate an element in a `List` throughout the codebase.","lastModifiedDate":"2021-03-25"},{"lineNumber":258,"author":{"gitId":"lirc572"},"content":"    * Cons: Higher coupling since `UniqueContactList` now relies on `Index`.","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":260,"author":{"gitId":"lirc572"},"content":"* **Alternative 2 (implementation used in AB3):** Pass the target `Contact` object to be edited to `UniqueContactList#setContact`.","lastModifiedDate":"2021-03-28"},{"lineNumber":261,"author":{"gitId":"lirc572"},"content":"    * Pros: Lower coupling since `Index` is not a dependency of `UniqueContactList`.","lastModifiedDate":"2021-03-28"},{"lineNumber":262,"author":{"gitId":"lirc572"},"content":"    * Cons: Extra computation of index from the `Contact` object since the index is already provided in the command. Passing the original project around does not provide more information than passing only the index.","lastModifiedDate":"2021-03-28"},{"lineNumber":263,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"lirc572"},"content":"* **Alternative 3:** Pass the zero-based index as an integer down to `UniqueContactList#setContact`.","lastModifiedDate":"2021-03-28"},{"lineNumber":265,"author":{"gitId":"lirc572"},"content":"    * Pros: Will use less memory (only needs memory for an integer instead of a `Contact` object or an `Index` object), no reliance on `Index`.","lastModifiedDate":"2021-03-28"},{"lineNumber":266,"author":{"gitId":"lirc572"},"content":"    * Cons: May be confusing for new developers since some other parts of the code use one-based indexes instead.","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"Eriksen2411"},"content":"### Add Event to Project Command [Implemented in v1.2]","lastModifiedDate":"2021-03-24"},{"lineNumber":269,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":270,"author":{"gitId":"Eriksen2411"},"content":"The mechanism is used to add an event to the `EventList` of `Project` specified by the index in the project list shown.","lastModifiedDate":"2021-03-24"},{"lineNumber":271,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":272,"author":{"gitId":"Eriksen2411"},"content":"The client creates a concrete `AddEventCommand` that contains the specified index of project and a valid Event object. Each concrete `AddEventCommand` implements the `AddEventCommand#execute` method, which calls the appropriate method(s) in `Project` to update its `EventList` and appropriate method(s) in `Model` to update the Project List.","lastModifiedDate":"2021-03-24"},{"lineNumber":273,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":274,"author":{"gitId":"Eriksen2411"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":275,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":276,"author":{"gitId":"Eriksen2411"},"content":"Step 1. The user executes the command `addEto 1 d/Tutorial i/WEEKLY at/25-03-2021`, which adds an `Event` with description, interval and date specified to `Project` 1 in Project List.","lastModifiedDate":"2021-03-24"},{"lineNumber":277,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"Eriksen2411"},"content":"Step 2: The input is parsed by `AddEventCommandParser`. It checks if `Event` provided is valid or not. If input is invalid, an exception will be throw and `Ui` will help print out the exception message. Otherwise, an `AddEventCommand` will be created.","lastModifiedDate":"2021-03-24"},{"lineNumber":279,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":280,"author":{"gitId":"Eriksen2411"},"content":"Step 3: The `AddEventCommand#execute` is called. It checks whether `Index` provided is valid or not and if `Event` provided is duplicated. If check fails, an exception will be thrown, `Ui` will help print out the exception message. Otherwise, the change will be made to `Project`and `Model` in the next step.","lastModifiedDate":"2021-03-24"},{"lineNumber":281,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":282,"author":{"gitId":"Eriksen2411"},"content":"Step 4: The `Project` specified by Index will call addEvent function to add the given `Event` to its `EventList`. `Model` updates its Project List based on the change.","lastModifiedDate":"2021-03-24"},{"lineNumber":283,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":284,"author":{"gitId":"Eriksen2411"},"content":"Step 5: A `CommandResult` object is created (see section on [Logic Component](#logic-component)) containing the Event added. The `Ui` will help print out the success message.","lastModifiedDate":"2021-03-24"},{"lineNumber":285,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":286,"author":{"gitId":"Eriksen2411"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":287,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":288,"author":{"gitId":"Eriksen2411"},"content":"##### Aspect: How to add a new `Event` to a `Project`.","lastModifiedDate":"2021-03-24"},{"lineNumber":289,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":290,"author":{"gitId":"Eriksen2411"},"content":"* **Alternative 1 (current choice):** `Project` tells its `EventList` to update the list of Events stored.","lastModifiedDate":"2021-03-24"},{"lineNumber":291,"author":{"gitId":"Eriksen2411"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":292,"author":{"gitId":"Eriksen2411"},"content":"        * This implementation requires no additional time and space (for creation of new \u0027Project` and `EventList` object).","lastModifiedDate":"2021-03-24"},{"lineNumber":293,"author":{"gitId":"Eriksen2411"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":294,"author":{"gitId":"Eriksen2411"},"content":"        * This implementation will not work with an immutable implementation of `EventList`","lastModifiedDate":"2021-03-24"},{"lineNumber":295,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":296,"author":{"gitId":"lirc572"},"content":"* **Alternative 2:** A new `Project` object is initialized with a new `EventList` object containing the added `Event`.","lastModifiedDate":"2021-03-25"},{"lineNumber":297,"author":{"gitId":"Eriksen2411"},"content":"    * Pros: ","lastModifiedDate":"2021-03-24"},{"lineNumber":298,"author":{"gitId":"Eriksen2411"},"content":"        * If the implementation of `EventList` becomes immutable. This implementaion still works.","lastModifiedDate":"2021-03-24"},{"lineNumber":299,"author":{"gitId":"Eriksen2411"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":300,"author":{"gitId":"Eriksen2411"},"content":"        * This implementation requires more time and space (for creation of new \u0027Project` and `EventList` object).","lastModifiedDate":"2021-03-24"},{"lineNumber":301,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":302,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"lirc572"},"content":"Step 2. The user executes `delete 5` command to delete the 5th contact in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2021-03-28"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"lirc572"},"content":"Step 3. The user executes `add n/David …​` to add a new contact. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2021-03-28"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"lirc572"},"content":"Step 4. The user now decides that adding the contact was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2021-03-28"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"lirc572"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the contact being deleted).","lastModifiedDate":"2021-03-28"},{"lineNumber":378,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":393,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":394,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":395,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"samuelfangjw"},"content":"* student currently enrolled in a university","lastModifiedDate":"2021-02-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":410,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"samuelfangjw"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-23"},{"lineNumber":413,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":414,"author":{"gitId":"samuelfangjw"},"content":"* supports only features a university student needs without additional clutter","lastModifiedDate":"2021-02-23"},{"lineNumber":415,"author":{"gitId":"samuelfangjw"},"content":"* information organised by categories relevant to university students (e.g. tag by modules)","lastModifiedDate":"2021-02-23"},{"lineNumber":416,"author":{"gitId":"samuelfangjw"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-02-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"lirc572"},"content":"| `* * *`  | user                                       | add a new contact               | keep track of details from peers I have crossed paths with             |","lastModifiedDate":"2021-03-28"},{"lineNumber":427,"author":{"gitId":"lirc572"},"content":"| `* * *`  | user                                       | edit a contact\u0027s details        | update their details when there is change                              |","lastModifiedDate":"2021-03-28"},{"lineNumber":428,"author":{"gitId":"lirc572"},"content":"| `* * *`  | user                                       | delete a contact                | remove entries that I no longer need                                   |","lastModifiedDate":"2021-03-28"},{"lineNumber":429,"author":{"gitId":"lirc572"},"content":"| `* * *`  | user                                       | find a contact by name          | locate details of contacts without having to go through the entire list |","lastModifiedDate":"2021-03-28"},{"lineNumber":430,"author":{"gitId":"lirc572"},"content":"| `* * *`  | user                                       | tag a contact with tags         | easily keep track of who the contact is                                |","lastModifiedDate":"2021-03-28"},{"lineNumber":431,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | University Student                         | find contacts by modules taken | easily find contacts who take the same module as me                    |","lastModifiedDate":"2021-02-23"},{"lineNumber":432,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | Student Teaching Assistant                 | find contacts by tutorial group| easily find contacts of students in my class                           |","lastModifiedDate":"2021-02-23"},{"lineNumber":433,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | user                                       | purge all data in the app      | start my address book from fresh                                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":434,"author":{"gitId":"samuelfangjw"},"content":"| `*`      | long time user                             | archive data files             | refer to old address books when needed                                 |","lastModifiedDate":"2021-02-23"},{"lineNumber":435,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"samuelfangjw"},"content":"(For all use cases below, the **System** is `CoLAB` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"lirc572"},"content":"#### UC1 - Add a contact","lastModifiedDate":"2021-03-28"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"lirc572"},"content":"1. User requests to add a contact","lastModifiedDate":"2021-03-28"},{"lineNumber":448,"author":{"gitId":"lirc572"},"content":"2. CoLAB adds the contact","lastModifiedDate":"2021-03-28"},{"lineNumber":449,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given arguments are invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":455,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":456,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":457,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":458,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":459,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":460,"author":{"gitId":"lirc572"},"content":"#### UC2 - Find details of a specific contact","lastModifiedDate":"2021-03-28"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":463,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":464,"author":{"gitId":"lirc572"},"content":"1. User requests to find a contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":465,"author":{"gitId":"lirc572"},"content":"2. CoLAB shows a list of contacts that match user\u0027s query.","lastModifiedDate":"2021-03-28"},{"lineNumber":466,"author":{"gitId":"lirc572"},"content":"3. User requests to view more details about a specific contact in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":467,"author":{"gitId":"lirc572"},"content":"4. CoLAB shows more information about the contact in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":468,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":469,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":471,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":473,"author":{"gitId":"lirc572"},"content":"* 2a. The list of contacts is empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":475,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":477,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"samuelfangjw"},"content":"    * 3a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":480,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":481,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":484,"author":{"gitId":"lirc572"},"content":"#### UC3 - Delete a contact","lastModifiedDate":"2021-03-28"},{"lineNumber":485,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":486,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":487,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":488,"author":{"gitId":"lirc572"},"content":"1. User requests to list contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":489,"author":{"gitId":"lirc572"},"content":"2. CoLAB shows a list of contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":490,"author":{"gitId":"lirc572"},"content":"3. User requests to delete a specific contact in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":491,"author":{"gitId":"lirc572"},"content":"4. CoLAB deletes the contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":492,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":493,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":494,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":495,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":496,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":497,"author":{"gitId":"lirc572"},"content":"* 2a. The list of contacts is empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":498,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":499,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":500,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":501,"author":{"gitId":"samuelfangjw"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":502,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":503,"author":{"gitId":"samuelfangjw"},"content":"    * 3a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":504,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":505,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-23"},{"lineNumber":506,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":507,"author":{"gitId":"samuelfangjw"},"content":"#### UC4 - Purge all entries from the app","lastModifiedDate":"2021-02-23"},{"lineNumber":508,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":509,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":511,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to delete all entries from the app.","lastModifiedDate":"2021-02-23"},{"lineNumber":512,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB asks user to confirm request.","lastModifiedDate":"2021-02-23"},{"lineNumber":513,"author":{"gitId":"samuelfangjw"},"content":"3. User confirms that they want to delete all entries.","lastModifiedDate":"2021-02-23"},{"lineNumber":514,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB deletes all data from the app.","lastModifiedDate":"2021-02-23"},{"lineNumber":515,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":516,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":517,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":518,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":519,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":520,"author":{"gitId":"samuelfangjw"},"content":"* 3a. User decides not to delete all entries.","lastModifiedDate":"2021-02-23"},{"lineNumber":521,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":522,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":523,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":524,"author":{"gitId":"lirc572"},"content":"#### UC5 - Find all contacts that take a certain module","lastModifiedDate":"2021-03-28"},{"lineNumber":525,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":526,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":527,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":528,"author":{"gitId":"lirc572"},"content":"1. User requests to list all contacts by modules taken.","lastModifiedDate":"2021-03-28"},{"lineNumber":529,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB lists all entries who have taken the modules.","lastModifiedDate":"2021-02-23"},{"lineNumber":530,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":531,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":532,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":533,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":534,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":535,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given modules are invalid","lastModifiedDate":"2021-02-23"},{"lineNumber":536,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":537,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":538,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":539,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":540,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":541,"author":{"gitId":"lirc572"},"content":"* 2a. The list of contacts is empty.","lastModifiedDate":"2021-03-28"},{"lineNumber":542,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":543,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":544,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":545,"author":{"gitId":"lirc572"},"content":"#### UC6 - Adding or Modifying information about a contact","lastModifiedDate":"2021-03-28"},{"lineNumber":546,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":547,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":548,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":549,"author":{"gitId":"lirc572"},"content":"1. User requests to edit information about a contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":550,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB updates entry with new information.","lastModifiedDate":"2021-02-23"},{"lineNumber":551,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":552,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":553,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":554,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":555,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":556,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given arguments are invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":557,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":558,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":559,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":560,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"lirc572"},"content":"* Technical requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":567,"author":{"gitId":"lirc572"},"content":"    * CoLAB should work on any _mainstream OS_ on both 32-bit and 64-bit architectures as long as it has Java `11` or above installed.","lastModifiedDate":"2021-02-24"},{"lineNumber":568,"author":{"gitId":"lirc572"},"content":"    * CoLAB should work under _common screen resolutions_. (i.e. the window should not be out of boundary)","lastModifiedDate":"2021-02-24"},{"lineNumber":569,"author":{"gitId":"lirc572"},"content":"* Performance requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":570,"author":{"gitId":"lirc572"},"content":"    * CoLAB should be able to hold _up to 1000 contacts_ and _1000 projects_ without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-03-28"},{"lineNumber":571,"author":{"gitId":"lirc572"},"content":"    * The response to any command should be shown _within 1 second_.","lastModifiedDate":"2021-02-24"},{"lineNumber":572,"author":{"gitId":"lirc572"},"content":"* Constraints:","lastModifiedDate":"2021-02-24"},{"lineNumber":573,"author":{"gitId":"lirc572"},"content":"    * CoLAB should be _backward compatible_ with data files produced by earlier versions as much as possible. If one release is not compatible with earlier versions, a migration guide should be provided.","lastModifiedDate":"2021-02-24"},{"lineNumber":574,"author":{"gitId":"lirc572"},"content":"    * CoLAB must be open source under [the MIT License](https://raw.githubusercontent.com/AY2021S2-CS2103T-T11-2/tp/master/LICENSE).","lastModifiedDate":"2021-02-24"},{"lineNumber":575,"author":{"gitId":"lirc572"},"content":"* Quality requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":576,"author":{"gitId":"lirc572"},"content":"    * A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-02-24"},{"lineNumber":577,"author":{"gitId":"lirc572"},"content":"    * A user familiar with CLI tools should find CoLAB commands very intuitive.","lastModifiedDate":"2021-02-24"},{"lineNumber":578,"author":{"gitId":"lirc572"},"content":"    * A user who has no experience with CLI tools should be able to find CoLAB easy to use with the help of the [_User Guide_](UserGuide.md).","lastModifiedDate":"2021-02-24"},{"lineNumber":579,"author":{"gitId":"lirc572"},"content":"* Process requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":580,"author":{"gitId":"lirc572"},"content":"    * the project is expected to adhere to a schedule that delivers a feature set every two weeks.","lastModifiedDate":"2021-02-24"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"lirc572"},"content":"* **Common screen resolutions**: minimum _640×480_, maximum _3840×2160_","lastModifiedDate":"2021-02-24"},{"lineNumber":585,"author":{"gitId":"samuelfangjw"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2021-02-23"},{"lineNumber":586,"author":{"gitId":"samuelfangjw"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2021-02-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"lirc572"},"content":"### Deleting a contact","lastModifiedDate":"2021-03-28"},{"lineNumber":618,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"lirc572"},"content":"1. Deleting a contact while all contacts are being shown","lastModifiedDate":"2021-03-28"},{"lineNumber":620,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"lirc572"},"content":"    1. Prerequisites: List all contacts using the `list` command. Multiple contacts in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"lirc572"},"content":"       Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-03-28"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lirc572":105,"vevek":37,"Eriksen2411":33,"-":333,"samuelfangjw":132}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2021-04-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-04-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"\u003c!-- TOC adapted from","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"https://github.com/AY2021S1-CS2103T-W16-3/tp/pull/179/commits/aec461182c194c9ca2c67d7c407fcabb376191ff","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"--\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"\u003cdiv class\u003d\"toc-no-bullet-points\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  * Table of Contents","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"  {:toc}","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"## **1. Introduction**","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"images/logo.png\"\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"Welcome and thank you for downloading **CoLAB**! Are you a university student in search of a reliable app to keep track of your school projects? Do you struggle to keep track of the many todos and deadlines for various school projects? Do you also tend to forget the various group meetings you have scheduled? You have come to the right place!","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"CoLAB (Collaboration Lab) is a **desktop app for university students to manage their school projects.**  CoLAB\u0027s main features include:","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"* Project management","lastModifiedDate":"2021-04-02"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"* Contacts management","lastModifiedDate":"2021-04-02"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"* Today View that surfaces an overview of upcoming events and deadlines","lastModifiedDate":"2021-04-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"With CoLAB, you can efficiently manage all your school projects through our comprehensive project management tools.","lastModifiedDate":"2021-04-02"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"We have designed a user-friendly User Interface (UI) that is intuitive to both first-time users and seasoned ones. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-04-02"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"We look forward to seeing what you accomplish with CoLAB with a clean and inviting UI. Get your journey started with the [Quick Start section](#3-quick-start)!","lastModifiedDate":"2021-04-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"## **2. About**","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"This section serves to familiarise you with the information and terms that would help you make the best use of this user guide.","lastModifiedDate":"2021-04-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"### **2.1 Structure of this Document**","lastModifiedDate":"2021-04-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"We have included a large set of features in CoLAB to give you the greatest flexibility over what you can do with it. As such, this User Guide has been structured in a manner that allows you to easily find what you are looking for.","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"In [Section 2.2: Reading this Document](#22-reading-this-document), you will find useful tips on efficiently reading this document.","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"In [Section 3: Quick Start](#3-quick-start), you will find a quick start guide to get you started with using CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"In [Section 4: Features](#4-features), you will find documentation on all of CoLAB\u0027s commands and features.","lastModifiedDate":"2021-04-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"In [Section 5: FAQ](#5-faq), you may find answers to some questions you may have on using CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"In [Section 6: Command Summary](#6-command-summary), you will find a summary on CoLAB\u0027s commands.","lastModifiedDate":"2021-04-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"You can also easily sift through CoLAB\u0027s various commands and features by referring to the Table of Contents at the beginning of this User Guide.","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"### **2.2 Reading this Document**","lastModifiedDate":"2021-04-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"This subsection serves to provide explanations on the application\u0027s user interface (UI) as well as symbols, syntax and technical terms used throughout this User Guide. Familiarising yourself with this subsection will make the User Guide easier to read.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"#### **2.2.1 Special Formats**","lastModifiedDate":"2021-04-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"Formats discussed in this section may be used in relevant areas of this user guide.","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"**Tips**","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"Messages that appear in a tip box are useful for improving your experience with CoLAB.","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"Example tip!","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"**Warnings**","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"Messages that appear in a warning box are important to follow as unintended consequences may follow otherwise.","lastModifiedDate":"2021-04-01"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-04-01"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"Example warning!","lastModifiedDate":"2021-04-01"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"**Additional Information**","lastModifiedDate":"2021-04-02"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"Messages that appear in an information box are additional information that may be useful to know.","lastModifiedDate":"2021-04-02"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"Example information!","lastModifiedDate":"2021-04-02"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"**Highlights**","lastModifiedDate":"2021-04-01"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"Words or sentences that appear in these highlighted boxes are being emphasised for their relevance in that section.","lastModifiedDate":"2021-04-01"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"`Example highlight!`","lastModifiedDate":"2021-04-01"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"#### **2.2.2 Sections of the Application Window**","lastModifiedDate":"2021-04-02"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"Different sections of the application window will be referred to by the names described in the image shown below:","lastModifiedDate":"2021-04-02"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"![App Window Sections](images/app_window_sections.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"#### **2.2.3 Navigating the UI**","lastModifiedDate":"2021-04-02"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"Although most of the buttons you see on the screen are clickable, the UI has been designed primarily to be navigated using the command line interface.","lastModifiedDate":"2021-04-02"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"Users can enter commands into the command box and press `ENTER` to execute it. The result box will be updated with information on whether the command has been successfully executed. Depending on the command executed, the main panel may also be updated based on the command executed.","lastModifiedDate":"2021-04-02"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"Most commands include all the required information (e.g. project index and deadline index when updating a deadline) needed so that you can run the command from anywhere in the app. ","lastModifiedDate":"2021-04-02"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"When entering a command, you may find it helpful to see a history of your previous commands. To do so simply press `UP` or `DOWN` while typing to navigate through the command history list.","lastModifiedDate":"2021-04-02"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"Only successfully executed commands will be saved.","lastModifiedDate":"2021-04-02"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"#### **2.2.4 Command Format**","lastModifiedDate":"2021-04-02"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"Commands discussed in this user guide follow these rules:","lastModifiedDate":"2021-04-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"  e.g. in `addC n/NAME`, `NAME` is a parameter which can be used as `addC n/John Doe`.","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2021-03-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"* Parameters can be in any order. This excludes a parameter without a prefix, which must be the first parameter when required.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.\u003cbr\u003e","lastModifiedDate":"2021-04-03"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"  e.g. if the command specifies `PROJECT_INDEX i/TODO_INDEX d/DESCRIPTION`, `i/TODO_INDEX d/DESCRIPTION PROJECT_INDEX` is **not**  acceptable as `PROJECT_INDEX` is a parameter without a prefix and should be the first parameter.","lastModifiedDate":"2021-04-03"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"* Commands that do not take in extra parameters (such as `help` and `exit`) will ignore the additional parameters that are appended to it.\u003cbr\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"Parameters refer to information that is to be included as an input to a command.","lastModifiedDate":"2021-04-03"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"#### **2.2.5 Command Parameters**","lastModifiedDate":"2021-04-02"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"This subsection serves to list out the parameters used in this document.","lastModifiedDate":"2021-04-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-04-02"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"To achieve the best possible experience, avoid adding excessively long text to CoLAB. At small screen resolutions and with unusually long parameters, text may be truncated to  fit in the main panel. While we do not expect such occurrences to happen in day to day regular use, we have made accommodations for it. To view the rest of the truncated text, simple hover over the relevant section and scroll sideways, either with a trackpad or shift-scroll if you are using a mouse with a scroll wheel.","lastModifiedDate":"2021-04-02"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"##### `ADDRESS`","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"* The address of a contact.","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"* Addresses can take any values, but it should not be blank.","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"##### `DATE`","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"* The date associated with a deadline or event.","lastModifiedDate":"2021-04-02"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"* Date can be only be entered in one of these formats:","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"    * 23-11-2021","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"    * 23/11/2021","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    * 23.11.2021","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"    * 23112021","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"* The year should be a non-negative number between 0000 and 9999.","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"##### `DESCRIPTION`","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"* The description of a deadline, event or todo.","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"vevek"},"content":"* Description can take any values, and it should not be blank.","lastModifiedDate":"2021-04-03"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"##### `EMAIL`","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"* The email address of a contact.","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"* Emails should be of the format local-part@domain.","lastModifiedDate":"2021-03-29"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"* The local-part should only contain alphanumeric characters and these special characters, \u003ccode\u003e!#$%\u0026\u0027*+/\u003d?`{|}~^.-\u003c/code\u003e.","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"* This is followed by a \u0027@\u0027 and then a domain name.","lastModifiedDate":"2021-03-29"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"* The domain name must:","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    * be at least 2 characters long","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"    * start and end with alphanumeric characters","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    * consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"##### `INDEX`","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"* Indexes are used to identify specific items in CoLAB. There are 6 types of indexes:","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"    * `CONTACT_INDEX` refers to the number shown beside the contact in the Main Panel when contacts are displayed.","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"    * `DEADLINE_INDEX` refers to the number shown beside the deadline in the Main Panel when a project is displayed.","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"    * `EVENT INDEX` refers to the number shown beside the event in the Main Panel when a project is displayed.","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"    * `GROUPMATE_INDEX` refers to the number shown beside the groupmate in the Main Panel when a project is displayed.","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"    * `PROJECT_INDEX` refers to the number shown beside the project name in the side panel.","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"    * `TODO_INDEX` refers to the number shown beside the todo in the Main Panel when a project is displayed.","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"* Indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"##### `KEYWORD`","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"* The keyword used to search for contacts.","lastModifiedDate":"2021-03-31"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"* `MORE KEYWORDS` also follows this definition.","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"* Keywords can take any values, but it should not be blank.","lastModifiedDate":"2021-04-02"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"##### `NAME`","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"lirc572"},"content":"* The name of a contact/groupmate/project.","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"* Names should only contain alphanumeric characters, and it should not be blank.","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"##### `PHONE_NUMBER`","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"* The phone number of a contact.","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"* Phone numbers should only contain numbers, and it should be at least 3 digits long.","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"##### `REPEAT_WEEKLY`","lastModifiedDate":"2021-04-02"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"* Indicates whether the event repeats every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"* `REPEAT_WEEKLY` must be one of the following values:","lastModifiedDate":"2021-04-02"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    * `Y`","lastModifiedDate":"2021-04-02"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"    * `N`","lastModifiedDate":"2021-04-02"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"    * `y`","lastModifiedDate":"2021-04-02"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"    * `n`","lastModifiedDate":"2021-04-02"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"* `Y` or `y` indicates that the event repeats every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"* `N` or `n` indicates that the event is a one time event.","lastModifiedDate":"2021-04-02"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":224,"author":{"gitId":"lirc572"},"content":"##### `ROLE`","lastModifiedDate":"2021-03-31"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"lirc572"},"content":"* The role associated with a groupmate in a project.","lastModifiedDate":"2021-03-31"},{"lineNumber":227,"author":{"gitId":"lirc572"},"content":"* Roles should consist of alphanumeric characters, hyphens and underscores.","lastModifiedDate":"2021-03-31"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"##### `TAG`","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"* The tag associated with a contact.","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"vevek"},"content":"* The `TAG` parameter can only be used for contacts. It cannot be used for projects.","lastModifiedDate":"2021-04-01"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"* Tags should consist of alphanumeric characters.","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"vevek"},"content":"##### `TIME`","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":237,"author":{"gitId":"vevek"},"content":"* The time of an event.","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"vevek"},"content":"* Time can be only be entered in one of these formats:","lastModifiedDate":"2021-03-30"},{"lineNumber":239,"author":{"gitId":"vevek"},"content":"    * 1730","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"vevek"},"content":"    * 17:30","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"* The Hour Field (first 2 digits) should be a non-negative number between 00 and 23 (inclusive).","lastModifiedDate":"2021-04-02"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"* The Minute Field (last 2 digits) should be a non-negative number between 00 and 59 (inclusive).","lastModifiedDate":"2021-04-02"},{"lineNumber":243,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"## **3. Quick start**","lastModifiedDate":"2021-03-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"1. Download the latest `CoLAB.jar` from [here](https://github.com/AY2021S2-CS2103T-T11-2/tp/releases).","lastModifiedDate":"2021-04-02"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"vevek"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for CoLAB.","lastModifiedDate":"2021-02-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data. \u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":256,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`contacts`** and pressing Enter will list all contacts.\u003cbr\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"    * **`project 1`** : Displays the first project.","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"    * **`addP`**`n/My Project` : Adds a new project named `My Project` to CoLAB.","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"    * **`todos`** : Displays the todos of the currently displayed project.","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"    * **`addT`**`1 d/My Task` : Adds a todo with the description `My Task` to the first project.","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"    * **`deleteP`**`3` : Deletes the third project in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"6. Refer to the [Features](#4-features) below for details of each command.","lastModifiedDate":"2021-04-02"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"When the sample data is no longer required, you may use the `clear` command to clear sample projects and contacts from CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"## **4. Features**","lastModifiedDate":"2021-03-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"This section contains documentation on CoLAB\u0027s features and commands.","lastModifiedDate":"2021-03-29"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"It is split into various subsections:","lastModifiedDate":"2021-04-02"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":287,"author":{"gitId":"lirc572"},"content":"* [Projects](#41-projects)","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"    * [Todos](#411-todos)","lastModifiedDate":"2021-04-02"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"    * [Deadlines](#412-deadlines)","lastModifiedDate":"2021-04-02"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"    * [Events](#413-events)","lastModifiedDate":"2021-04-02"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"    * [Groupmates](#414-groupmates)","lastModifiedDate":"2021-04-02"},{"lineNumber":292,"author":{"gitId":"lirc572"},"content":"* [Contacts](#42-contacts)","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"* [Today View](#43-today-view)","lastModifiedDate":"2021-04-02"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"* [Others](#44-others)","lastModifiedDate":"2021-04-02"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"vevek"},"content":"### **4.1 Projects**","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"Each project in CoLAB contains information about todos, deadlines, events and groupmates to help you keep track of everything you need to effectively manage the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/project.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"You may view a list of all your projects in the side panel and view a specific project in the main panel using the `project` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"Project names that are too long may be truncated in the side panel. Simply view the project using the `project` command to view the full name in the main panel.","lastModifiedDate":"2021-04-02"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"Each project is divided into an overview page and a todo page. The overview page contains information about your project\u0027s events, deadlines and groupmates and the todo page contains information about your project\u0027s todos. ","lastModifiedDate":"2021-04-02"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"To switch between the overview and todo pages, you can use the `overview` and `todo` commands respectively.","lastModifiedDate":"2021-04-02"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"Commands related to Projects will be discussed first followed by sections on `Todos`, `Deadlines`, `Events` \u0026 `Groupmates`.","lastModifiedDate":"2021-04-02"},{"lineNumber":315,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":316,"author":{"gitId":"samuelfangjw"},"content":"##### Viewing a project: `project`","lastModifiedDate":"2021-04-02"},{"lineNumber":317,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":318,"author":{"gitId":"samuelfangjw"},"content":"Displays a panel with details of a specified project.","lastModifiedDate":"2021-04-02"},{"lineNumber":319,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":320,"author":{"gitId":"samuelfangjw"},"content":"Format: `project PROJECT_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":322,"author":{"gitId":"samuelfangjw"},"content":"* Displays a panel with details of the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":323,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":324,"author":{"gitId":"samuelfangjw"},"content":"Parameter:","lastModifiedDate":"2021-04-02"},{"lineNumber":325,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":326,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":327,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":328,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":329,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":330,"author":{"gitId":"samuelfangjw"},"content":"* `project 1` displays the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":331,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":332,"author":{"gitId":"samuelfangjw"},"content":"##### Viewing the overview of a project: `overview`","lastModifiedDate":"2021-04-02"},{"lineNumber":333,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":334,"author":{"gitId":"samuelfangjw"},"content":"Displays a panel containing an overview of the project that is currently displayed.","lastModifiedDate":"2021-04-02"},{"lineNumber":335,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":336,"author":{"gitId":"samuelfangjw"},"content":"Format: `overview`","lastModifiedDate":"2021-04-02"},{"lineNumber":337,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":338,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":339,"author":{"gitId":"samuelfangjw"},"content":"This command can only be used when a project is currently being displayed.","lastModifiedDate":"2021-04-02"},{"lineNumber":340,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":341,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":342,"author":{"gitId":"samuelfangjw"},"content":"##### Viewing the todos of a project: `todos`","lastModifiedDate":"2021-04-02"},{"lineNumber":343,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":344,"author":{"gitId":"samuelfangjw"},"content":"Displays a panel containing the todos of the project that is currently displayed.","lastModifiedDate":"2021-04-02"},{"lineNumber":345,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":346,"author":{"gitId":"samuelfangjw"},"content":"Format: `todos`","lastModifiedDate":"2021-04-02"},{"lineNumber":347,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":348,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":349,"author":{"gitId":"samuelfangjw"},"content":"This command can only be used when a project is currently being displayed.","lastModifiedDate":"2021-04-02"},{"lineNumber":350,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":351,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":352,"author":{"gitId":"samuelfangjw"},"content":"##### Adding a project: `addP`","lastModifiedDate":"2021-04-02"},{"lineNumber":353,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":354,"author":{"gitId":"samuelfangjw"},"content":"Adds a project to CoLAB.","lastModifiedDate":"2021-03-17"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"lirc572"},"content":"Format: `addP n/NAME`","lastModifiedDate":"2021-03-31"},{"lineNumber":357,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":358,"author":{"gitId":"samuelfangjw"},"content":"* Adds a project to CoLAB with a new `NAME`.","lastModifiedDate":"2021-04-02"},{"lineNumber":359,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":360,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":361,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":362,"author":{"gitId":"samuelfangjw"},"content":"* [`NAME`](#name) The name of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":363,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":364,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":365,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":366,"author":{"gitId":"samuelfangjw"},"content":"* `addP n/CS2103T Team Project` adds a project with the name `CS2103T Team Project` to CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":367,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":368,"author":{"gitId":"samuelfangjw"},"content":"##### Updating a project: `updateP`","lastModifiedDate":"2021-04-02"},{"lineNumber":369,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"samuelfangjw"},"content":"Updates an existing project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":371,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":372,"author":{"gitId":"lirc572"},"content":"Format `updateP PROJECT_INDEX n/NAME`","lastModifiedDate":"2021-03-31"},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"* Updates the name of the project at the specified `PROJECT_INDEX` to the new `NAME`.","lastModifiedDate":"2021-04-02"},{"lineNumber":375,"author":{"gitId":"samuelfangjw"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":376,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":377,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":378,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":379,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":380,"author":{"gitId":"samuelfangjw"},"content":"* [`NAME`](#name) The name of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":381,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":382,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":383,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":384,"author":{"gitId":"samuelfangjw"},"content":"* `updateP 1 n/CS2103 Group Project` updates the name of the first project in CoLAB to `CS2103 Group Project`.","lastModifiedDate":"2021-04-02"},{"lineNumber":385,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":386,"author":{"gitId":"samuelfangjw"},"content":"##### Deleting a project: `deleteP`","lastModifiedDate":"2021-04-02"},{"lineNumber":387,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":388,"author":{"gitId":"samuelfangjw"},"content":"Deletes a project from CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":389,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":390,"author":{"gitId":"vevek"},"content":"Format: `deleteP PROJECT_INDEX`","lastModifiedDate":"2021-03-30"},{"lineNumber":391,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":392,"author":{"gitId":"samuelfangjw"},"content":"* Deletes the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":393,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":394,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":395,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":396,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":397,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":398,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":399,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":400,"author":{"gitId":"samuelfangjw"},"content":"* `deleteP 1` deletes the first project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":401,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":402,"author":{"gitId":"samuelfangjw"},"content":"#### **4.1.1 Todos**","lastModifiedDate":"2021-04-02"},{"lineNumber":403,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":404,"author":{"gitId":"samuelfangjw"},"content":"Todos are used in CoLAB to represent a task that has to be done. These are usually short-term tasks which have to be done in a short timeframe or have no due date.","lastModifiedDate":"2021-04-02"},{"lineNumber":405,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":406,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":407,"author":{"gitId":"samuelfangjw"},"content":"Todos may be known as tasks in other similar applications.","lastModifiedDate":"2021-04-02"},{"lineNumber":408,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":409,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":410,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/todos.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":411,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":412,"author":{"gitId":"samuelfangjw"},"content":"Todos contain a description. They can also be marked as done using the `markT` command. Todos that have been marked as done have a ✔ next to their description.","lastModifiedDate":"2021-04-02"},{"lineNumber":413,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":414,"author":{"gitId":"samuelfangjw"},"content":"Todos are sorted alphabetically.","lastModifiedDate":"2021-04-02"},{"lineNumber":415,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":416,"author":{"gitId":"samuelfangjw"},"content":"##### Adding a todo to a project: `addT`","lastModifiedDate":"2021-04-02"},{"lineNumber":417,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":418,"author":{"gitId":"samuelfangjw"},"content":"Adds a todo to a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":419,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":420,"author":{"gitId":"lirc572"},"content":"Format: `addT PROJECT_INDEX d/DESCRIPTION`","lastModifiedDate":"2021-03-31"},{"lineNumber":421,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":422,"author":{"gitId":"samuelfangjw"},"content":"* Adds a todo with a `DESCRIPTION` to the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":423,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":424,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":425,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":426,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":427,"author":{"gitId":"samuelfangjw"},"content":"* [`DESCRIPTION`](#description) The description of the todo.","lastModifiedDate":"2021-04-02"},{"lineNumber":428,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":429,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":430,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":431,"author":{"gitId":"samuelfangjw"},"content":"* `addT 1 d/Add unit tests` adds a todo with the description `Add unit tests` to the first project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":432,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":433,"author":{"gitId":"samuelfangjw"},"content":"##### Updating a todo of a project: `updateT`","lastModifiedDate":"2021-04-02"},{"lineNumber":434,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":435,"author":{"gitId":"samuelfangjw"},"content":"Updates an existing todo of a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":436,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":437,"author":{"gitId":"Eriksen2411"},"content":"Format: `updateT PROJECT_INDEX i/TODO_INDEX d/DESCRIPTION`","lastModifiedDate":"2021-03-31"},{"lineNumber":438,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":439,"author":{"gitId":"samuelfangjw"},"content":"* Updates the `DESCRIPTION` of the todo at the specified `TODO_INDEX` of the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":440,"author":{"gitId":"samuelfangjw"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":441,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":442,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":443,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":444,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":445,"author":{"gitId":"samuelfangjw"},"content":"* [`TODO_INDEX`](#index) The index of the todo.","lastModifiedDate":"2021-04-02"},{"lineNumber":446,"author":{"gitId":"samuelfangjw"},"content":"* [`DESCRIPTION`](#description) The description of the todo.","lastModifiedDate":"2021-04-02"},{"lineNumber":447,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":448,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":449,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":450,"author":{"gitId":"samuelfangjw"},"content":"* `updateT 1 i/2 d/Review latest PR` updates the description of the second todo of the first project with the new description `Review latest PR`.","lastModifiedDate":"2021-04-02"},{"lineNumber":451,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":452,"author":{"gitId":"samuelfangjw"},"content":"##### Marking a todo as done: `markT`","lastModifiedDate":"2021-04-02"},{"lineNumber":453,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":454,"author":{"gitId":"samuelfangjw"},"content":"Marks a todo as done.","lastModifiedDate":"2021-04-02"},{"lineNumber":455,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":456,"author":{"gitId":"lirc572"},"content":"Format: `markT PROJECT_INDEX i/TODO_INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":457,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":458,"author":{"gitId":"lirc572"},"content":"* Marks the todo at the specified `TODO_INDEX` from the project at the specified `PROJECT_INDEX` as done.","lastModifiedDate":"2021-04-01"},{"lineNumber":459,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":460,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":461,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":462,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":463,"author":{"gitId":"samuelfangjw"},"content":"* [`TODO_INDEX`](#index) The index of the todo.","lastModifiedDate":"2021-04-02"},{"lineNumber":464,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":465,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":466,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":467,"author":{"gitId":"samuelfangjw"},"content":"* `markT 1 i/1` marks the first todo of the first project as done.","lastModifiedDate":"2021-04-02"},{"lineNumber":468,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":469,"author":{"gitId":"samuelfangjw"},"content":"##### Deleting a todo from a project: `deleteT`","lastModifiedDate":"2021-04-02"},{"lineNumber":470,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":471,"author":{"gitId":"samuelfangjw"},"content":"Deletes a todo from a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":472,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":473,"author":{"gitId":"lirc572"},"content":"Format: `deleteT PROJECT_INDEX i/TODO_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":474,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":475,"author":{"gitId":"vevek"},"content":"* Deletes the todo at the specified `TODO_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":476,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":477,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":478,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":479,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":480,"author":{"gitId":"samuelfangjw"},"content":"* [`TODO_INDEX`](#index) The index of the todo.","lastModifiedDate":"2021-04-02"},{"lineNumber":481,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":482,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":483,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":484,"author":{"gitId":"samuelfangjw"},"content":"* `deleteT 1 i/1` deletes the first todo of the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":485,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":486,"author":{"gitId":"samuelfangjw"},"content":"#### **4.1.2 Deadlines**","lastModifiedDate":"2021-04-02"},{"lineNumber":487,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":488,"author":{"gitId":"samuelfangjw"},"content":"Deadlines are used in CoLAB to represent project deadlines.","lastModifiedDate":"2021-04-02"},{"lineNumber":489,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":490,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/deadlines.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":492,"author":{"gitId":"samuelfangjw"},"content":"Deadlines contain a description and a date. They can also be marked as done using the `markD` command. Deadlines that have been marked as done have a ✔ next to their description.","lastModifiedDate":"2021-04-02"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":494,"author":{"gitId":"samuelfangjw"},"content":"Deadlines are sorted in ascending order by date.","lastModifiedDate":"2021-04-02"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":496,"author":{"gitId":"samuelfangjw"},"content":"##### Adding a deadline to a project: `addD`","lastModifiedDate":"2021-04-02"},{"lineNumber":497,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":498,"author":{"gitId":"samuelfangjw"},"content":"Adds a deadline to a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":499,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":500,"author":{"gitId":"lirc572"},"content":"Format: `addD PROJECT_INDEX d/DESCRIPTION by/DATE`","lastModifiedDate":"2021-03-31"},{"lineNumber":501,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":502,"author":{"gitId":"samuelfangjw"},"content":"* Adds a deadline to the project at the specified `PROJECT_INDEX` with a `DESCRIPTION` and a `DATE`.","lastModifiedDate":"2021-04-02"},{"lineNumber":503,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":504,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":505,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":506,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":507,"author":{"gitId":"samuelfangjw"},"content":"* [`DESCRIPTION`](#description) The description of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":508,"author":{"gitId":"samuelfangjw"},"content":"* [`DATE`](#date) The due date of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":509,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":510,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":511,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":512,"author":{"gitId":"samuelfangjw"},"content":"* `addD 1 d/Milestone v1.2 by/01-03-2021` adds a deadline to the first project with description `Milestone v1.2` and due date `01-03-2021`.","lastModifiedDate":"2021-04-02"},{"lineNumber":513,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":514,"author":{"gitId":"samuelfangjw"},"content":"##### Updating a deadline of a project: `updateD`","lastModifiedDate":"2021-04-02"},{"lineNumber":515,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":516,"author":{"gitId":"samuelfangjw"},"content":"Updates an existing deadline of a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":517,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":518,"author":{"gitId":"Eriksen2411"},"content":"Format: `updateD PROJECT_INDEX i/DEADLINE_INDEX [d/DESCRIPTION] [by/DATE]`","lastModifiedDate":"2021-03-31"},{"lineNumber":519,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":520,"author":{"gitId":"samuelfangjw"},"content":"* Updates the `DESCRIPTION` or the due `DATE` of the deadline at the specified `DEADLINE_INDEX` of the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":521,"author":{"gitId":"samuelfangjw"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":522,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":523,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":524,"author":{"gitId":"samuelfangjw"},"content":"At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-02"},{"lineNumber":525,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":526,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":527,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":528,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":529,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":530,"author":{"gitId":"samuelfangjw"},"content":"* [`DEADLINE_INDEX`](#index) The index of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":531,"author":{"gitId":"samuelfangjw"},"content":"* [`DESCRIPTION`](#description) The description of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":532,"author":{"gitId":"samuelfangjw"},"content":"* [`DATE`](#date) The due date of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":533,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":534,"author":{"gitId":"Eriksen2411"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":535,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":536,"author":{"gitId":"samuelfangjw"},"content":"* `updateD 1 i/2 d/Finish v1.3 by/02-02-2021` updates the second deadline of the first project with new description `Finish v1.3` and new due date `02-02-2021`.","lastModifiedDate":"2021-04-02"},{"lineNumber":537,"author":{"gitId":"samuelfangjw"},"content":"* `updateD 2 i/1 by/31-03-2021` updates the first deadline of the second project with the new due date `31-03-2021`.","lastModifiedDate":"2021-04-02"},{"lineNumber":538,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":539,"author":{"gitId":"samuelfangjw"},"content":"##### Marking a deadline as done: `markD`","lastModifiedDate":"2021-04-02"},{"lineNumber":540,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":541,"author":{"gitId":"samuelfangjw"},"content":"Marks a deadline as done.","lastModifiedDate":"2021-04-02"},{"lineNumber":542,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":543,"author":{"gitId":"lirc572"},"content":"Format: `markD PROJECT_INDEX i/DEADLINE_INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":544,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":545,"author":{"gitId":"lirc572"},"content":"* Marks the deadline at the specified `DEADLINE_INDEX` from the project at the specified `PROJECT_INDEX` as done.","lastModifiedDate":"2021-04-01"},{"lineNumber":546,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":547,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":548,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":549,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":550,"author":{"gitId":"samuelfangjw"},"content":"* [`DEADLINE_INDEX`](#index) The index of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":551,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":552,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":553,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":554,"author":{"gitId":"samuelfangjw"},"content":"* `markD` 1 i/1 marks the first deadline of the first project as done.","lastModifiedDate":"2021-04-05"},{"lineNumber":555,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":556,"author":{"gitId":"samuelfangjw"},"content":"##### Deleting a deadline from a project: `deleteD`","lastModifiedDate":"2021-04-02"},{"lineNumber":557,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":558,"author":{"gitId":"samuelfangjw"},"content":"Deletes a deadline from a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":559,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":560,"author":{"gitId":"lirc572"},"content":"Format: `deleteD PROJECT_INDEX i/DEADLINE_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":561,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":562,"author":{"gitId":"vevek"},"content":"* Deletes the deadline at the specified `DEADLINE_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-30"},{"lineNumber":563,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":564,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":565,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":566,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":567,"author":{"gitId":"samuelfangjw"},"content":"* [`DEADLINE_INDEX`](#index) The index of the deadline.","lastModifiedDate":"2021-04-02"},{"lineNumber":568,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":569,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":570,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":571,"author":{"gitId":"samuelfangjw"},"content":"* `deleteD 1 i/1` deletes the first deadline of the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":572,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":573,"author":{"gitId":"samuelfangjw"},"content":"#### **4.1.3 Events**","lastModifiedDate":"2021-04-02"},{"lineNumber":574,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":575,"author":{"gitId":"samuelfangjw"},"content":"Events are used in CoLAB to represent project specific events.","lastModifiedDate":"2021-04-02"},{"lineNumber":576,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":577,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/events.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":578,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":579,"author":{"gitId":"samuelfangjw"},"content":"Events contain a description, date and a time. Events can be set to either occur once or repeat at the same time every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":580,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":581,"author":{"gitId":"samuelfangjw"},"content":"Events are sorted in ascending order by date.","lastModifiedDate":"2021-04-02"},{"lineNumber":582,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":583,"author":{"gitId":"samuelfangjw"},"content":"##### Adding an event to a project: `addE`","lastModifiedDate":"2021-04-02"},{"lineNumber":584,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":585,"author":{"gitId":"samuelfangjw"},"content":"Adds an event to a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":586,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":587,"author":{"gitId":"lirc572"},"content":"Format: `addE PROJECT_INDEX d/DESCRIPTION on/DATE at/TIME w/REPEAT_WEEKLY`","lastModifiedDate":"2021-03-31"},{"lineNumber":588,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":589,"author":{"gitId":"samuelfangjw"},"content":"* Adds an event to the project at the specified `PROJECT_INDEX` with a `DESCRIPTION` as well as the `DATE` and `TIME` of the event.","lastModifiedDate":"2021-04-02"},{"lineNumber":590,"author":{"gitId":"samuelfangjw"},"content":"* `REPEAT_WEEKLY` accepts values `Y` or `y` if the event repeats weekly and `N` or `n` if the event is a one time event.","lastModifiedDate":"2021-04-02"},{"lineNumber":591,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":592,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":593,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":594,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":595,"author":{"gitId":"samuelfangjw"},"content":"* [`DESCRIPTION`](#description) The description of an event.","lastModifiedDate":"2021-04-02"},{"lineNumber":596,"author":{"gitId":"samuelfangjw"},"content":"* [`DATE`](#date) The date of the event, or the starting date of the event if the event repeats every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":597,"author":{"gitId":"samuelfangjw"},"content":"* [`TIME`](#time) The time of the event.","lastModifiedDate":"2021-04-02"},{"lineNumber":598,"author":{"gitId":"samuelfangjw"},"content":"* [`REPEAT_WEEKLY`](#repeat_weekly) Indicates whether the event repeats every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":599,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":600,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":601,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":602,"author":{"gitId":"samuelfangjw"},"content":"* `addE 1 d/Project Meeting on/24-04-2021 at/2000 w/Y` adds a weekly event with description `Project Meeting` starting on `24-04-2021` at `2000` to the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":603,"author":{"gitId":"samuelfangjw"},"content":"* `addE 2 d/CS2101 Presentation on/14-04-2021 at/1015 w/n` adds a one time event with description `CS2101 Presentation` on `14-04-2021` at `1015` to the second project.","lastModifiedDate":"2021-04-02"},{"lineNumber":604,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":605,"author":{"gitId":"samuelfangjw"},"content":"##### Updating an event of a project `updateE`","lastModifiedDate":"2021-04-02"},{"lineNumber":606,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":607,"author":{"gitId":"samuelfangjw"},"content":"Updates an existing event of a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":608,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":609,"author":{"gitId":"Eriksen2411"},"content":"Format: `updateE PROJECT_INDEX i/EVENT_INDEX [d/DESCRIPTION] [on/DATE] [at/TIME] [w/REPEAT_WEEKLY]`","lastModifiedDate":"2021-03-31"},{"lineNumber":610,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":611,"author":{"gitId":"samuelfangjw"},"content":"* Updates the `DESCRIPTION`, `DATE`, `TIME` or `REPEAT_WEEKLY` status of the event at the specified `EVENT_INDEX` of the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":612,"author":{"gitId":"samuelfangjw"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":613,"author":{"gitId":"samuelfangjw"},"content":"* `REPEAT_WEEKLY` accepts values `Y` or `y` if the event repeats weekly and `N` or `n` if the event is a one time event.","lastModifiedDate":"2021-04-02"},{"lineNumber":614,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":615,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":616,"author":{"gitId":"samuelfangjw"},"content":"At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-02"},{"lineNumber":617,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":618,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":619,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":620,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":621,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":622,"author":{"gitId":"samuelfangjw"},"content":"* [`EVENT_INDEX`](#index) The index of an event.","lastModifiedDate":"2021-04-02"},{"lineNumber":623,"author":{"gitId":"samuelfangjw"},"content":"* [`DESCRIPTION`](#description) The description of an event.","lastModifiedDate":"2021-04-02"},{"lineNumber":624,"author":{"gitId":"samuelfangjw"},"content":"* [`DATE`](#date) The date of the event, or the starting date of the event if the event repeats every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":625,"author":{"gitId":"samuelfangjw"},"content":"* [`TIME`](#time) The time of the event.","lastModifiedDate":"2021-04-02"},{"lineNumber":626,"author":{"gitId":"samuelfangjw"},"content":"* [`REPEAT_WEEKLY`](#repeat_weekly) Indicates whether the event repeats every week.","lastModifiedDate":"2021-04-02"},{"lineNumber":627,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":628,"author":{"gitId":"Eriksen2411"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":629,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":630,"author":{"gitId":"samuelfangjw"},"content":"* `updateE 1 i/1 d/Project Meeting on/24-04-2021 w/Y` updates the first event of the first project to be weekly event with new description `Project Meting` starting on `24-04-2021`.","lastModifiedDate":"2021-04-02"},{"lineNumber":631,"author":{"gitId":"samuelfangjw"},"content":"* `updateE 2 i/2 on/14-04-2021 at/1015` updates the second event of the second project to a new date `14-04-2021` at `1015`.","lastModifiedDate":"2021-04-02"},{"lineNumber":632,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":633,"author":{"gitId":"samuelfangjw"},"content":"##### Deleting an event from a project: `deleteE`","lastModifiedDate":"2021-04-02"},{"lineNumber":634,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":635,"author":{"gitId":"samuelfangjw"},"content":"Deletes an event from a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":636,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":637,"author":{"gitId":"lirc572"},"content":"Format: `deleteE PROJECT_INDEX i/EVENT_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":638,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":639,"author":{"gitId":"samuelfangjw"},"content":"* Deletes the event at the specified `EVENT_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":640,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":641,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":642,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":643,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":644,"author":{"gitId":"samuelfangjw"},"content":"* [`EVENT_INDEX`](#index) The index of an event.","lastModifiedDate":"2021-04-02"},{"lineNumber":645,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":646,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":647,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":648,"author":{"gitId":"samuelfangjw"},"content":"* `deleteE 1 i/1` deletes the first event of the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":649,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":650,"author":{"gitId":"samuelfangjw"},"content":"#### **4.1.4 Groupmates**","lastModifiedDate":"2021-04-02"},{"lineNumber":651,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":652,"author":{"gitId":"samuelfangjw"},"content":"Groupmates are used in CoLAB to represent the people you are working with for a particular project.","lastModifiedDate":"2021-04-02"},{"lineNumber":653,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":654,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/groupmates.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":655,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":656,"author":{"gitId":"samuelfangjw"},"content":"Groupmates contain a name and zero or more roles. The role serves to indicate their role in the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":657,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":658,"author":{"gitId":"samuelfangjw"},"content":"Groupmates are sorted alphabetically by name.","lastModifiedDate":"2021-04-02"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":660,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-02"},{"lineNumber":661,"author":{"gitId":"samuelfangjw"},"content":"You can use the contacts feature in CoLAB to store more information about a groupmate. Once the contact has been added, you can then easily find the contact by using the `fincC` command to search for their name.","lastModifiedDate":"2021-04-02"},{"lineNumber":662,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":663,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":664,"author":{"gitId":"samuelfangjw"},"content":"##### Adding a groupmate to a project: `addG`","lastModifiedDate":"2021-04-02"},{"lineNumber":665,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":666,"author":{"gitId":"samuelfangjw"},"content":"Adds a groupmate to a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":667,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":668,"author":{"gitId":"lirc572"},"content":"Format: `addG PROJECT_INDEX n/NAME [r/ROLE]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":669,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":670,"author":{"gitId":"samuelfangjw"},"content":"* Adds a groupmate with a `NAME` and zero or more `ROLE`s to the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":671,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":672,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":673,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":674,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":675,"author":{"gitId":"samuelfangjw"},"content":"* [`NAME`](#name) The name of the groupmate.","lastModifiedDate":"2021-04-02"},{"lineNumber":676,"author":{"gitId":"samuelfangjw"},"content":"* [`ROLE`](#role) The role of the groupmate.","lastModifiedDate":"2021-04-02"},{"lineNumber":677,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":678,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":679,"author":{"gitId":"samuelfangjw"},"content":"A groupmate can have any number of roles (including 0).","lastModifiedDate":"2021-04-02"},{"lineNumber":680,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":682,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":684,"author":{"gitId":"samuelfangjw"},"content":"* `addG 1 n/John Doe` adds a groupmate with name `John Doe` to the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":685,"author":{"gitId":"samuelfangjw"},"content":"* `addG 2 n/Betsy Crowe r/developer` adds a groupmate with name `Betsy Crowe` and role `developer` to the second project.","lastModifiedDate":"2021-04-02"},{"lineNumber":686,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":687,"author":{"gitId":"samuelfangjw"},"content":"##### Updating a groupmate : `updateG`","lastModifiedDate":"2021-04-02"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":689,"author":{"gitId":"samuelfangjw"},"content":"Updates an existing groupmate of a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":691,"author":{"gitId":"lirc572"},"content":"Format: `updateG PROJECT_INDEX i/GROUPMATE_INDEX [n/NAME] [r/ROLE]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":692,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":693,"author":{"gitId":"samuelfangjw"},"content":"* Updates a groupmate with a new `NAME` or zero or more `ROLE`s at the specified `GROUPMATE_INDEX` of the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-04-02"},{"lineNumber":694,"author":{"gitId":"samuelfangjw"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":696,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":698,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-31"},{"lineNumber":699,"author":{"gitId":"lirc572"},"content":"* When updating roles, the existing roles of the groupmate will be removed i.e. adding of roles is not cumulative.","lastModifiedDate":"2021-03-31"},{"lineNumber":700,"author":{"gitId":"samuelfangjw"},"content":"* You can remove all the roles of the groupmate by typing `r/` without specifying any roles after it.","lastModifiedDate":"2021-04-02"},{"lineNumber":701,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":702,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":703,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":704,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":705,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":706,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":707,"author":{"gitId":"samuelfangjw"},"content":"* [`GROUPMATE_INDEX`](#index) The index of the groupmate.","lastModifiedDate":"2021-04-02"},{"lineNumber":708,"author":{"gitId":"samuelfangjw"},"content":"* [`NAME`](#name) The name of the groupmate.","lastModifiedDate":"2021-04-02"},{"lineNumber":709,"author":{"gitId":"samuelfangjw"},"content":"* [`ROLE`](#role) The role of the groupmate.","lastModifiedDate":"2021-04-02"},{"lineNumber":710,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":711,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":712,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":713,"author":{"gitId":"samuelfangjw"},"content":"* `updateG 1 i/1 n/Leslie Knope` Updates the name of the first groupmate of the first project with the new name `Leslie Knope`.","lastModifiedDate":"2021-04-02"},{"lineNumber":714,"author":{"gitId":"samuelfangjw"},"content":"* `updateG 2 i/2 n/Betsy Crower r/` Updates the name of the second groupmate of the second project with the new name `Betsy Crower` and clears all existing roles.","lastModifiedDate":"2021-04-02"},{"lineNumber":715,"author":{"gitId":"samuelfangjw"},"content":"* `updateG 2 i/3 n/Betsy Crower r/group-leader r/tester` Updates the name of the third groupmate of the first project to the new name `Betsy Crower` and changes her roles to `group-leader` and `tester`.","lastModifiedDate":"2021-04-02"},{"lineNumber":716,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":717,"author":{"gitId":"samuelfangjw"},"content":"##### Deleting a groupmate from a project: `deleteG`","lastModifiedDate":"2021-04-02"},{"lineNumber":718,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":719,"author":{"gitId":"samuelfangjw"},"content":"Deletes a groupmate from a project in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":720,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":721,"author":{"gitId":"lirc572"},"content":"Format: `deleteG PROJECT_INDEX i/GROUPMATE_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":722,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":723,"author":{"gitId":"lirc572"},"content":"* Deletes the groupmate at the specified `GROUPMATE_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-31"},{"lineNumber":724,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":725,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":726,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":727,"author":{"gitId":"samuelfangjw"},"content":"* [`PROJECT_INDEX`](#index) The index of the project.","lastModifiedDate":"2021-04-02"},{"lineNumber":728,"author":{"gitId":"samuelfangjw"},"content":"* [`GROUPMATE_INDEX`](#index) The index of the groupmate.","lastModifiedDate":"2021-04-02"},{"lineNumber":729,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":730,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":731,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":732,"author":{"gitId":"samuelfangjw"},"content":"* `deleteG 1 i/1` deletes the first groupmate of the first project.","lastModifiedDate":"2021-04-02"},{"lineNumber":733,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":734,"author":{"gitId":"vevek"},"content":"### **4.2 Contacts**","lastModifiedDate":"2021-03-30"},{"lineNumber":735,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":736,"author":{"gitId":"samuelfangjw"},"content":"Contact are used in CoLAB to store contact information about a person, to help you keep track of people you contact frequently.","lastModifiedDate":"2021-04-02"},{"lineNumber":737,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":738,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/contacts.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":739,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":740,"author":{"gitId":"samuelfangjw"},"content":"Each contact contains a name, phone_number, email, address and zero or more tags.","lastModifiedDate":"2021-04-02"},{"lineNumber":741,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":742,"author":{"gitId":"samuelfangjw"},"content":"##### Viewing all contacts : `contacts`","lastModifiedDate":"2021-04-02"},{"lineNumber":743,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":744,"author":{"gitId":"samuelfangjw"},"content":"Displays a panel with a list of all contacts in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":745,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":746,"author":{"gitId":"samuelfangjw"},"content":"Format: `contacts`","lastModifiedDate":"2021-04-02"},{"lineNumber":747,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":748,"author":{"gitId":"samuelfangjw"},"content":"##### Adding a contact: `addC`","lastModifiedDate":"2021-04-02"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"lirc572"},"content":"Adds a contact to CoLAB.","lastModifiedDate":"2021-03-28"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"lirc572"},"content":"Format: `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2021-03-31"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"samuelfangjw"},"content":"* Adds a contact with the a `NAME`, `PHONE_NUMBER`, `EMAIL`, `ADDRESS` and zero or more `TAG`s to CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":755,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":756,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":757,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":758,"author":{"gitId":"samuelfangjw"},"content":"* [`NAME`](#name) The name of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":759,"author":{"gitId":"samuelfangjw"},"content":"* [`PHONE_NUMBER`](#phone_number) The phone number of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":760,"author":{"gitId":"samuelfangjw"},"content":"* [`EMAIL`](#email) The email of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":761,"author":{"gitId":"samuelfangjw"},"content":"* [`ADDRESS`](#address) The address of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":762,"author":{"gitId":"samuelfangjw"},"content":"* [`TAG`](#tag) The tag associated with a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":763,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":764,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":765,"author":{"gitId":"lirc572"},"content":"A contact can have any number of tags (including 0)","lastModifiedDate":"2021-03-28"},{"lineNumber":766,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"vevek"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-04-01"},{"lineNumber":769,"author":{"gitId":"samuelfangjw"},"content":"If you do not have information required for a compulsory parameter, consider leaving it as a dummy character such as `-`. For example, if you do not have the address of a contact, you can enter the parameter as `a/-`.","lastModifiedDate":"2021-04-02"},{"lineNumber":770,"author":{"gitId":"vevek"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-01"},{"lineNumber":771,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":772,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":773,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":774,"author":{"gitId":"samuelfangjw"},"content":"* `addC n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` adds a contact with the name `John Doe`, phone number `98765432`, email `johnd@example.com` and address `John street, block 123, #01-01`.","lastModifiedDate":"2021-04-02"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"samuelfangjw"},"content":"##### Updating a contact : `updateC`","lastModifiedDate":"2021-04-02"},{"lineNumber":777,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":778,"author":{"gitId":"lirc572"},"content":"Updates an existing contact in CoLAB.","lastModifiedDate":"2021-03-31"},{"lineNumber":779,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":780,"author":{"gitId":"samuelfangjw"},"content":"Format: `updateC CONTACT_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-04-02"},{"lineNumber":781,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":782,"author":{"gitId":"samuelfangjw"},"content":"* Updates the contact at the specified `CONTACT_INDEX` with a new `NAME`, `PHONE_NUMBER`, `EMAIL`, `ADDRESS` or zero or more `TAG`s.","lastModifiedDate":"2021-04-02"},{"lineNumber":783,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-04-02"},{"lineNumber":784,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":785,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":786,"author":{"gitId":"samuelfangjw"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-04-02"},{"lineNumber":787,"author":{"gitId":"samuelfangjw"},"content":"* When updating tags, the existing tags of the contact will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-04-02"},{"lineNumber":788,"author":{"gitId":"samuelfangjw"},"content":"* You can remove all the contact’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-04-02"},{"lineNumber":789,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":790,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":791,"author":{"gitId":"samuelfangjw"},"content":"Parameters:","lastModifiedDate":"2021-04-02"},{"lineNumber":792,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":793,"author":{"gitId":"samuelfangjw"},"content":"* [`NAME`](#name) The name of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":794,"author":{"gitId":"samuelfangjw"},"content":"* [`PHONE_NUMBER`](#phone_number) The phone number of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":795,"author":{"gitId":"samuelfangjw"},"content":"* [`EMAIL`](#email) The email of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":796,"author":{"gitId":"samuelfangjw"},"content":"* [`ADDRESS`](#address) The address of a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":797,"author":{"gitId":"samuelfangjw"},"content":"* [`TAG`](#tag) The tag associated with a contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":799,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":801,"author":{"gitId":"samuelfangjw"},"content":"* `updateC 1 p/91234567 e/johndoe@example.com` updates the first contact with a new phone number `91234567` and email `johndoe@example.com`.","lastModifiedDate":"2021-04-02"},{"lineNumber":802,"author":{"gitId":"samuelfangjw"},"content":"* `updateC 2 n/Betsy Crower t/` updates the second contact with a new name `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-04-02"},{"lineNumber":803,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":804,"author":{"gitId":"samuelfangjw"},"content":"##### Locating contacts by name: `findC`","lastModifiedDate":"2021-04-02"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"samuelfangjw"},"content":"Find contacts whose names contain any of the given keywords.","lastModifiedDate":"2021-04-02"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"samuelfangjw"},"content":"Format: `findC KEYWORD [KEYWORD]…​`","lastModifiedDate":"2021-04-02"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"samuelfangjw"},"content":"* Finds and displays contacts whose name contains any of the `KEYWORD`s.","lastModifiedDate":"2021-04-02"},{"lineNumber":811,"author":{"gitId":"samuelfangjw"},"content":"* At least one keyword must be present.","lastModifiedDate":"2021-04-02"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":813,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":814,"author":{"gitId":"vevek"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-03-30"},{"lineNumber":815,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-03-30"},{"lineNumber":816,"author":{"gitId":"samuelfangjw"},"content":"* Only the contact name is searched.","lastModifiedDate":"2021-04-02"},{"lineNumber":817,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-03-30"},{"lineNumber":818,"author":{"gitId":"samuelfangjw"},"content":"* Contacts matching at least one keyword will be returned (i.e. `OR` search). e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2021-04-02"},{"lineNumber":819,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":820,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"samuelfangjw"},"content":"Parameter:","lastModifiedDate":"2021-04-02"},{"lineNumber":822,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":823,"author":{"gitId":"samuelfangjw"},"content":"* [`KEYWORD`](#keyword) The keyword used to search for contacts.","lastModifiedDate":"2021-04-02"},{"lineNumber":824,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":825,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":826,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":827,"author":{"gitId":"samuelfangjw"},"content":"* `findC alex david` displays a list containing `Alex Yeoh` and `David Li`\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":828,"author":{"gitId":"samuelfangjw"},"content":"  ","lastModifiedDate":"2021-04-02"},{"lineNumber":829,"author":{"gitId":"lirc572"},"content":"![result for \u0027findC alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2021-03-31"},{"lineNumber":830,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"samuelfangjw"},"content":"##### Deleting a contact : `deleteC`","lastModifiedDate":"2021-04-02"},{"lineNumber":832,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":833,"author":{"gitId":"samuelfangjw"},"content":"Deletes a contact from CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":835,"author":{"gitId":"lirc572"},"content":"Format: `deleteC CONTACT_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":837,"author":{"gitId":"lirc572"},"content":"* Deletes the contact at the specified `CONTACT_INDEX`.","lastModifiedDate":"2021-03-31"},{"lineNumber":838,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":839,"author":{"gitId":"samuelfangjw"},"content":"Parameter:","lastModifiedDate":"2021-04-02"},{"lineNumber":840,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":841,"author":{"gitId":"samuelfangjw"},"content":"* [`CONTACT_INDEX`](#index) The index of the contact.","lastModifiedDate":"2021-04-02"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":843,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-31"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":845,"author":{"gitId":"samuelfangjw"},"content":"* `deleteC 2` deletes the second contact in CoLAB.","lastModifiedDate":"2021-04-02"},{"lineNumber":846,"author":{"gitId":"samuelfangjw"},"content":"* `findC Betsy` followed by `deleteC 1` deletes the first contact in the results list of the `findC` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":848,"author":{"gitId":"samuelfangjw"},"content":"### **4.3 Today View**","lastModifiedDate":"2021-04-02"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":850,"author":{"gitId":"samuelfangjw"},"content":"The today view contains a summary of the events and deadlines due today.","lastModifiedDate":"2021-04-02"},{"lineNumber":851,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":852,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/today.png)","lastModifiedDate":"2021-04-02"},{"lineNumber":853,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":854,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":855,"author":{"gitId":"samuelfangjw"},"content":"The today page displays the events and deadlines on the day that you open the today page. To prevent events and deadlines from changing abruptly without notice, the user interface does not update the today page automatically when the date changes.","lastModifiedDate":"2021-04-02"},{"lineNumber":856,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":858,"author":{"gitId":"samuelfangjw"},"content":"##### Viewing Today Panel : `today`","lastModifiedDate":"2021-04-02"},{"lineNumber":859,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":860,"author":{"gitId":"vevek"},"content":"Displays a panel containing information on Events \u0026 Deadlines that are relevant today.","lastModifiedDate":"2021-04-01"},{"lineNumber":861,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":862,"author":{"gitId":"vevek"},"content":"Format: `today`","lastModifiedDate":"2021-03-31"},{"lineNumber":863,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":864,"author":{"gitId":"samuelfangjw"},"content":"### **4.4 Others**","lastModifiedDate":"2021-04-02"},{"lineNumber":865,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":866,"author":{"gitId":"samuelfangjw"},"content":"##### Viewing help : `help`","lastModifiedDate":"2021-04-02"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":868,"author":{"gitId":"samuelfangjw"},"content":"Displays a panel containing a summary of commands as well as a link to this user guide. The link can be copied to the system clipboard by clicking on the `Copy` button.","lastModifiedDate":"2021-04-02"},{"lineNumber":869,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":870,"author":{"gitId":"samuelfangjw"},"content":"Format: `help`","lastModifiedDate":"2021-04-02"},{"lineNumber":871,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":872,"author":{"gitId":"samuelfangjw"},"content":"##### Undoing previous command : `undo`","lastModifiedDate":"2021-04-02"},{"lineNumber":873,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":874,"author":{"gitId":"samuelfangjw"},"content":"Restores CoLAB to the state before the previous undoable command was executed.","lastModifiedDate":"2021-04-02"},{"lineNumber":875,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":876,"author":{"gitId":"samuelfangjw"},"content":"Format: `undo`","lastModifiedDate":"2021-04-05"},{"lineNumber":877,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":878,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e:information_source: **Info:**","lastModifiedDate":"2021-04-02"},{"lineNumber":879,"author":{"gitId":"samuelfangjw"},"content":"* Only commands that modify data are undoable. These commands include all commands that start with `add`, `update`, `delete` or `mark` as well as the `clear` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":880,"author":{"gitId":"samuelfangjw"},"content":"* All other commands are not undoable.","lastModifiedDate":"2021-04-02"},{"lineNumber":881,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":882,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":883,"author":{"gitId":"samuelfangjw"},"content":"Example:","lastModifiedDate":"2021-04-02"},{"lineNumber":884,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":885,"author":{"gitId":"samuelfangjw"},"content":"* `deleteP 1` Deletes the first project in the list.","lastModifiedDate":"2021-04-02"},{"lineNumber":886,"author":{"gitId":"samuelfangjw"},"content":"* `undo` Reverses the `deleteP 1` command.","lastModifiedDate":"2021-04-02"},{"lineNumber":887,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":888,"author":{"gitId":"samuelfangjw"},"content":"##### Redoing previous command : `redo`","lastModifiedDate":"2021-04-02"},{"lineNumber":889,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":890,"author":{"gitId":"samuelfangjw"},"content":"Reverses the most recent undo command.","lastModifiedDate":"2021-04-02"},{"lineNumber":891,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":892,"author":{"gitId":"samuelfangjw"},"content":"Format: `redo`","lastModifiedDate":"2021-04-05"},{"lineNumber":893,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":894,"author":{"gitId":"samuelfangjw"},"content":"* Requires an undo command to have been performed prior to a redo command.","lastModifiedDate":"2021-04-02"},{"lineNumber":895,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":896,"author":{"gitId":"samuelfangjw"},"content":"##### Exiting the program : `exit`","lastModifiedDate":"2021-04-02"},{"lineNumber":897,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":898,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":902,"author":{"gitId":"samuelfangjw"},"content":"##### Clearing all entries : `clear`","lastModifiedDate":"2021-04-02"},{"lineNumber":903,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":904,"author":{"gitId":"lirc572"},"content":"Clears all entries from CoLAB. Both contacts and projects will be cleared.","lastModifiedDate":"2021-03-31"},{"lineNumber":905,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":906,"author":{"gitId":"lirc572"},"content":"Format: `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":907,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":908,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":909,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":910,"author":{"gitId":"samuelfangjw"},"content":"## **5. FAQ**","lastModifiedDate":"2021-03-26"},{"lineNumber":911,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":912,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":913,"author":{"gitId":"samuelfangjw"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CoLAB home folder.","lastModifiedDate":"2021-03-17"},{"lineNumber":914,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":915,"author":{"gitId":"samuelfangjw"},"content":"**Q**: How do I save my data?\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":916,"author":{"gitId":"samuelfangjw"},"content":"**A**: CoLAB\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-04-02"},{"lineNumber":917,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":918,"author":{"gitId":"samuelfangjw"},"content":"**Q**: Are my contacts and project groupmates linked?\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":919,"author":{"gitId":"vevek"},"content":"**A**: No, currently there is no link between contacts and groupmates. This is a feature that we plan to add in future versions of CoLAB. However, you may still add a contact with the contact details of the groupmate. Once the contact has been added, you can then easily find the contact by using the `findC` command to search for their name.","lastModifiedDate":"2021-04-03"},{"lineNumber":920,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":921,"author":{"gitId":"samuelfangjw"},"content":"**Q**: Can I edit the data files directly?\u003cbr\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":922,"author":{"gitId":"samuelfangjw"},"content":"**A**: CoLAB\u0027s data is saved as a JSON file `[JAR file location]/data/colab.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-04-02"},{"lineNumber":923,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":924,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-04-02"},{"lineNumber":925,"author":{"gitId":"samuelfangjw"},"content":"If your changes to the data file makes its format invalid, CoLAB will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-04-02"},{"lineNumber":926,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-04-02"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":928,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":929,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":930,"author":{"gitId":"samuelfangjw"},"content":"## **6. Command summary**","lastModifiedDate":"2021-03-26"},{"lineNumber":931,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":932,"author":{"gitId":"samuelfangjw"},"content":"### Projects","lastModifiedDate":"2021-03-29"},{"lineNumber":933,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":934,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":935,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":936,"author":{"gitId":"samuelfangjw"},"content":"**View Project** | `project PROJECT_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":937,"author":{"gitId":"samuelfangjw"},"content":"**View Overview** | `overview`","lastModifiedDate":"2021-04-02"},{"lineNumber":938,"author":{"gitId":"samuelfangjw"},"content":"**View Todos** | `todos`","lastModifiedDate":"2021-04-02"},{"lineNumber":939,"author":{"gitId":"lirc572"},"content":"**Add Project** | `addP n/NAME`","lastModifiedDate":"2021-03-31"},{"lineNumber":940,"author":{"gitId":"samuelfangjw"},"content":"**Update Project** | `updateP PROJECT_INDEX n/NAME`","lastModifiedDate":"2021-04-02"},{"lineNumber":941,"author":{"gitId":"samuelfangjw"},"content":"**Delete Project** | `deleteP PROJECT_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":942,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":943,"author":{"gitId":"samuelfangjw"},"content":"### Todos","lastModifiedDate":"2021-04-02"},{"lineNumber":944,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":945,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2021-04-02"},{"lineNumber":946,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":947,"author":{"gitId":"samuelfangjw"},"content":"**Add Todo to Project** | `addT PROJECT_INDEX d/DESCRIPTION`","lastModifiedDate":"2021-04-02"},{"lineNumber":948,"author":{"gitId":"lirc572"},"content":"**Mark Todo as done** | `markT PROJECT_INDEX i/TODO_INDEX`","lastModifiedDate":"2021-04-01"},{"lineNumber":949,"author":{"gitId":"Eriksen2411"},"content":"**Update Todo** | `updateT PROJECT_INDEX i/TODO_INDEX d/DESCRIPTION`","lastModifiedDate":"2021-03-31"},{"lineNumber":950,"author":{"gitId":"samuelfangjw"},"content":"**Delete Todo from Project** | `deleteT PROJECT_INDEX i/TODO_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":951,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":952,"author":{"gitId":"samuelfangjw"},"content":"### Deadlines","lastModifiedDate":"2021-04-02"},{"lineNumber":953,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":954,"author":{"gitId":"samuelfangjw"},"content":"Action | Format, Examples","lastModifiedDate":"2021-04-02"},{"lineNumber":955,"author":{"gitId":"samuelfangjw"},"content":"--------|------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":956,"author":{"gitId":"samuelfangjw"},"content":"**Add Deadline to Project** | `addD PROJECT_INDEX d/DESCRIPTION by/DATE`","lastModifiedDate":"2021-04-02"},{"lineNumber":957,"author":{"gitId":"samuelfangjw"},"content":"**Mark Deadline as done** | `markD PROJECT_INDEX i/DEADLINE_INDEX`","lastModifiedDate":"2021-04-02"},{"lineNumber":958,"author":{"gitId":"samuelfangjw"},"content":"**Update Deadline** | `updateD PROJECT_INDEX i/DEADLINE_INDEX [d/DESCRIPTION] [by/DATE]`","lastModifiedDate":"2021-04-02"},{"lineNumber":959,"author":{"gitId":"samuelfangjw"},"content":"**Delete Deadline from Project** | `deleteD PROJECT_INDEX i/DEADLINE_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":960,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":961,"author":{"gitId":"samuelfangjw"},"content":"### Events","lastModifiedDate":"2021-04-02"},{"lineNumber":962,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":963,"author":{"gitId":"samuelfangjw"},"content":"Action | Format, Examples","lastModifiedDate":"2021-04-02"},{"lineNumber":964,"author":{"gitId":"samuelfangjw"},"content":"--------|------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":965,"author":{"gitId":"samuelfangjw"},"content":"**Add Event to Project** | `addE PROJECT_INDEX d/DESCRIPTION on/DATE at/TIME w/REPEAT_WEEKLY`","lastModifiedDate":"2021-04-02"},{"lineNumber":966,"author":{"gitId":"samuelfangjw"},"content":"**Update Event** | `updateE PROJECT_INDEX i/EVENT_INDEX [d/DESCRIPTION] [on/DATE] [at/TIME] [w/REPEAT_WEEKLY]`","lastModifiedDate":"2021-04-02"},{"lineNumber":967,"author":{"gitId":"samuelfangjw"},"content":"**Delete Event from Project** | `deleteE PROJECT_INDEX i/EVENT_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":968,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":969,"author":{"gitId":"samuelfangjw"},"content":"### Groupmates","lastModifiedDate":"2021-04-02"},{"lineNumber":970,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":971,"author":{"gitId":"samuelfangjw"},"content":"Action | Format, Examples","lastModifiedDate":"2021-04-02"},{"lineNumber":972,"author":{"gitId":"samuelfangjw"},"content":"--------|------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":973,"author":{"gitId":"samuelfangjw"},"content":"**Add Groupmate to Project** | `addG PROJECT_INDEX n/NAME [r/ROLE]…​`","lastModifiedDate":"2021-04-02"},{"lineNumber":974,"author":{"gitId":"samuelfangjw"},"content":"**Update Groupmate** | `updateG PROJECT_INDEX i/GROUPMATE_INDEX [n/NAME] [r/ROLE]…​`","lastModifiedDate":"2021-04-02"},{"lineNumber":975,"author":{"gitId":"lirc572"},"content":"**Delete Groupmate from Project** | `deleteG PROJECT_INDEX i/GROUPMATE_INDEX`","lastModifiedDate":"2021-03-31"},{"lineNumber":976,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":977,"author":{"gitId":"samuelfangjw"},"content":"### Contacts","lastModifiedDate":"2021-03-29"},{"lineNumber":978,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":979,"author":{"gitId":"samuelfangjw"},"content":"Action | Format, Examples","lastModifiedDate":"2021-03-29"},{"lineNumber":980,"author":{"gitId":"samuelfangjw"},"content":"--------|------------------","lastModifiedDate":"2021-03-29"},{"lineNumber":981,"author":{"gitId":"samuelfangjw"},"content":"**View Contacts** | `contacts`","lastModifiedDate":"2021-04-02"},{"lineNumber":982,"author":{"gitId":"lirc572"},"content":"**Add Contact** | `addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `addC n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-03-31"},{"lineNumber":983,"author":{"gitId":"lirc572"},"content":"**Delete Contact** | `deleteC CONTACT_INDEX`\u003cbr\u003e e.g., `deleteC 3`","lastModifiedDate":"2021-03-31"},{"lineNumber":984,"author":{"gitId":"lirc572"},"content":"**Update Contact** | `updateC CONTACT_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`updateC 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-03-31"},{"lineNumber":985,"author":{"gitId":"samuelfangjw"},"content":"**Find Contact** | `findC KEYWORD [KEYWORD]…​`\u003cbr\u003e e.g., `findC James Jake`","lastModifiedDate":"2021-04-02"},{"lineNumber":986,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":987,"author":{"gitId":"samuelfangjw"},"content":"### Today View and Other Commands","lastModifiedDate":"2021-04-02"},{"lineNumber":988,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":989,"author":{"gitId":"samuelfangjw"},"content":"Action | Format, Examples","lastModifiedDate":"2021-03-29"},{"lineNumber":990,"author":{"gitId":"samuelfangjw"},"content":"--------|------------------","lastModifiedDate":"2021-03-29"},{"lineNumber":991,"author":{"gitId":"samuelfangjw"},"content":"**View Today Panel** | `today`","lastModifiedDate":"2021-03-25"},{"lineNumber":992,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":993,"author":{"gitId":"samuelfangjw"},"content":"**Undo previous command** | `undo`","lastModifiedDate":"2021-04-02"},{"lineNumber":994,"author":{"gitId":"samuelfangjw"},"content":"**Redo previous command** | `redo`","lastModifiedDate":"2021-04-02"},{"lineNumber":995,"author":{"gitId":"samuelfangjw"},"content":"**Exiting the Program** | `exit`","lastModifiedDate":"2021-04-02"},{"lineNumber":996,"author":{"gitId":"lirc572"},"content":"**Clear All Entries** | `clear`","lastModifiedDate":"2021-03-31"},{"lineNumber":997,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":998,"author":{"gitId":"samuelfangjw"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-04-02"},{"lineNumber":999,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":1000,"author":{"gitId":"samuelfangjw"},"content":"## **7. Acknowledgements**","lastModifiedDate":"2021-03-26"},{"lineNumber":1001,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":1002,"author":{"gitId":"vevek"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-23"},{"lineNumber":1003,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-02"},{"lineNumber":1004,"author":{"gitId":"samuelfangjw"},"content":"- Libraries used:","lastModifiedDate":"2021-03-26"},{"lineNumber":1005,"author":{"gitId":"samuelfangjw"},"content":"    - [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-03-26"},{"lineNumber":1006,"author":{"gitId":"samuelfangjw"},"content":"    - [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-03-26"},{"lineNumber":1007,"author":{"gitId":"samuelfangjw"},"content":"    - [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-03-26"},{"lineNumber":1008,"author":{"gitId":"samuelfangjw"},"content":"    - [TestFX](https://github.com/TestFX/TestFX)","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"lirc572":57,"vevek":84,"Eriksen2411":24,"-":141,"samuelfangjw":702}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"    content: \"CoLAB\";","lastModifiedDate":"2021-03-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"-":294,"samuelfangjw":1}},{"path":"docs/_sass/minima/_layout.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":" * Site header","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":".site-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  border-top: 5px solid $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  border-bottom: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  min-height: $spacing-unit * 1.865;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  line-height: $base-line-height * $base-font-size * 2.25;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  // Positioning context for the mobile navigation icon","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":".site-title {","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  font-weight: 300;","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    padding-right: 45px;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  \u0026,","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    color: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":".site-nav {","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  position: absolute;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  top: 9px;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  border-radius: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  text-align: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  .nav-trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    height: 26px;","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    line-height: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    padding-top: 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    \u003e svg path {","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      fill: $brand-color-dark;","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    width: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    height: 36px;","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    z-index: 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    cursor: pointer;","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"  input:checked ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    padding-bottom: 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    line-height: $base-line-height;","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    padding: 5px 10px;","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // Gaps between nav items, but not on the last one","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"      margin-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    margin-left: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-medium) {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    position: static;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    float: right;","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    border: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    background-color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    label[for\u003d\"nav-trigger\"] {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    .menu-icon {","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"      display: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    input ~ .trigger {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    .page-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      display: inline;","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"      padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"      \u0026:not(:last-child) {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        margin-right: 20px;","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"      margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":" * Page content","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":".page-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  padding: $spacing-unit 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"  flex: 1 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"  text-align: justify;","lastModifiedDate":"2021-04-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":".page-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"  @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":".post-list-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":".post-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"  margin-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"  list-style: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  \u003e li {","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":".post-meta {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":".post-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.5);","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * Posts","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":".post-header {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":".post-title,","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":".post-content h1 {","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"  @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"  letter-spacing: -1px;","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"  line-height: 1.15;","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @include relative-font-size(2.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":".post-content {","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"  h1, h2, h3 { margin-top: $spacing-unit * 2 }","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  h4, h5, h6 { margin-top: $spacing-unit }","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"  h2 {","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.75);","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"      @include relative-font-size(2);","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"  h3 {","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.375);","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"      @include relative-font-size(1.625);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"  h4 {","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.25);","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  h5 {","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @include relative-font-size(1.0625);","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":".social-media-list {","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"  margin: 0 auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    float: left;","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    margin: 5px 10px 5px 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    \u0026:last-of-type { margin-right: 0 }","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    a {","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"      border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"      \u0026:hover { border-color: darken($brand-color-light, 10%) }","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Pagination navbar","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":".pagination {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  @extend .social-media-list;","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  li {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    a, div {","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"      min-width: 41px;","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"      text-align: center;","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"      box-sizing: border-box;","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    div {","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"      display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"      padding: $spacing-unit / 4;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"      border: 1px solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"      \u0026.pager-edge {","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        color: darken($brand-color-light, 5%);","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        border: 1px dashed;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"      }","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":" * Grid helpers","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"@media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  .one-half {","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    width: calc(50% - (#{$spacing-unit} / 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"  * Table of Content without bullet points","lastModifiedDate":"2021-03-26"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"  */","lastModifiedDate":"2021-03-26"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":".toc-no-bullet-points ul {","lastModifiedDate":"2021-04-02"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"  list-style-type: none;","lastModifiedDate":"2021-03-26"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"-":263,"samuelfangjw":8}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteContact(c)","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lirc572":1,"-":37}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"AddressBook *-right-\u003e \"1\" UniqueContactList","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2019-07-30"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"UniqueTagList -[hidden]down- UniqueContactList","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"UniqueTagList -[hidden]down- UniqueContactList","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList *-right-\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"UniqueContactList o-right-\u003e Contact","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"Contact -up-\u003e \"*\" Tag","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Name","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Email","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Address","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lirc572":9,"-":12}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"DeleteCommand -\u003e Model : deleteContact(1)","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lirc572":1,"-":68}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface ObservableList \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"Package Contact {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"Class Contact","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"Class UniqueContactList","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Package Tag {","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Model .right.\u003e ObservableList","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"ModelManager o--\u003e \"1\" AddressBook","lastModifiedDate":"2019-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"ModelManager o-left-\u003e \"1\" UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"AddressBook *--\u003e \"1\" UniqueContactList","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"UniqueContactList o--\u003e \"*\" Contact","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Name","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Phone","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Email","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e Address","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"Contact *--\u003e \"*\" Tag","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"ModelManager -----\u003e\" ~* filtered list\" Contact","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lirc572":11,"-":45}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"Class ContactListPanel","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"Class ContactCard","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager -down-\u003e MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow --\u003e HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"MainWindow *-down-\u003e ContactListPanel","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"ContactListPanel -down-\u003e ContactCard","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"ContactListPanel --|\u003e UiPart","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"ContactCard --|\u003e UiPart","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"HelpWindow -down-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"ContactCard ..\u003e Model","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"ContactListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lirc572":8,"-":52}},{"path":"docs/diagrams/UpdateGroupmateCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"@startuml","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"!include style.puml","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"Participant \":Project\" as project PROJECT_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"Participant \":GroupmateList\" as groupmatelist GROUPMATELIST_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"user -[USER_COLOR]\u003e ui : \"updateG 1 n/Alice\"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"activate ui UI_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"updateG 1 n/Alice\")","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"logic -[LOGIC_COLOR]\u003e project : setGroupmate(targetIndex, editedGroupmate)","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"activate project PROJECT_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"project -[LOGIC_COLOR]\u003e groupmatelist : setGroupmate(targetIndex, editedGroupmate)","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"activate groupmatelist GROUPMATELIST_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"groupmatelist --[GROUPMATELIST_COLOR]\u003e project","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"deactivate groupmatelist","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"project -[PROJECT_COLOR]-\u003e logic","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"deactivate project","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"deactivate logic","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"deactivate ui","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"@enduml","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":33}},{"path":"docs/diagrams/UpdateProjectCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"@startuml","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"!include style.puml","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"Participant \":ProjectsFolder\" as projectsfolder PROJECTSFOLDER_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"Participant \":UniqueProjectList\" as uniqueprojectlist UNIQUEPROJECTLIST_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"user -[USER_COLOR]\u003e ui : \"updateP 1 n/Group Project\"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"activate ui UI_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"updateP 1 n/Group Project\")","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"logic -[LOGIC_COLOR]\u003e model : setProject(targetIndex, editedProject)","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"model -[MODEL_COLOR]\u003e projectsfolder : setProject(targetIndex, editedProject)","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"activate projectsfolder PROJECTSFOLDER_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"projectsfolder -[UNIQUEPROJECTLIST_COLOR]\u003e uniqueprojectlist : setProject(targetIndex, editedProject)","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"activate uniqueprojectlist UNIQUEPROJECTLIST_COLOR","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"uniqueprojectlist -[UNIQUEPROJECTLIST_COLOR]-\u003e projectsfolder","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"deactivate uniqueprojectlist","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"projectsfolder -[PROJECTSFOLDER_COLOR]-\u003e model","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"deactivate projectsfolder","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"deactivate model","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"deactivate logic","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"deactivate ui","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"@enduml","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lirc572":41}},{"path":"docs/diagrams/ViewProjectCommandSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"@startuml","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"!include style.puml","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"Participant \":MainWindow\" as mainWindow UI_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR_T4","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"Participant \":ViewProjectCommand\" as command LOGIC_COLOR_T3","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"Participant \":ViewProjectUiCommand\" as uiCommand LOGIC_COLOR_T2","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"Participant \":CommandResult\" as commandResult LOGIC_COLOR_T1","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"--\u003e mainWindow","lastModifiedDate":"2021-03-26"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"activate mainWindow UI_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"mainWindow -[UI_COLOR]\u003e logic : execute(\"viewP 1\")","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"activate logic LOGIC_COLOR_T4","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"logic -[LOGIC_COLOR_T4]\u003e command : command.execute(model)","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"activate command LOGIC_COLOR_T3","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"create uiCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"command -[LOGIC_COLOR_T3]\u003e uiCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"activate uiCommand LOGIC_COLOR_T2","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"uiCommand --[LOGIC_COLOR_T2]\u003e command","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"deactivate uiCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"create commandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"command -[LOGIC_COLOR_T3]\u003e commandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"activate commandResult LOGIC_COLOR_T1","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"commandResult --[LOGIC_COLOR_T1]\u003e command","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"deactivate commandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"command -[LOGIC_COLOR_T3]-\u003e logic","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"deactivate command","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"logic --[LOGIC_COLOR_T4]\u003e mainWindow","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"deactivate logic","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"mainWindow -[UI_COLOR]\u003e commandResult : commandResult.getUiCommand()","lastModifiedDate":"2021-03-26"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"activate commandResult LOGIC_COLOR_T1","lastModifiedDate":"2021-03-26"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"commandResult --[LOGIC_COLOR_T1]\u003e mainWindow","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"deactivate commandResult","lastModifiedDate":"2021-03-26"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"mainWindow -[UI_COLOR]\u003e uiCommand : uiCommand.execute(this)","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"activate uiCommand LOGIC_COLOR_T2","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"uiCommand -[LOGIC_COLOR_T1]\u003e mainWindow : selectProject(projectIndex)","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"activate mainWindow UI_COLOR","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"mainWindow --[UI_COLOR]\u003e uiCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"deactivate mainWindow","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"uiCommand --[LOGIC_COLOR_T1]\u003e mainWindow","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"deactivate uiCommand","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"@enduml","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"samuelfangjw":57}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"!define PROJECT_COLOR #595954","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"!define PROJECTSFOLDER_COLOR #595974","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"!define UNIQUEPROJECTLIST_COLOR #597974","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"!define GROUPMATELIST_COLOR #797974","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"lirc572":9,"-":75}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"ecp -\u003e ec ++: index, editContactDescriptor","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"lirc572":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"title: CoLAB","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d2NR2SMZ01E)](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp)","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"images/logo.png\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to manage their school projects.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"What are you waiting for? Start tracking your university life now!","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"## Site Map","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"- **[User Guide](UserGuide.md)**","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"- **[Developer Guide](DeveloperGuide.md)**","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"- **[About Us](AboutUs.md)**","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"- Libraries used:","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  - [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"  - [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  - [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  - [TestFX](https://github.com/TestFX/TestFX)","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"-":12,"samuelfangjw":20}},{"path":"docs/team/eriksen2411.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"title: Nguyen Duc Danh\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"## Project: CoLAB","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"CoLAB (Collaboration Lab) is a desktop app for university students to manage their school projects. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a addE command that allows the user to add an Event to a Project specified by project index.","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a deleteP command that allows the user to delete a Projecct specified by project index.","lastModifiedDate":"2021-04-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a updateP command that allows the user to change project name of a Project specified by project index.","lastModifiedDate":"2021-04-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a updateE command that allows the user to change details of a specified Event inside a Project specified by project index.","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a updateD command that allows the user to change details of a specified Deadline inside a Project specified by project index.","lastModifiedDate":"2021-04-07"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a updateT command that allows the user to change details of a specified Todo inside a Project specified by project index.","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003deriksen2411\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026since\u003d2021-02-19\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dEriksen2411\u0026tabRepo\u003dAY2021S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"* **Project management**:","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"  * Managed releases `v1.1` - `v1.4` (6 releases) on GitHub","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"  * Managed deadlines and deliverables for the group, including updating the issue tracker and milestones.","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"    * Added documentation for the features `updateP`, `updateD`, `updateE`, `updateT`: [\\#242](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/242)","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"    * Added implementation details of the `addE` feature. [\\#158](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/158)","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#70](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/70#discussion_r592522775), [\\#89](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/89#discussion_r594836780), [\\#92](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/92#discussion_r593797414), [\\#136](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/136#discussion_r600474816)","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2021S2/forum/issues/23), [2](https://github.com/nus-cs2103-AY2021S2/forum/issues/260), [3](https://github.com/nus-cs2103-AY2021S2/forum/issues/108)","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"Eriksen2411":21,"-":17}},{"path":"docs/team/samuelfangjw.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"title: Samuel Fang\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"## Project: CoLAB","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Collaboration Lab) is a desktop app for university students to manage their school projects. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"* **Undo/Redo Feature**: ","lastModifiedDate":"2021-04-07"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  * Added the ability to undo/redo previous commands(Pull request [\\#209](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/209)).","lastModifiedDate":"2021-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  * Highlights: Although a similar implementations exist in other similar projects, I decided to go with my own implementation after considering the pros and cons of each solution. My solution took into account the user experience, and has the ability undo not only the data but also the GUI to the previous state.","lastModifiedDate":"2021-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"* **Command History Feature**: ","lastModifiedDate":"2021-04-07"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  * Added a history command that allows the user to navigate to previous commands using up/down keys (Pull request [\\#204](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/204)).","lastModifiedDate":"2021-04-07"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"  Justification: This feature improves the user experience and makes it easy to execute multiple commands in a row.","lastModifiedDate":"2021-04-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"* **Redesigned GUI**:","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"  * Redesigned GUI with new colour scheme and design (Pull requests [\\#153](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/153), [\\#121](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/121), [\\#51](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/51)).","lastModifiedDate":"2021-04-07"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"  * Many hours spent considering the user experience.","lastModifiedDate":"2021-04-07"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"  * Required designing a modular `UICommands` class to encapsulate data and instructions needed to display different UI panels at the correct time (Pull requests [\\#153](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/159), [\\#83](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/159)).","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"* **GUI Testing**:","lastModifiedDate":"2021-04-07"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"  * Integrated a third party library [(TestFX)](https://github.com/TestFX/TestFX) to the project (Pull request [\\#61](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/61)) to facilitate automated GUI testing.","lastModifiedDate":"2021-04-07"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"  * Many hours spent integrating TestFX with github actions.","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  * Credits: Address Book 4\u0027s [codebase](https://github.com/se-edu/addressbook-level4) was referenced.","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"* **Other features and enhancements to existing features**:","lastModifiedDate":"2021-04-07"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  * Implemented add project command (Pull request [\\#70](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/70)).","lastModifiedDate":"2021-04-07"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"  * Implemented help panel with summary of commands (Pull request [\\#207](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/207)).","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"  * Designed projects model (Pull request [\\#64](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/64)).","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"  * Modified existing `AddressBook` class to store `Projects` as well (Pull request [\\#175](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/175)).","lastModifiedDate":"2021-04-07"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"  * Added various commands to navigate the UI (Pull requests [\\#89](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/89), [\\#90](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/90)).","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"  * Implemented sorted ordering for Events, Deadlines, Todos and Groupmates (Pull request [\\#239](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/239)). ","lastModifiedDate":"2021-04-07"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"  * Wrote a test utility to facilitate generation of sample projects (Pull request [\\#93](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/93)).","lastModifiedDate":"2021-04-07"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dsamuelfangjw\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dsamuelfangjw\u0026tabRepo\u003dAY2021S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"* **Project management**:","lastModifiedDate":"2021-04-07"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"  * Managed releases `v1.1` - `v1.4` (6 releases) on GitHub","lastModifiedDate":"2021-04-07"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"  * Managed deadlines and deliverables for the group, including updating the issue tracker and milestones.","lastModifiedDate":"2021-04-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    * Added documentation for the features `undo/redo` and `add project`","lastModifiedDate":"2021-04-07"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    * Added section on command parameters.","lastModifiedDate":"2021-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    * Added implementation details of the `project` feature.","lastModifiedDate":"2021-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"  * PRs reviewed with non-trivial review comments (some examples: [\\#66](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/66#discussion_r590305059), [\\#133](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/133#discussion_r596271704), [\\#134](https://github.com/AY2021S2-CS2103T-T11-2/tp/pull/134#discussion_r596096725))","lastModifiedDate":"2021-04-07"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"  * Contributed to forum discussions (some examples: [1](https://github.com/nus-cs2103-AY2021S2/forum/issues/14#issuecomment-762001887), [2](https://github.com/nus-cs2103-AY2021S2/forum/issues/166#issuecomment-782832950), [3](https://github.com/nus-cs2103-AY2021S2/forum/issues/178#issuecomment-785672104), [4](https://github.com/nus-cs2103-AY2021S2/forum/issues/175#issuecomment-784275365))","lastModifiedDate":"2021-04-07"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"  * Helped solve classmates issues in forum (some examples: [1](https://github.com/nus-cs2103-AY2021S2/forum/issues/152#issuecomment-780571317), [2](https://github.com/nus-cs2103-AY2021S2/forum/issues/180#issuecomment-785819204), [3](https://github.com/nus-cs2103-AY2021S2/forum/issues/215#issuecomment-792492685), [4](https://github.com/nus-cs2103-AY2021S2/forum/issues/284#issuecomment-812535574))","lastModifiedDate":"2021-04-07"}],"authorContributionMap":{"-":19,"samuelfangjw":37}},{"path":"docs/team/vevek.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"title: Vevek\u0027s Project Portfolio Page","lastModifiedDate":"2021-04-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"## Project: CoLAB","lastModifiedDate":"2021-04-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-04-07"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"CoLAB (Collaboration Lab) is a desktop app for university students to manage their school projects. The user interacts with it using a CLI, and it has a GUI created with JavaFX.","lastModifiedDate":"2021-04-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2021s2.github.io/tp-dashboard/?search\u003dvevek\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dvevek\u0026tabRepo\u003dAY2021S2-CS2103T-T11-2%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026since\u003d)","lastModifiedDate":"2021-04-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"  * Managed releases `v1.1` - `v1.4` on GitHub.","lastModifiedDate":"2021-04-07"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"  * Managed deadlines and deliverables for the group, including updating the issue tracker and milestones.","lastModifiedDate":"2021-04-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"  * Updated the GUI\u0027s color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2021-04-07"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"  * Wrote additional tests for existing features to increase coverage from 70% to 80% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2021-04-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    * Added documentation for the features `Deadlines`, `Events` and `Todos` [\\#72]()","lastModifiedDate":"2021-04-07"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    * Did cosmetic tweaks to various documentation of features: [\\#74]()","lastModifiedDate":"2021-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    * Added implementation details of the `Deadlines`, `Events` and `Todos` models.","lastModifiedDate":"2021-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"vevek":12,"-":31}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":" * Changes the remark of an existing contact in the address book.","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the contact identified \"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"            + \"by the index number used in the last contact listing. \"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d \"Remark command not implemented yet\";","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"     * @param index of the contact in the filtered contact list to edit the remark","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"     * @param remark of the contact to be updated to","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        throw new CommandException(String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"lirc572"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of contact data. We achieve that by working with the `Contact` model. Each field in a Contact is implemented as a separate class (e.g. a `Name` object represents the contact’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"lirc572"},"content":"Create a new `Remark` in `seedu.address.model.contact`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-03-28"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"lirc572"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"lirc572"},"content":"Simply add the following to [`seedu.address.ui.ContactCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-03-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"lirc572"},"content":"**`ContactCard.java`:**","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":246,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"lirc572"},"content":"Then insert the following into [`main/resources/view/ContactListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"lirc572"},"content":"**`ContactListCard.fxml`:**","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"lirc572"},"content":"## Modify `Contact` to support a `Remark` field","lastModifiedDate":"2021-03-28"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"lirc572"},"content":"Since `ContactCard` displays data from a `Contact`, we need to update `Contact` to get our `Remark` displayed!","lastModifiedDate":"2021-03-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"lirc572"},"content":"### Modify `Contact`","lastModifiedDate":"2021-03-28"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"lirc572"},"content":"We change the constructor of `Contact` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2021-03-28"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"lirc572"},"content":"### Update other usages of `Contact`","lastModifiedDate":"2021-03-28"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"lirc572"},"content":"Unfortunately, a change to `Contact` will cause other commands to break, you will have to modify these commands to use the updated `Contact`!","lastModifiedDate":"2021-03-28"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"lirc572"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Contact` class to find these commands.","lastModifiedDate":"2021-03-28"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"lirc572"},"content":"AddressBook stores data by serializing `JsonAdaptedContact` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedContact` to work with our new `Contact`!","lastModifiedDate":"2021-03-28"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"lirc572"},"content":"Now that we have finalized the `Contact` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2021-03-28"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"lirc572"},"content":"**`ContactCard.java`:**","lastModifiedDate":"2021-03-28"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"lirc572"},"content":"public PersonCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"lirc572"},"content":"    remark.setText(contact.getRemark().value);","lastModifiedDate":"2021-03-28"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"lirc572"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Contact`. Since all fields in a `Contact` are immutable, we create a new instance of a `Contact` with the values that we want and","lastModifiedDate":"2021-03-28"},{"lineNumber":326,"author":{"gitId":"lirc572"},"content":"save it with `Model#setContact()`.","lastModifiedDate":"2021-03-28"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"lirc572"},"content":"        Person contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":344,"author":{"gitId":"lirc572"},"content":"        Person editedContact \u003d new Contact(contactToEdit.getName(), contactToEdit.getPhone(), contactToEdit.getEmail(),","lastModifiedDate":"2021-03-28"},{"lineNumber":345,"author":{"gitId":"lirc572"},"content":"                contactToEdit.getAddress(), remark, contactToEdit.getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"lirc572"},"content":"        model.setPerson(contactToEdit, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":348,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"lirc572"},"content":"        return new CommandResult(generateSuccessMessage(editedContact));","lastModifiedDate":"2021-03-28"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"lirc572"},"content":"     * {@code contactToEdit}.","lastModifiedDate":"2021-03-28"},{"lineNumber":356,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"lirc572"},"content":"    private String generateSuccessMessage(Person contactToEdit) {","lastModifiedDate":"2021-03-28"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":359,"author":{"gitId":"lirc572"},"content":"        return String.format(message, contactToEdit);","lastModifiedDate":"2021-03-28"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":378,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"lirc572":34,"-":360}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"When working on AddressBook, you will most likely find that some features and fields that are no longer necessary. In scenarios like this, you can consider refactoring the existing `Contact` model to suit your use case.","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"In this tutorial, we’ll do exactly just that and remove the `address` field from `Contact`.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Fortunately, IntelliJ IDEA provides a robust refactoring tool that can identify *most* usages. Let’s try to use it as much as we can.","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"The `address` field in `Contact` is actually an instance of the `seedu.address.model.contact.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry. You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditContactDescriptor` may require more careful inspection.","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"Let’s try removing references to `Address` in `EditContactDescriptor`.","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"1. Safe delete the field `address` in `EditContactDescriptor`.","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Contact` class will require you to modify its constructor.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `ContactCard` that has not been removed nor identified.","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"A quick look at the `ContactCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"**`ContactCard.java`**","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"**`ContactCard.fxml`**","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"**`invalidContactAddressBook.json`:**","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lirc572":13,"-":90}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"![Architecture sequence diagram from the developer","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"guide](../images/ArchitectureSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Note how the diagram shows only how the execution flows *between* the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram succeeds in informing the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of the code base.","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Setting a break point","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method. In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the UI transfers control to the Logic component. According to the sequence diagram, the UI component yields control to the Logic component through a method named `execute`. Searching through the code base for `execute()` yields a promising candidate in `seedu.address.ui.CommandBox.CommandExecutor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"![Using the `Search for target by name` feature. `Navigate` \\\u003e `Symbol`.](../images/tracing/Execute.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"A quick look at the class confirms that this is indeed close to what we’re looking for. However, it is just an `Interface`. Let’s delve further and find the implementation of the interface by using the `Find Usages` feature in IntelliJ IDEA.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to jot down what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"1. Enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and look something like this:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"1. Use the `Show execution point` feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"1. `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s `Step in` into that method call:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()`. Let’s take a look at the body of the method and annotate what we can deduce.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"1. `Step over` the logging code since it is of no interest to us now. ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. `Step into` the line where user input in parsed from a String to a Command.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    **`AddressBookParser\\#parseCommand()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. `Step over` until you reach the `switch` statement. The `Variables` window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. Stepping into the `switch`, we obviously stop at **`AddressBookParser\\#parseCommand()`.**","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** Sometimes you might end up stepping into functions that are not of interest. Simply `step out` of them\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditContactDescriptor`. Recall that we can verify the contents of `editContactDesciptor` through the `Variable` tool window.\u003cbr\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far matches with the diagram?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. Now let’s see what happens when we call `command#execute()`\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"   **`EditCommand\\#execute()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"       Person contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"       Person editedContact \u003d createEditedPerson(contactToEdit, updateContactDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"       if (!contactToEdit.isSamePerson(editedContact) \u0026\u0026 model.hasPerson(editedContact)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"       model.setPerson(contactToEdit, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedContact));","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to `model`.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"1. We can a closer look at how storage works by repeatedly stepping into the code until we arrive at","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    `JsonAddressBook#saveAddressBook()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"1. Again, it appears that the heavy lifting is delegated. Let’s take a look at `JsonSerializableAddressBook`\u0027s constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook\\#JsonSerializableAddressBook()`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"   /**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    *","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    */","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"   public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"       contacts.addAll(","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"-"},"content":"           source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                 .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                 .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                 .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"1. It appears that a `JsonAdaptedContact` is created for each `Contact` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2021-03-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"1. We can continue to step through until we return to `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    **`ResultDisplay\\#setFeedbackToUser()`**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"1. Finally, we step through until we reach the end of","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    `MainWindow#executeCommand()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"the result being displayed to the user. From this tutorial, you learned","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"more about the inner workings of AddressBook and how the various","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"components mesh together to form one cohesive product.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"execution path tracing. In some cases, you can do further tracing for","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"the given commands to find exactly what happens.","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown(if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"lirc572"},"content":"    5.  Add a new field to `Contact`","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lirc572":9,"-":241}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.ColabFolderStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonColabFolderStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public static final Version VERSION \u003d new Version(1, 3, 2, true);","lastModifiedDate":"2021-04-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing CoLAB ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderStorage colabFolderStorage \u003d new JsonColabFolderStorage(userPrefs.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        storage \u003d new StorageManager(colabFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s CoLAB folder and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * The data from the sample CoLAB folder will be used instead if {@code storage}\u0027s CoLAB folder is not found,","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * or an empty CoLAB folder will be used instead if errors occur when reading {@code storage}\u0027s CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        Optional\u003cReadOnlyColabFolder\u003e colabFolderOptional;","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyColabFolder initialColabFolderData;","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            colabFolderOptional \u003d storage.readColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            if (!colabFolderOptional.isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                logger.info(\"Data file not found. Will be starting with a sample CoLAB Folder\");","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"            initialColabFolderData \u003d colabFolderOptional.orElseGet(SampleDataUtil::getSampleColabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty CoLAB Folder\");","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            initialColabFolderData \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty CoLAB Folder\");","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"            initialColabFolderData \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        return new ModelManager(initialColabFolderData, userPrefs);","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty CoLAB Folder\");","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        logger.info(\"Starting CoLAB \" + MainApp.VERSION);","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping CoLAB ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":158,"samuelfangjw":26}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final double DEFAULT_HEIGHT \u003d 720;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final double DEFAULT_WIDTH \u003d 1280;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final String LOG_FILE \u003d \"colab.log\";","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":111,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Welcome to CoLAB!\\nIf you are lost type \\\"help\\\" \"","lastModifiedDate":"2021-04-05"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"            + \"in the command box below or press the help menu button near the top of your screen.\";","lastModifiedDate":"2021-04-05"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX \u003d \"The contact index provided is invalid.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX \u003d \"The groupmate index provided is invalid.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX \u003d \"The project index provided is invalid.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX \u003d \"The deadline index provided is invalid.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_TODO_DISPLAYED_INDEX \u003d \"The todo index provided is invalid.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_CONTACTS_LISTED_OVERVIEW \u003d \"%1$d contacts listed!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"New event %1$s added to project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_ADD_TODO_SUCCESS \u003d \"New todo %1$s added to project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_ADD_DEADLINE_SUCCESS \u003d \"New deadline %1$s added to project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_ADD_GROUPMATE_SUCCESS \u003d \"New groupmate %1$s added to project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in this project.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This todo already exists in this project.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DUPLICATE_DEADLINE \u003d \"This deadline already exists in this project.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DUPLICATE_GROUPMATE \u003d \"This groupmate already exists in this project.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DELETE_DEADLINE_SUCCESS \u003d \"Deleted Deadline %1$s from Project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event %1$s from Project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DELETE_TODO_SUCCESS \u003d \"Deleted Todo %1$s from Project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DELETE_GROUPMATE_SUCCESS \u003d \"Deleted Groupmate %1$s from Project %2$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_MARK_DEADLINE_SUCCESS \u003d \"Marked Deadline as done: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_MARK_TODO_SUCCESS \u003d \"Marked Todo as done: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UI_PROJECT_NOT_DISPLAYED \u003d \"No project displayed. Display a project using the \"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            + ViewProjectCommand.COMMAND_WORD + \" command.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"            \"Description can take any values, and it should not be blank\";","lastModifiedDate":"2021-04-02"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_WEEKLY_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"            \"Repeat Weekly should be one of: \u0027Y\u0027, \u0027N\u0027, \u0027y\u0027 or \u0027n\u0027\";","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_DATE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                    \"Date should be a valid date in one of the following formats:\\n\"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                    + \"24-11-2021\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                    + \"24112021\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                    + \"24/11/2021\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                    + \"24.11.2021\";","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_TIME_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"            \"Time should be a valid time in one of the following formats:\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                    + \"17:30\\n\"","lastModifiedDate":"2021-04-01"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                    + \"1730\";","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_EVENTS_TO_DISPLAY_TODAY \u003d \"You have no events today!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_DEADLINES_TO_DISPLAY_TODAY \u003d \"You have no deadlines today!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_TODOS_TO_DISPLAY \u003d \"You have no todos in this project!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_GROUPMATES_TO_DISPLAY \u003d \"You have no groupmates in this project!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_DEADLINES_TO_DISPLAY \u003d \"You have no events in this project!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_EVENTS_TO_DISPLAY \u003d \"You have no deadlines in this project!\";","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":1,"vevek":22,"-":12,"samuelfangjw":36}},{"path":"src/main/java/seedu/address/commons/exceptions/DateConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Represents an error during conversion of date from one format to another.","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public class DateConversionException extends Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    public DateConversionException(String message) {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"        super(message);","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"vevek":10}},{"path":"src/main/java/seedu/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code IllegalValueException} object with a {@code message}.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code IllegalValueException} object with a {@code message} and a {@code cause}.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":21,"samuelfangjw":4}},{"path":"src/main/java/seedu/address/commons/exceptions/TimeConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Represents an error during conversion of time from one format to another.","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public class TimeConversionException extends Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    public TimeConversionException(String message) {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"        super(message);","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"vevek":10}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PARSER_DATE_CONSTRAINTS;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-26"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * A class for encoding and decoding of Dates.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class DateUtil {","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /*","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Inconsistency in naming of year: uuuu in formatters, yyyy in some error messages.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        Java uses uuuu for years (yyyy is year-of-era).","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        However, yyyy is the more commonly accepted symbol for year and will be more intuitive for users.","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static DateTimeFormatter dateFormat1 \u003d DateTimeFormatter.ofPattern(\"dd-MM-uuuu\");","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private static DateTimeFormatter dateFormat2 \u003d DateTimeFormatter.ofPattern(\"ddMMuuuu\");","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private static DateTimeFormatter dateFormat3 \u003d DateTimeFormatter.ofPattern(\"dd/MM/uuuu\");","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private static DateTimeFormatter dateformat4 \u003d DateTimeFormatter.ofPattern(\"dd.MM.uuuu\");","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private static DateTimeFormatter formatter \u003d","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            new DateTimeFormatterBuilder()","lastModifiedDate":"2021-03-26"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                    .appendOptional(dateFormat1)","lastModifiedDate":"2021-03-26"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                    .appendOptional(dateFormat2)","lastModifiedDate":"2021-03-26"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                    .appendOptional(dateFormat3)","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                    .appendOptional(dateformat4)","lastModifiedDate":"2021-03-26"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                    .toFormatter()","lastModifiedDate":"2021-03-26"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-03-26"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * Encodes a date passed as a String into a LocalDate.","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * @param date Date in the uuuu-mm-dd format.","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate object.","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     * @throws DateConversionException Occurs when a date had been passed in with the wrong format.","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public static LocalDate encodeDate(String date) throws DateConversionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            return checkDateIsNotNegative(LocalDate.parse(date, formatter));","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            throw new DateConversionException(MESSAGE_PARSER_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Decodes a date passed as a LocalDate into a String in the dd MMM uuuu format.","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * @param date A LocalDate object.","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * @return A date String in the dd MMM uuuu format.","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"    public static String decodeDate(LocalDate date) {","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * Decodes a date passed as a LocalDate into a String in the EEEE, dd MMM uuuu format.","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * @param date A LocalDate object.","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * @return A date String in the EEEE, dd MMM uuuu format.","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    public static String decodeDateWithDay(LocalDate date) {","lastModifiedDate":"2021-03-26"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-26"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"EEE, dd MMM uuuu\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * Decodes a date passed as a LocalDate into a String in the EEEE format.","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     * @param date A LocalDate object.","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     * @return A date String in the EEEE format.","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    public static String decodeDateIntoDay(LocalDate date) {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"EEEE\"));","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"     * Decodes a date passed as a LocalDate into a String in the uuuu-MM-dd format.","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     * @param date A LocalDate object.","lastModifiedDate":"2021-03-09"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     * @return A date String in the uuuu-MM-dd format.","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    public static String decodeDateForStorage(LocalDate date) {","lastModifiedDate":"2021-03-09"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-uuuu\"));","lastModifiedDate":"2021-03-26"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if year is negative.","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"     * @param date {@code LocalDate} to check.","lastModifiedDate":"2021-03-26"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code date} if year is non-negative.","lastModifiedDate":"2021-03-26"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"     * @throws DateConversionException if {@code date} is negative.","lastModifiedDate":"2021-03-26"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    private static LocalDate checkDateIsNotNegative(LocalDate date) throws DateConversionException {","lastModifiedDate":"2021-03-26"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        if (date.isBefore(LocalDate.ofYearDay(0, 1))) {","lastModifiedDate":"2021-03-26"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            throw new DateConversionException(\"Year should be a non-negative 4 digit number.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        return date;","lastModifiedDate":"2021-03-26"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"vevek":41,"samuelfangjw":70}},{"path":"src/main/java/seedu/address/commons/util/TimeUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PARSER_TIME_CONSTRAINTS;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * A class for encoding and decoding of Time.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class TimeUtil {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    private static DateTimeFormatter timeFormat1 \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    private static DateTimeFormatter timeFormat2 \u003d DateTimeFormatter.ofPattern(\"HH:mm\");","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    private static DateTimeFormatter formatter \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            new DateTimeFormatterBuilder()","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"                    .appendOptional(timeFormat1)","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"                    .appendOptional(timeFormat2)","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"                    .toFormatter()","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"                    .withResolverStyle(ResolverStyle.STRICT);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * Encodes a time passed as a String into a LocalTime.","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param time Time in the HHmm or HH:mm format.","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @return A LocalTime object.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * @throws TimeConversionException Occurs when a date had been passed in with the wrong format.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public static LocalTime encodeTime(String time) throws TimeConversionException {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            return LocalTime.parse(time, formatter);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"            throw new TimeConversionException(MESSAGE_PARSER_TIME_CONSTRAINTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * Decodes a time passed as a LocalTime into a String in the HHmm format.","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * @param time A LocalTime object.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * @return A time String in the HHmm format.","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    public static String decodeTime(LocalTime time) {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        return time.format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"vevek":54}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the ColabFolder.","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * @see Model#getColabFolder()","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    ReadOnlyColabFolder getColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    /** Returns an unmodifiable view of the filtered list of contacts */","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the user prefs\u0027 CoLAB folder file path.","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    Path getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /** Returns an unmodifiable view of the filtered list of projects */","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectsList();","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * Commits the current {@code ColabFolder} state to {@code ColabFolderHistory}.","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    void commitState(CommandResult commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lirc572":3,"-":42,"samuelfangjw":16}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            storage.saveColabFolder(model.getColabFolder());","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public ReadOnlyColabFolder getColabFolder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        return model.getColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        return model.getFilteredContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public Path getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        return model.getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectsList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        return model.getFilteredProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    public void commitState(CommandResult commandResult) {","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        if (!commandResult.isIgnoreHistory()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"            model.commitState(commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lirc572":3,"-":72,"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/commandhistory/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commandhistory;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * A class that contains the history of commands entered by the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class CommandHistory {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static CommandHistory commandHistory \u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private List\u003cString\u003e history;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final Pointer currPointer;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private String currCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private CommandHistory() {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        this.history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        currPointer \u003d new Pointer();","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        currCommand \u003d \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the saved instance of {@code commandHistory}, or creates it if it is null.","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code commandHistory}, the command history for the current session.","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public static CommandHistory getCommandHistory() {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        if (commandHistory \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            commandHistory \u003d new CommandHistory();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        return commandHistory;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a command to the history list.","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Also resets the current pointer to get ready for user to input another command.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * @param command command to add to the history list.","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public void addCommand(String command) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        history.add(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        currPointer.resetPosition();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        currCommand \u003d \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the number of commands saved.","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public int getHistorySize() {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return history.size();","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the next string in the command history. Also saves the last command partially typed by the user","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     * and handles cases where there is no next string.","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     * @param command The last command partially typed by the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     * @return The next string in the command history.","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public String getNext(String command) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        setCurrentCommand(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        currPointer.next(getHistorySize());","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        return getCommandString();","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the previous string in the command history. Also saves the last command partially typed by the user","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * and handles cases where there is no previous string.","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * @param command The last command partially typed by the user.","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * @return The previous string in the command history.","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public String getPrevious(String command) {","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        setCurrentCommand(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        currPointer.previous(getHistorySize());","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        return getCommandString();","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the string in the command history at the current pointer.","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     * @return The current string in the command history referenced by the pointer.","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    private String getCommandString() {","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        if (!currPointer.isPointingToHistory()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"            return currCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"            return history.get(currPointer.currPosition);","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    private void setCurrentCommand(String command) {","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        if (!currPointer.isPointingToHistory()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            currCommand \u003d command;","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"     * Clears the command history and current command as well as resets the pointer.","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    public void clearCommandHistory() {","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        currPointer.resetPosition();","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        currCommand \u003d \"\";","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     * A class to represent the pointer to a {@code CommandHistory} object.","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    static class Pointer {","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        private int currPosition;","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        private boolean isPointingToHistory;","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"         * Creates a new {@code Pointer} object.","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        public Pointer() {","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"            currPosition \u003d 0;","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"            isPointingToHistory \u003d false;","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        public void resetPosition() {","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"            isPointingToHistory \u003d false;","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"         * Decrements the pointer, or sets the pointer to the last element of the list if pointer is not pointing to","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"         * a location in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"         *","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"         * @param currSize The current size of the history list.","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        public void previous(int currSize) {","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"            assert currPosition \u003e\u003d 0 : \"Current position in history should not be negative\";","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"            if (!isPointingToHistory \u0026\u0026 currSize !\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"                currPosition \u003d currSize - 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                isPointingToHistory \u003d true;","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"            } else if (currPosition !\u003d 0) {","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"                currPosition -\u003d 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"         * Increments the pointer, or ignores the command if the pointer is not pointing to a location in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"         *","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"         * @param currSize The current size of the history list.","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        public void next(int currSize) {","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"            assert currPosition \u003c currSize : \"Current position in history should not be larger than size of list\";","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"            int lastPosition \u003d currSize - 1;","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"            if (currPosition \u003d\u003d lastPosition) {","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"                resetPosition();","lastModifiedDate":"2021-03-28"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"            } else if (isPointingToHistory) {","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"                currPosition++;","lastModifiedDate":"2021-03-28"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"        /**","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"         * Checks if pointer is pointing to a location in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"         *","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"         * @return true if pointer is pointing to a location in history, false otherwise.","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"         */","lastModifiedDate":"2021-03-28"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        public boolean isPointingToHistory() {","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"            return isPointingToHistory;","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"samuelfangjw":174}},{"path":"src/main/java/seedu/address/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":" * Adds a contact to the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"addC\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a contact to CoLAB.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in CoLAB\";","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    private final Contact toAdd;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     * Creates an AddContactCommand to add the specified {@code Contact}","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    public AddContactCommand(Contact contact) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        toAdd \u003d contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        if (model.hasContact(toAdd)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        model.addContact(toAdd);","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), new ShowContactsUiCommand());","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"                || (other instanceof AddContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 toAdd.equals(((AddContactCommand) other).toAdd));","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":16,"-":49,"samuelfangjw":3}},{"path":"src/main/java/seedu/address/logic/commands/AddDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateDeadlineException;","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":" * Adds an deadline to a specified project in CoLAB.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"addD\";","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a deadline to a specified project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_DEADLINE_DATE + \"DATE\\n\"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_DESCRIPTION + \"Project report \"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            + PREFIX_DEADLINE_DATE + \"24-04-2021\";","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * Creates an AddDeadlineCommand to add specified {@code Deadline} to {@code Project} with {@code Index}.","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * @param index index of {@code Project} to add deadline in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     * @param deadline {@code Deadline} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    public AddDeadlineCommand(Index index, Deadline deadline) {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(index, deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        this.toAdd \u003d deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            projectToEdit.addDeadline(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DuplicateDeadlineException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_ADD_DEADLINE_SUCCESS, toAdd,","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), new ViewProjectAndOverviewUiCommand(index));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                || (other instanceof AddDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 toAdd.equals(((AddDeadlineCommand) other).toAdd)","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 index.equals(((AddDeadlineCommand) other).index));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":1,"vevek":68,"samuelfangjw":12}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateEventException;","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":" * Adds an event to a specified project in CoLAB.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"addE\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to a specified project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_DATE + \"DATE \"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_TIME + \"TIME \"","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_EVENT_WEEKLY + \"REPEATS_WEEKLY\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_DESCRIPTION + \"Project meeting \"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_DATE + \"24-04-2021 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_TIME + \"1730 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_WEEKLY + \"Y\";","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"    private final Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"     * Creates an AddEventCommand to add specified {@code Event} to {@code Project} with {@code Index}.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"     * @param index index of {@code Project} to add event in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"     * @param event {@code Event} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    public AddEventCommand(Index index, Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(index, event);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        this.toAdd \u003d event;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            projectToEdit.addEvent(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DuplicateEventException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_ADD_EVENT_SUCCESS, toAdd,","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), new ViewProjectAndOverviewUiCommand(index));","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd)","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 index.equals(((AddEventCommand) other).index));","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":1,"vevek":15,"Eriksen2411":58,"samuelfangjw":12}},{"path":"src/main/java/seedu/address/logic/commands/AddGroupmateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_ADD_GROUPMATE_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_GROUPMATE;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":" * Adds a groupmate to a project.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"public class AddGroupmateCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"addG\";","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a groupmate to an existing project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE]...\\n\"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            + PREFIX_ROLE + \"leader \"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            + PREFIX_ROLE + \"frontend-developer\";","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    private final Index projectToAddToIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    private final Groupmate groupmateToAdd;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     * Creates an AddGroupmateCommand to add the specified {@code Groupmate} to the specified {@code Project}","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public AddGroupmateCommand(Index projectIndex, Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(projectIndex, groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        projectToAddToIndex \u003d projectIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        groupmateToAdd \u003d groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        List\u003cProject\u003e lastShownProjectList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        if (projectToAddToIndex.getZeroBased() \u003e\u003d lastShownProjectList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        Project projectToAddTo \u003d requireNonNull(lastShownProjectList.get(projectToAddToIndex.getZeroBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        if (projectToAddTo.hasGroupmate(groupmateToAdd)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUPMATE);","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        // logic goes here","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        projectToAddTo.addGroupmate(groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredProjectList(model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                String.format(MESSAGE_ADD_GROUPMATE_SUCCESS, groupmateToAdd.getName(), projectToAddTo.getProjectName()),","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(projectToAddToIndex)","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"                || (other instanceof AddGroupmateCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 projectToAddToIndex.equals(((AddGroupmateCommand) other).projectToAddToIndex)","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 groupmateToAdd.equals(((AddGroupmateCommand) other).groupmateToAdd)","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"            );","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":73,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/logic/commands/AddProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Adds a project to the CoLAB.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class AddProjectCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"addP\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a project to CoLAB.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_NAME + \"PROJECT_NAME\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_NAME + \"CS2102 Group Project\";","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New project added: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"This project already exists in CoLAB\";","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final Project toAdd;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"     * Creates an AddProjectCommand to add the specified {@code Project}.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public AddProjectCommand(Project project) {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        toAdd \u003d project;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        if (model.hasProject(toAdd)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        Index index \u003d Index.fromZeroBased(model.getFilteredProjectList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        model.addProject(toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd), new ViewProjectAndOverviewUiCommand(index));","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof AddProjectCommand // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 toAdd.equals(((AddProjectCommand) other).toAdd));","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"Eriksen2411":1,"samuelfangjw":57}},{"path":"src/main/java/seedu/address/logic/commands/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndTodosUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateTodoException;","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"addT\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Todo to CoLAB.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + PREFIX_DESCRIPTION + \"Submit project report \";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Todo toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * Creates an AddTodoCommand to add the specified {@code Task}","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @param index index of {@code Project} to add event in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * @param todo {@code Todo} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public AddTodoCommand(Index index, Todo todo) {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.toAdd \u003d todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            projectToEdit.addTodo(toAdd);","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DuplicateTodoException e) {","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_ADD_TODO_SUCCESS, toAdd,","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), new ViewProjectAndTodosUiCommand(index));","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                || (other instanceof AddTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 toAdd.equals(((AddTodoCommand) other).toAdd)","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 index.equals(((AddTodoCommand) other).index));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":1,"vevek":60,"samuelfangjw":11}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":" * Clears the projects \u0026 contacts list.","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Projects \u0026 Contacts data have been cleared!\";","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        model.setColabFolder(new ColabFolder());","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, new ShowTodayUiCommand());","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vevek":2,"-":17,"samuelfangjw":4}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.UiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /** Information on which UI command to execute **/","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private final UiCommand uiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /** Setting this boolean flag to true will ignore history **/","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private boolean ignoreHistory \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code uiCommand}.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * All other fields are set to their default value.","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult (String feedbackToUser, UiCommand uiCommand) {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        this.uiCommand \u003d uiCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * All other fields set to their default value.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        this.uiCommand \u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public UiCommand getUiCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        return uiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if there is a UiCommand.","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if UiCommand is not null and false otherwise.","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasUiCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        return getUiCommand() !\u003d null;","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public boolean isIgnoreHistory() {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        return ignoreHistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * Sets ignore history flag.","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * @param ignoreHistory new state of ignore history flag.","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * @return this, for method chaining.","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult setIgnoreHistory(boolean ignoreHistory) {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        this.ignoreHistory \u003d ignoreHistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        if (uiCommand \u003d\u003d null || otherCommandResult.getUiCommand() \u003d\u003d null) {","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 uiCommand \u003d\u003d otherCommandResult.getUiCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"                    \u0026\u0026 uiCommand.equals(otherCommandResult.getUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(feedbackToUser, uiCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":54,"samuelfangjw":47}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":" * Deletes a Contact identified using it\u0027s displayed index from the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"deleteC\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"            + \": Deletes the contact identified by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DELETE_CONTACT_SUCCESS \u003d \"Deleted contact: %1$s\";","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        Contact contactToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        model.deleteContact(contactToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete),","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                new ShowContactsUiCommand());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                || (other instanceof DeleteContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteContactCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":13,"-":39,"samuelfangjw":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":" * Deletes a Deadline identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"public class DeleteDeadlineCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"deleteD\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            + \": Deletes the deadline identified by the index number used within a displayed project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"DEADLINE_INDEX \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    private final Index targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DeleteDeadlineCommand.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     * Creates a DeleteDeadlineCommand to delete the specified {@code Deadline} from {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project that {@code Deadline} is to be deleted from.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * @param targetDeadlineIndex Index of Deadline that is to be deleted form {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public DeleteDeadlineCommand(Index projectIndex, Index targetDeadlineIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        this.targetDeadlineIndex \u003d targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"            logger.info(\"----------------[DeleteDeadlineCommand][Invalid Project Index]\");","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        if (targetDeadlineIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                .getDeadlines().getSortedDeadlineList().size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"            logger.info(\"----------------[DeleteDeadlineCommand][Invalid Deadline Index]\");","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        projectToEdit.deleteDeadline(targetDeadlineIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_DEADLINE_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                targetDeadlineIndex.getOneBased(), projectToEdit.getProjectName()),","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(projectIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeleteDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((DeleteDeadlineCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetDeadlineIndex.equals(((DeleteDeadlineCommand) other).targetDeadlineIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":71,"samuelfangjw":10}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":" * Deletes a Event identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"deleteE\";","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            + \": Deletes the event identified by the index number used within the displayed project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"EVENT_INDEX \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(DeleteEventCommand.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     * Creates a DeleteEventCommand to delete the specified {@code Event} from {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project that {@code Event} is to be deleted from.","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * @param targetEventIndex Index of event that is to be deleted form {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public DeleteEventCommand(Index projectIndex, Index targetEventIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"            logger.info(\"----------------[DeleteEventCommand][Invalid Project Index]\");","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                .getEvents().getSortedEventList().size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"            logger.info(\"----------------[DeleteEventCommand][Invalid Event Index]\");","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        projectToEdit.deleteEvent(targetEventIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_EVENT_SUCCESS, targetEventIndex.getOneBased(),","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), new ViewProjectAndOverviewUiCommand(projectIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeleteEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((DeleteEventCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetEventIndex.equals(((DeleteEventCommand) other).targetEventIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":70,"samuelfangjw":10}},{"path":"src/main/java/seedu/address/logic/commands/DeleteGroupmateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DELETE_GROUPMATE_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":" * Deletes a project identified using it\u0027s displayed index from the project list.","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"public class DeleteGroupmateCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"deleteG\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            + \": Deletes the groupmate identified by the index number used within the displayed project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"GROUPMATE_INDEX \\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    private final Index targetProjectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    private final Index targetGroupmateIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DeleteGroupmateCommand with the given indexes.","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public DeleteGroupmateCommand(Index targetProjectIndex, Index targetGroupmateIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        this.targetProjectIndex \u003d targetProjectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        this.targetGroupmateIndex \u003d targetGroupmateIndex;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        if (targetProjectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        Project projectToEdit \u003d lastShownList.get(targetProjectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        if (targetGroupmateIndex.getZeroBased() \u003e\u003d projectToEdit.getGroupmates().size()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        Groupmate groupmateToDelete \u003d projectToEdit.getGroupmate(targetGroupmateIndex.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        projectToEdit.deleteGroupmate(targetGroupmateIndex.getZeroBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUPMATE_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                groupmateToDelete.getName(), projectToEdit.getProjectName()),","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(targetProjectIndex));","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this //short circuit if same project","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                || (other instanceof DeleteGroupmateCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 targetProjectIndex.equals(((DeleteGroupmateCommand) other).targetProjectIndex)","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 targetGroupmateIndex.equals(((DeleteGroupmateCommand) other).targetGroupmateIndex));","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":61,"samuelfangjw":10}},{"path":"src/main/java/seedu/address/logic/commands/DeleteProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":" * Deletes a project identified using it\u0027s displayed index from the project list.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"deleteP\";","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            + \": Deletes the project identified by the index number used in the side panel.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"Deleted Project: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    public DeleteProjectCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"        model.deleteProject(projectToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete.getProjectName()),","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand());","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this //short circuit if same project","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof DeleteProjectCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteProjectCommand) other).targetIndex));","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"Eriksen2411":48,"samuelfangjw":6}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndTodosUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Deletes a Todo identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"deleteT\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            + \": Deletes the todo identified by the index number used within the displayed project.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"TODO_INDEX\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    private final Index targetTodoIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Creates a DeleteTodoCommand to delete the specified {@code Todo} from {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project that {@code Todo} is to be deleted from.","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param targetTodoIndex Index of todo that is to be deleted form {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public DeleteTodoCommand(Index projectIndex, Index targetTodoIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.targetTodoIndex \u003d targetTodoIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        if (targetTodoIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                .getTodos().getSortedTodos().size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        projectToEdit.deleteTodo(targetTodoIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_TODO_SUCCESS, targetTodoIndex.getOneBased(),","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), new ViewProjectAndTodosUiCommand(projectIndex));","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeleteTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((DeleteTodoCommand) other).projectIndex))","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetTodoIndex.equals(((DeleteTodoCommand) other).targetTodoIndex); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":64,"samuelfangjw":10}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ExitUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting CoLAB ...\";","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, new ExitUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":17,"samuelfangjw":3}},{"path":"src/main/java/seedu/address/logic/commands/FindContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" * Finds and lists all Contacts in the contact list whose name contains any of the argument keywords.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class FindContactCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"findC\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all contacts whose names contain any of \"","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    public FindContactCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredContactList(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                String.format(Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW, model.getFilteredContactList().size()),","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                new ShowContactsUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"                || (other instanceof FindContactCommand // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 predicate.equals(((FindContactCommand) other).predicate)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"lirc572":9,"-":32,"samuelfangjw":3}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowHelpUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, new ShowHelpUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/logic/commands/MarkDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Marks a Deadline as done. The Deadline is identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class MarkDeadlineCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"markD\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            + \": Marks the deadline identified by the index number used within the displayed project as done.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \"DEADLINE_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_MARK_TASK_INDEX + \" 1\";","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    private final Index targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Creates a MarkDeadlineCommand to mark the specified {@code Deadline} from {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project in which {@code Deadline} is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * @param targetDeadlineIndex Index of deadline in {@code Project} that is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public MarkDeadlineCommand(Index projectIndex, Index targetDeadlineIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        this.targetDeadlineIndex \u003d targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        if (targetDeadlineIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                .getDeadlines().getSortedDeadlineList().size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        projectToEdit.markDeadline(targetDeadlineIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MARK_DEADLINE_SUCCESS, targetDeadlineIndex","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                .getOneBased()), new ViewProjectAndOverviewUiCommand(projectIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                || (other instanceof MarkDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((MarkDeadlineCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetDeadlineIndex.equals(((MarkDeadlineCommand) other).targetDeadlineIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":68,"samuelfangjw":7}},{"path":"src/main/java/seedu/address/logic/commands/MarkTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndTodosUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Marks a Todo as done. The Todo is identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class MarkTodoCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"markT\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            + \": Marks the todo identified by the index number used within the displayed project as done.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX\"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \"TODO_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    private final Index targetTodoIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Creates a MarkTodoCommand to mark the specified {@code Todo} from {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project in which {@code Todo} is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * @param targetTodoIndex Index of todo in {@code Project} that is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public MarkTodoCommand(Index projectIndex, Index targetTodoIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        this.targetTodoIndex \u003d targetTodoIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        if (targetTodoIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                .getTodos().getSortedTodos().size()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        projectToEdit.markTodo(targetTodoIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MARK_TODO_SUCCESS, targetTodoIndex.getOneBased()),","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndTodosUiCommand(projectIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                || (other instanceof MarkTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((MarkTodoCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetTodoIndex.equals(((MarkTodoCommand) other).targetTodoIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":68,"samuelfangjw":7}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Redo the {@code model}\u0027s colab folder to its next state.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo successful!\\n\";","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to redo.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            CommandResult result \u003d model.redo();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            /*","lastModifiedDate":"2021-04-05"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"             * TODO: Fix in v2.","lastModifiedDate":"2021-04-05"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"             * Originally, feedback to user was meant to show more detailed feedback message.","lastModifiedDate":"2021-04-05"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"             * However, the current message was found to be unintuitive for users.","lastModifiedDate":"2021-04-05"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"             * Changing this would require a large modification which is not possible in v1.4 due to module guidelines.","lastModifiedDate":"2021-04-05"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"             * I have changed the message to show a generic \"Redo Successful\" for now.","lastModifiedDate":"2021-04-05"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"             */","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            return new CommandResult(MESSAGE_SUCCESS, result.getUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        } catch (NoRedoableStateException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Undo the {@code model}\u0027s colab folder to its previous state.","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo successful!\\n\";","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_FAILURE \u003d \"No more commands to undo.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            CommandResult result \u003d model.undo();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            if (result \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                return new CommandResult(String.format(MESSAGE_SUCCESS, \"Viewing Initial State.\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                        new ShowTodayUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            /*","lastModifiedDate":"2021-04-05"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"             * TODO: Fix in v2.","lastModifiedDate":"2021-04-05"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"             * Originally, feedback to user was meant to show more detailed feedback message.","lastModifiedDate":"2021-04-05"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"             * However, the current message was found to be unintuitive for users.","lastModifiedDate":"2021-04-05"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"             * Changing this would require a large modification which is not possible in v1.4 due to module guidelines.","lastModifiedDate":"2021-04-05"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"             * I have changed the message to show a generic \"Undo Successful\" for now.","lastModifiedDate":"2021-04-05"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"             */","lastModifiedDate":"2021-04-05"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            return new CommandResult(MESSAGE_SUCCESS, result.getUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-04-05"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        } catch (NoUndoableStateException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_FAILURE);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":47}},{"path":"src/main/java/seedu/address/logic/commands/UpdateContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":" * Edits the details of an existing contact in contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"public class UpdateContactCommand extends Command {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"updateC\";","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the contact identified \"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            + \"by the index number used in the displayed contact list.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_EDIT_CONTACT_SUCCESS \u003d \"Updated contact: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to update must be provided.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists in CoLAB.\";","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    private final UpdateContactDescriptor updateContactDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     * Constructs an {@code EditCommand} with an {@code index} and a {@code updateContactDescriptor}.","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"     * @param index of the contact in the filtered contact list to edit","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"     * @param updateContactDescriptor details to edit the contact with","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"    public UpdateContactCommand(Index index, UpdateContactDescriptor updateContactDescriptor) {","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        requireNonNull(updateContactDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        this.updateContactDescriptor \u003d new UpdateContactDescriptor(updateContactDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        List\u003cContact\u003e lastShownList \u003d model.getFilteredContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        Contact contactToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        Contact editedContact \u003d createEditedContact(contactToEdit, updateContactDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        if (!contactToEdit.isSameContact(editedContact) \u0026\u0026 model.hasContact(editedContact)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        model.setContact(contactToEdit, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_CONTACT_SUCCESS, editedContact),","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                new ShowContactsUiCommand());","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"     * Creates and returns a {@code Contact} with the details of {@code contactToEdit}","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"     * edited with {@code updateContactDescriptor}.","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"    private static Contact createEditedContact(Contact contactToEdit, UpdateContactDescriptor updateContactDescriptor) {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"        assert contactToEdit !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        Name updatedName \u003d updateContactDescriptor.getName().orElse(contactToEdit.getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        Phone updatedPhone \u003d updateContactDescriptor.getPhone().orElse(contactToEdit.getPhone());","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        Email updatedEmail \u003d updateContactDescriptor.getEmail().orElse(contactToEdit.getEmail());","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        Address updatedAddress \u003d updateContactDescriptor.getAddress().orElse(contactToEdit.getAddress());","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        Set\u003cTag\u003e updatedTags \u003d updateContactDescriptor.getTags().orElse(contactToEdit.getTags());","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        return new Contact(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        if (!(other instanceof UpdateContactCommand)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand e \u003d (UpdateContactCommand) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 updateContactDescriptor.equals(e.updateContactDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"     * Stores the details to edit the contact with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"     * corresponding field value of the contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    public static class UpdateContactDescriptor {","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        public UpdateContactDescriptor() {}","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        public UpdateContactDescriptor(UpdateContactDescriptor toCopy) {","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"lirc572"},"content":"            if (!(other instanceof UpdateContactDescriptor)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"lirc572"},"content":"            UpdateContactDescriptor e \u003d (UpdateContactDescriptor) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"lirc572":45,"-":175,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/logic/commands/UpdateDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":" * Updates an deadline inside a project.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateDeadlineCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"updateD\";","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the deadline of a project \"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            + \"identified by 2 index numbers: project index and deadline index.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"DEADLINE_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"            + \"[\" + PREFIX_DEADLINE_DATE + \"DATE]\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_DESCRIPTION + \"Submission deadline\";","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UPDATE_DEADLINE_SUCCESS \u003d \"Updated deadline: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_DUPLICATE_DEADLINE \u003d \"This deadline already exists in this project.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    private final Index targetDeadlineIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"    private final UpdateDeadlineDescriptor updateDeadlineDescriptor;","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"     * Constructs an {@code updateDeadlineCommand} with a {@code projectIndex},","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"     * {@code targetDeadlineIndex} and a {@code Deadline}.","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"     * @param projectIndex index of the project in the filtered project list.","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"     * @param targetDeadlineIndex index of the {@code Deadline} in the {@code Deadline} to update.","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"     * @param updateDeadlineDescriptor details to update Deadline with.","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateDeadlineCommand(Index projectIndex, Index targetDeadlineIndex,","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"                                 UpdateDeadlineDescriptor updateDeadlineDescriptor) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(projectIndex, targetDeadlineIndex, updateDeadlineDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"        this.targetDeadlineIndex \u003d targetDeadlineIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"        this.updateDeadlineDescriptor \u003d new UpdateDeadlineDescriptor(updateDeadlineDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToUpdate \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"        DeadlineList deadlineList \u003d projectToUpdate.getDeadlines();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        if (targetDeadlineIndex.getZeroBased() \u003e\u003d deadlineList.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        CompletableDeadline deadlineToUpdate \u003d deadlineList.getDeadline(targetDeadlineIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"        CompletableDeadline updatedDeadline \u003d createUpdatedDeadline(deadlineToUpdate, updateDeadlineDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"        if (deadlineList.hasDeadline(updatedDeadline) \u0026\u0026 !deadlineToUpdate.equals(updatedDeadline)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_DEADLINE);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        if (deadlineList.checkIsDone(targetDeadlineIndex.getZeroBased())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            updatedDeadline.markAsDone();","lastModifiedDate":"2021-04-05"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.setDeadline(targetDeadlineIndex.getZeroBased(), updatedDeadline);","lastModifiedDate":"2021-04-05"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_DEADLINE_SUCCESS, updatedDeadline),","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(projectIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"     * Creates and returns a {@code Deadline} with the details of {@code deadlineToUpdate}","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"     * edited with {@code updateDeadlineDescriptor}.","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"Eriksen2411"},"content":"    private static CompletableDeadline createUpdatedDeadline(CompletableDeadline deadlineToUpdate,","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"Eriksen2411"},"content":"                                                             UpdateDeadlineDescriptor updateDeadlineDescriptor) {","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"Eriksen2411"},"content":"        assert deadlineToUpdate !\u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"Eriksen2411"},"content":"        String updatedDescription \u003d updateDeadlineDescriptor.getDescription().orElse(deadlineToUpdate.getDescription());","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"Eriksen2411"},"content":"        LocalDate updatedDate \u003d updateDeadlineDescriptor.getDate().orElse(deadlineToUpdate.getBy());","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":109,"author":{"gitId":"Eriksen2411"},"content":"        return new Deadline(updatedDescription, updatedDate);","lastModifiedDate":"2021-03-27"},{"lineNumber":110,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":111,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":114,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof UpdateDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 projectIndex.equals(((UpdateDeadlineCommand) other).projectIndex) // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 targetDeadlineIndex.equals(((UpdateDeadlineCommand) other).targetDeadlineIndex)","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 updateDeadlineDescriptor.equals(((UpdateDeadlineCommand) other).updateDeadlineDescriptor));","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"Eriksen2411"},"content":"     * Stores the details to edit the {@code Deadline} with. Each non-empty field value will replace the","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"Eriksen2411"},"content":"     * corresponding field value of the {@code Deadline}.","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"Eriksen2411"},"content":"    public static class UpdateDeadlineDescriptor {","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"Eriksen2411"},"content":"        private String description;","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"Eriksen2411"},"content":"        private LocalDate date;","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"Eriksen2411"},"content":"        public UpdateDeadlineDescriptor() {}","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"Eriksen2411"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"Eriksen2411"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"Eriksen2411"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"Eriksen2411"},"content":"        public UpdateDeadlineDescriptor(UpdateDeadlineDescriptor toCopy) {","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"Eriksen2411"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"Eriksen2411"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"Eriksen2411"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"Eriksen2411"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"Eriksen2411"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"Eriksen2411"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-27"},{"lineNumber":143,"author":{"gitId":"Eriksen2411"},"content":"            return CollectionUtil.isAnyNonNull(description, date);","lastModifiedDate":"2021-03-27"},{"lineNumber":144,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"Eriksen2411"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"Eriksen2411"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"Eriksen2411"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"Eriksen2411"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"Eriksen2411"},"content":"        public void setDate(LocalDate date) {","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"Eriksen2411"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"Eriksen2411"},"content":"        public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"Eriksen2411"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"Eriksen2411"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"Eriksen2411"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"Eriksen2411"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"Eriksen2411"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"                return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"Eriksen2411"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"Eriksen2411"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"Eriksen2411"},"content":"            if (!(other instanceof UpdateDeadlineDescriptor)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"Eriksen2411"},"content":"                return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"Eriksen2411"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"Eriksen2411"},"content":"            // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"Eriksen2411"},"content":"            UpdateDeadlineDescriptor e \u003d (UpdateDeadlineDescriptor) other;","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"Eriksen2411"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"Eriksen2411"},"content":"                    \u0026\u0026 getDate().equals(e.getDate());","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Eriksen2411":165,"samuelfangjw":16}},{"path":"src/main/java/seedu/address/logic/commands/UpdateEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":" * Updates an event inside a project.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateEventCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"updateE\";","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the event of a project\"","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            + \"identified by 2 index numbers: project index and event index.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"EVENT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION] \"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            + \"[\" + PREFIX_EVENT_DATE + \"DATE] \"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"            + \"[\" + PREFIX_EVENT_TIME + \"TIME]\"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            + \"[\" + PREFIX_EVENT_WEEKLY + \"REPEATS_WEEKLY]\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_DESCRIPTION + \"Project meeting \"","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_DATE + \"24-04-2021 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_TIME + \"1830 \"","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"            + PREFIX_EVENT_WEEKLY + \"N\";","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UPDATE_EVENT_SUCCESS \u003d \"Updated event: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in this project.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"    private final UpdateEventDescriptor updateEventDescriptor;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"     * Constructs an {@code updateEventCommand} with a {@code projectIndex}.","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"     * {@code targetEventIndex} and an {@code Event}.","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"     * @param projectIndex     index of the project in the filtered project list.","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"     * @param targetEventIndex index of the {@code Event} in the {@code EventList} to update.","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"     * @param updateEventDescriptor details to edit {@code Event} with.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateEventCommand(Index projectIndex, Index targetEventIndex, UpdateEventDescriptor updateEventDescriptor) {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(projectIndex, targetEventIndex, updateEventDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"        this.updateEventDescriptor \u003d new UpdateEventDescriptor(updateEventDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToUpdate \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"        EventList events \u003d projectToUpdate.getEvents();","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d events.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToUpdate \u003d events.getEvent(targetEventIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"        Event updatedEvent \u003d createUpdatedEvent(eventToUpdate, updateEventDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"        if (events.hasEvent(updatedEvent) \u0026\u0026 !eventToUpdate.equals(updatedEvent)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"        projectToUpdate.setEvent(targetEventIndex.getZeroBased(), updatedEvent);","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_EVENT_SUCCESS, updatedEvent),","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(projectIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToUpdate}","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"Eriksen2411"},"content":"     * edited with {@code updatedEventDescriptor}.","lastModifiedDate":"2021-03-27"},{"lineNumber":103,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":104,"author":{"gitId":"Eriksen2411"},"content":"    private static Event createUpdatedEvent(Event eventToEdit, UpdateEventDescriptor updateEventDescriptor) {","lastModifiedDate":"2021-03-27"},{"lineNumber":105,"author":{"gitId":"Eriksen2411"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":106,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":107,"author":{"gitId":"Eriksen2411"},"content":"        String updatedDescription \u003d updateEventDescriptor.getDescription().orElse(eventToEdit.getDescription());","lastModifiedDate":"2021-03-27"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"        LocalDate updatedDate \u003d updateEventDescriptor.getDate().orElse(eventToEdit.getDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"        LocalTime updatedTime \u003d updateEventDescriptor.getTime().orElse(eventToEdit.getTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        Boolean updatedIsWeekly \u003d updateEventDescriptor.getIsWeekly().orElse(eventToEdit.getIsWeekly());","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":112,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"        return new Event(updatedDescription, updatedDate, updatedTime, updatedIsWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":115,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":116,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":117,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":118,"author":{"gitId":"Eriksen2411"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":119,"author":{"gitId":"Eriksen2411"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"Eriksen2411"},"content":"            return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":121,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":123,"author":{"gitId":"Eriksen2411"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":124,"author":{"gitId":"Eriksen2411"},"content":"        if (!(other instanceof UpdateEventCommand)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":125,"author":{"gitId":"Eriksen2411"},"content":"            return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":126,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":127,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":128,"author":{"gitId":"Eriksen2411"},"content":"        // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":129,"author":{"gitId":"Eriksen2411"},"content":"        UpdateEventCommand e \u003d (UpdateEventCommand) other;","lastModifiedDate":"2021-03-27"},{"lineNumber":130,"author":{"gitId":"Eriksen2411"},"content":"        return projectIndex.equals(e.projectIndex)","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 targetEventIndex.equals(e.targetEventIndex)","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 updateEventDescriptor.equals(e.updateEventDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"Eriksen2411"},"content":"     * Stores the details to update the {@code Event}. Each non-empty field value will replace the","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"Eriksen2411"},"content":"     * corresponding field value of the {@code Event}.","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"Eriksen2411"},"content":"    public static class UpdateEventDescriptor {","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"Eriksen2411"},"content":"        private String description;","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"Eriksen2411"},"content":"        private LocalDate date;","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"        private LocalTime time;","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"        private Boolean isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":145,"author":{"gitId":"Eriksen2411"},"content":"        public UpdateEventDescriptor() {}","lastModifiedDate":"2021-03-27"},{"lineNumber":146,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":147,"author":{"gitId":"Eriksen2411"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":148,"author":{"gitId":"Eriksen2411"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-27"},{"lineNumber":149,"author":{"gitId":"Eriksen2411"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-27"},{"lineNumber":150,"author":{"gitId":"Eriksen2411"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":151,"author":{"gitId":"Eriksen2411"},"content":"        public UpdateEventDescriptor(UpdateEventDescriptor toCopy) {","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"Eriksen2411"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"Eriksen2411"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"            setTime(toCopy.time);","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"            setIsWeekly(toCopy.isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"Eriksen2411"},"content":"        /**","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"Eriksen2411"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"Eriksen2411"},"content":"         */","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"Eriksen2411"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"vevek"},"content":"            return CollectionUtil.isAnyNonNull(description, date, time, isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"Eriksen2411"},"content":"        public void setDescription(String description) {","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"Eriksen2411"},"content":"        public Optional\u003cString\u003e getDescription() {","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"Eriksen2411"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":171,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"Eriksen2411"},"content":"        public void setDate(LocalDate date) {","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"Eriksen2411"},"content":"            this.date \u003d date;","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"Eriksen2411"},"content":"        public Optional\u003cLocalDate\u003e getDate() {","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"Eriksen2411"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"vevek"},"content":"        public void setTime(LocalTime time) {","lastModifiedDate":"2021-03-29"},{"lineNumber":182,"author":{"gitId":"vevek"},"content":"            this.time \u003d time;","lastModifiedDate":"2021-03-29"},{"lineNumber":183,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":185,"author":{"gitId":"vevek"},"content":"        public Optional\u003cLocalTime\u003e getTime() {","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"vevek"},"content":"            return Optional.ofNullable(time);","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"vevek"},"content":"        public void setIsWeekly(Boolean isWeekly) {","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"vevek"},"content":"            this.isWeekly \u003d isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"vevek"},"content":"        public Optional\u003cBoolean\u003e getIsWeekly() {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"vevek"},"content":"            return Optional.ofNullable(isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"Eriksen2411"},"content":"        @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":198,"author":{"gitId":"Eriksen2411"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":199,"author":{"gitId":"Eriksen2411"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":200,"author":{"gitId":"Eriksen2411"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-27"},{"lineNumber":201,"author":{"gitId":"Eriksen2411"},"content":"                return true;","lastModifiedDate":"2021-03-27"},{"lineNumber":202,"author":{"gitId":"Eriksen2411"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":203,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":204,"author":{"gitId":"Eriksen2411"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":205,"author":{"gitId":"Eriksen2411"},"content":"            if (!(other instanceof UpdateEventDescriptor)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":206,"author":{"gitId":"Eriksen2411"},"content":"                return false;","lastModifiedDate":"2021-03-27"},{"lineNumber":207,"author":{"gitId":"Eriksen2411"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":208,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":209,"author":{"gitId":"Eriksen2411"},"content":"            // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":210,"author":{"gitId":"Eriksen2411"},"content":"            UpdateEventDescriptor e \u003d (UpdateEventDescriptor) other;","lastModifiedDate":"2021-03-27"},{"lineNumber":211,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":212,"author":{"gitId":"Eriksen2411"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2021-03-27"},{"lineNumber":213,"author":{"gitId":"vevek"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"vevek"},"content":"                    \u0026\u0026 getTime().equals(e.getTime())","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"vevek"},"content":"                    \u0026\u0026 getIsWeekly().equals(e.getIsWeekly());","lastModifiedDate":"2021-03-30"},{"lineNumber":216,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":217,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":218,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"vevek":37,"Eriksen2411":168,"samuelfangjw":13}},{"path":"src/main/java/seedu/address/logic/commands/UpdateGroupmateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Name;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.GroupmateList;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":" * Updates an groupmate inside a project.","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"public class UpdateGroupmateCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"updateG\";","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the groupmate of a project \"","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            + \"identified by 2 index numbers: project index and groupmates index.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"GROUPMATE_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE]\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"            + PREFIX_NAME + \"Alice \"","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"            + PREFIX_ROLE + \"UI-designer\";","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UPDATE_GROUPMATE_SUCCESS \u003d \"Updated groupmate: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DUPLICATE_GROUPMATE \u003d \"This groupmate already exists in this project.\";","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    private final Index targetGroupmateIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    private final UpdateGroupmateDescriptor updateGroupmateDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Constructs an {@code UpdateGroupmateDescriptor} with a {@code projectIndex}.","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * {@code targetGroupmateIndex} and an {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     * @param projectIndex     index of the project in the filtered project list.","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     * @param targetGroupmateIndex index of the {@code Groupmate} in the {@code GroupmateList} to update.","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"     * @param updateGroupmateDescriptor details to edit {@code Groupmate} with.","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    public UpdateGroupmateCommand(Index projectIndex, Index targetGroupmateIndex,","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                                  UpdateGroupmateDescriptor updateGroupmateDescriptor) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(projectIndex, targetGroupmateIndex, updateGroupmateDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        this.targetGroupmateIndex \u003d targetGroupmateIndex;","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        this.updateGroupmateDescriptor \u003d new UpdateGroupmateDescriptor(updateGroupmateDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        Project projectToUpdate \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmates \u003d projectToUpdate.getGroupmates();","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        if (targetGroupmateIndex.getZeroBased() \u003e\u003d groupmates.size()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        Groupmate groupmateToUpdate \u003d groupmates.get(targetGroupmateIndex.getZeroBased());","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        Groupmate updatedGroupmate \u003d createUpdatedGroupmate(groupmateToUpdate, updateGroupmateDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        if (groupmates.contains(updatedGroupmate) \u0026\u0026 !groupmateToUpdate.isSameGroupmate(updatedGroupmate)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUPMATE);","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        projectToUpdate.setGroupmate(targetGroupmateIndex.getZeroBased(), updatedGroupmate);","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_GROUPMATE_SUCCESS, updatedGroupmate),","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(projectIndex));","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"     * Creates and returns a {@code Groupmate} with the details of {@code groupmateToUpdate}","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"     * edited with {@code updatedGroupmateDescriptor}.","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    private static Groupmate createUpdatedGroupmate(Groupmate groupmateToUpdate,","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"                                                    UpdateGroupmateDescriptor updateGroupmateDescriptor) {","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        assert groupmateToUpdate !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        Name updatedName \u003d updateGroupmateDescriptor.getName().orElse(groupmateToUpdate.getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        Set\u003cRole\u003e updatedRoles \u003d updateGroupmateDescriptor.getRoles().orElse(groupmateToUpdate.getRoles());","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        return new Groupmate(updatedName, updatedRoles);","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        if (!(other instanceof UpdateGroupmateCommand)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"        // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"        UpdateGroupmateCommand command \u003d (UpdateGroupmateCommand) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        return projectIndex.equals(command.projectIndex)","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 targetGroupmateIndex.equals(command.targetGroupmateIndex)","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 updateGroupmateDescriptor.equals(command.updateGroupmateDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"     * Stores the details to update the {@code Groupmate}. Each non-empty field value will replace the","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"     * corresponding field value of the {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"    public static class UpdateGroupmateDescriptor {","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"        private Name name;","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"        private Set\u003cRole\u003e roles;","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"        public UpdateGroupmateDescriptor() {}","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        /**","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"         * Copy constructor.","lastModifiedDate":"2021-03-30"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"         */","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"        public UpdateGroupmateDescriptor(UpdateGroupmateDescriptor toCopy) {","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"            setName(toCopy.name);","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"            setRoles(toCopy.roles);","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"        /**","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"         */","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"            return CollectionUtil.isAnyNonNull(name, roles);","lastModifiedDate":"2021-03-30"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        public void setName(Name name) {","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"            this.name \u003d name;","lastModifiedDate":"2021-03-30"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2021-03-30"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"        /**","lastModifiedDate":"2021-03-30"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2021-03-30"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-03-30"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"         */","lastModifiedDate":"2021-03-30"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        public void setRoles(Set\u003cRole\u003e roles) {","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"            this.roles \u003d (roles !\u003d null) ? new HashSet\u003c\u003e(roles) : null;","lastModifiedDate":"2021-03-30"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        /**","lastModifiedDate":"2021-03-30"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-30"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-03-30"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-03-30"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"         */","lastModifiedDate":"2021-03-30"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        public Optional\u003cSet\u003cRole\u003e\u003e getRoles() {","lastModifiedDate":"2021-03-30"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"            return (roles !\u003d null) ? Optional.of(Collections.unmodifiableSet(roles)) : Optional.empty();","lastModifiedDate":"2021-03-30"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"        @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"            // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"                return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"            if (!(other instanceof UpdateGroupmateDescriptor)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"                return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"            // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"            UpdateGroupmateDescriptor e \u003d (UpdateGroupmateDescriptor) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2021-03-30"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"                    \u0026\u0026 getRoles().equals(e.getRoles());","lastModifiedDate":"2021-03-30"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"lirc572":189,"samuelfangjw":11}},{"path":"src/main/java/seedu/address/logic/commands/UpdateProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.GroupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":" * Updates the name of a project in the project list.","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateProjectCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"updateP\";","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the name of the project specified \"","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + \"by the index number used in the side panel.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_NAME + \"PROJECT_NAME\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            + COMMAND_WORD + \" 1 \" + PREFIX_NAME + \"CS2102 Group Project\";","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UPDATE_PROJECT_SUCCESS \u003d \"Updated Project: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DUPLICATE_NAME \u003d \"This project already exists in CoLAB.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"    private final ProjectName name;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"     * Constructs an {@code UpdateProjectCommand} with an {@code index} and a {@code name}.","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"     * @param targetIndex the index of the project in the filtered project list to update.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"     * @param name new name for the project.","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateProjectCommand(Index targetIndex, ProjectName name) {","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(targetIndex, name);","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToEdit \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"        for (Project project : lastShownList) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"            if (project.getProjectName().equals(name) \u0026\u0026 !projectToEdit.getProjectName().equals(name)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_NAME);","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"            }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"        Project updatedProject \u003d createUpdatedProject(projectToEdit, name);","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        model.setProject(projectToEdit, updatedProject);","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_PROJECT_SUCCESS, updatedProject.getProjectName()),","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(targetIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"     * Creates and returns a {@code Project} with the details of {@code projectToEdit}","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"     * updated with {@code name}.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"    private static Project createUpdatedProject(Project projectToEdit, ProjectName name) {","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"        EventList currEventList \u003d projectToEdit.getEvents();","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        TodoList currTodoList \u003d projectToEdit.getTodos();","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"        DeadlineList currDeadlineList \u003d projectToEdit.getDeadlines();","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        GroupmateList currGroupmateList \u003d projectToEdit.getGroupmates();","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        return new Project(name, currEventList, currTodoList, currDeadlineList, currGroupmateList);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof UpdateProjectCommand // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 targetIndex.equals(((UpdateProjectCommand) other).targetIndex))","lastModifiedDate":"2021-03-27"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 name.equals(((UpdateProjectCommand) other).name); // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":102,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"lirc572":3,"Eriksen2411":90,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/logic/commands/UpdateTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndTodosUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":" * Updates an todo inside a project.","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateTodoCommand extends Command {","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"updateT\";","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Updates the todo of a project \"","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            + \"identified by 2 index numbers: project index and todo index.\\n\"","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: PROJECT_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"TODO_INDEX \"","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION\\n\"","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_INDEX + \"1 \"","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_DESCRIPTION + \"Finish UI\";","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UPDATE_TODO_SUCCESS \u003d \"Updated todo: %1$s\";","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This todo already exists in this project.\";","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"    private final Index targetTodoIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"    private final CompletableTodo todo;","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"     * Constructs an {@code updateTodoCommand} with a {@code projectIndex},","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"     * {@code targetTodoIndex} and a {@code Todo}.","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"     * @param projectIndex index of the project in the filtered project list.","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"     * @param targetTodoIndex index of the {@code Todo} in the {@code TodoList} to update.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"     * @param todo new {@code Todo} given for updating.","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateTodoCommand(Index projectIndex, Index targetTodoIndex, CompletableTodo todo) {","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(projectIndex, targetTodoIndex, todo);","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"        this.targetTodoIndex \u003d targetTodoIndex;","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        Project projectRelated \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        TodoList todos \u003d projectRelated.getTodos();","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        if (targetTodoIndex.getZeroBased() \u003e\u003d todos.size()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        if (todos.hasTodo(todo) \u0026\u0026 !todos.getTodo(targetTodoIndex.getZeroBased()).equals(todo)) {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"        if (todos.checkIsDone(targetTodoIndex.getZeroBased())) {","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            todo.markAsDone();","lastModifiedDate":"2021-04-05"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        todos.setTodo(targetTodoIndex.getZeroBased(), todo);","lastModifiedDate":"2021-04-05"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-05"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_UPDATE_TODO_SUCCESS, todo),","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndTodosUiCommand(projectIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-27"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-27"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-27"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof UpdateTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-27"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 projectIndex.equals(((UpdateTodoCommand) other).projectIndex) // state check","lastModifiedDate":"2021-03-27"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 targetTodoIndex.equals(((UpdateTodoCommand) other).targetTodoIndex)","lastModifiedDate":"2021-03-27"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 todo.equals(((UpdateTodoCommand) other).todo));","lastModifiedDate":"2021-03-27"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Eriksen2411":81,"samuelfangjw":16}},{"path":"src/main/java/seedu/address/logic/commands/ViewContactsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * Shows all Contacts in the contact list to the user.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ViewContactsCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"contacts\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing All Contacts.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, new ShowContactsUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":2,"-":17,"samuelfangjw":6}},{"path":"src/main/java/seedu/address/logic/commands/ViewOverviewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowOverviewTabUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Show overview of a Project.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ViewOverviewCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"overview\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the overview of an open project.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Overview of a Project.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, new ShowOverviewTabUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":24}},{"path":"src/main/java/seedu/address/logic/commands/ViewProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * View Project in CoLAB.","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"project\";","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the project identified by the index number used in the displayed projects list.\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Project: %s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a ViewProjectCommand to view the {@code Project} at the specified {@code index}.","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public ViewProjectCommand(Index index) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                lastShownList.get(index.getZeroBased()).getProjectName()), new ViewProjectAndOverviewUiCommand(index))","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                    .setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":47}},{"path":"src/main/java/seedu/address/logic/commands/ViewTodayCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Show Today panel.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ViewTodayCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"today\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the today panel.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Today Panel.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, new ShowTodayUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":24}},{"path":"src/main/java/seedu/address/logic/commands/ViewTodosCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodosTabUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Show all todos of a Project.","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ViewTodosCommand extends Command {","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"todos\";","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the todos of an open project.\\n\"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Todos of a Project.\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, new ShowTodosTabUiCommand()).setIgnoreHistory(true);","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":24}},{"path":"src/main/java/seedu/address/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        Name name \u003d ParserUtil.parseContactName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        Contact contact \u003d new Contact(name, phone, email, address, tagList);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        return new AddContactCommand(contact);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"lirc572":12,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/AddDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new AddDeadlineCommand object.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommandParser implements Parser\u003cAddDeadlineCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDeadlineCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * and returns an AddDeadlineCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    public AddDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DEADLINE_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_DEADLINE_DATE)","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        Index deadlineIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            deadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        LocalDate by \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE_DATE).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        return new AddDeadlineCommand(deadlineIndex, deadline);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":53,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new AddEventCommand object.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_EVENT_DATE,","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"                        PREFIX_EVENT_TIME, PREFIX_EVENT_WEEKLY);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_EVENT_DATE, PREFIX_EVENT_TIME,","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"                PREFIX_EVENT_WEEKLY)","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        LocalDate date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_EVENT_DATE).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        LocalTime time \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_EVENT_TIME).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        Boolean isWeekly \u003d ParserUtil.parseIsWeekly(argMultimap.getValue(PREFIX_EVENT_WEEKLY).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        Event event \u003d new Event(description, date, time, isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"        return new AddEventCommand(projectIndex, event);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":15,"Eriksen2411":43,"samuelfangjw":10}},{"path":"src/main/java/seedu/address/logic/parser/AddGroupmateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"public class AddGroupmateCommandParser implements Parser\u003cAddGroupmateCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContactToCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     * and returns an AddContactToCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public AddGroupmateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_ROLE);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupmateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        Name name \u003d ParserUtil.parseGroupmateName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        Set\u003cRole\u003e roleList \u003d ParserUtil.parseRoles(argMultimap.getAllValues(PREFIX_ROLE));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        Groupmate contact \u003d new Groupmate(name, roleList);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        return new AddGroupmateCommand(projectIndex, contact);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":52,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/logic/parser/AddProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Parses input arguments and creates a new AddProjectCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class AddProjectCommandParser implements Parser\u003cAddProjectCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Parses the given {@code String} of arguments in the context of the AddProjectCommand","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * and returns an AddProjectCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public AddProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d new Project(projectName);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return new AddProjectCommand(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":47}},{"path":"src/main/java/seedu/address/logic/parser/AddTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new AddTodoCommand object.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class AddTodoCommandParser implements Parser\u003cAddTodoCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTodoCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * and returns an AddTodoCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public AddTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        Index todoIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            todoIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        return new AddTodoCommand(todoIndex, todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":49,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkTodoCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateDeadlineCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateEventCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateGroupmateCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateTodoCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewContactsCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewOverviewCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodayCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodosCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        case AddProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            return new AddProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        case AddGroupmateCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"            return new AddGroupmateCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"            return new AddDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"            return new AddTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        case UpdateContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"            return new UpdateContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        case DeleteGroupmateCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"            return new DeleteGroupmateCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"        case DeleteProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"            return new DeleteProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        case DeleteDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"            return new DeleteDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"        case DeleteTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"            return new DeleteTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        case FindContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"            return new FindContactCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        case ViewContactsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewContactsCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"        case MarkDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"            return new MarkDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"        case MarkTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"            return new MarkTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":130,"author":{"gitId":"Eriksen2411"},"content":"        case UpdateTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":131,"author":{"gitId":"Eriksen2411"},"content":"            return new UpdateTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":132,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":133,"author":{"gitId":"Eriksen2411"},"content":"        case UpdateDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":134,"author":{"gitId":"Eriksen2411"},"content":"            return new UpdateDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":135,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":136,"author":{"gitId":"Eriksen2411"},"content":"        case UpdateEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":137,"author":{"gitId":"Eriksen2411"},"content":"            return new UpdateEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":138,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":139,"author":{"gitId":"Eriksen2411"},"content":"        case UpdateProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-27"},{"lineNumber":140,"author":{"gitId":"Eriksen2411"},"content":"            return new UpdateProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-27"},{"lineNumber":141,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"        case UpdateGroupmateCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"            return new UpdateGroupmateCommandParser().parse(arguments);","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        case ViewProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        case ViewOverviewCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewOverviewCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"        case ViewTodosCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewTodosCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        case ViewTodayCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-30"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewTodayCommand();","lastModifiedDate":"2021-03-30"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"            return new UndoCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"            return new RedoCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":24,"vevek":28,"Eriksen2411":21,"-":64,"samuelfangjw":31}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_DEADLINE_DATE \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_EVENT_DATE \u003d new Prefix(\"on/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_EVENT_TIME \u003d new Prefix(\"at/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_EVENT_WEEKLY \u003d new Prefix(\"w/\");","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public static final Prefix PREFIX_MARK_TASK_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lirc572":1,"vevek":5,"-":14,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lirc572":5,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteDeadlineCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class DeleteDeadlineCommandParser implements Parser\u003cDeleteDeadlineCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDeadlineCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * and returns a DeleteDeadlineCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public DeleteDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"                    DeleteDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            Index targetDeadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            return new DeleteDeadlineCommand(projectIndex, targetDeadlineIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":41,"samuelfangjw":18}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            Index targetEventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            return new DeleteEventCommand(projectIndex, targetEventIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":42,"samuelfangjw":18}},{"path":"src/main/java/seedu/address/logic/parser/DeleteGroupmateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":" * Parses input arguments and creates a new DeleteContactFromCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class DeleteGroupmateCommandParser implements Parser\u003cDeleteGroupmateCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteContactFromCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * and returns a DeleteContactFromCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    public DeleteGroupmateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupmateCommand.MESSAGE_USAGE)","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            );","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"            Index targetGroupmateIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            return new DeleteGroupmateCommand(projectIndex, targetGroupmateIndex);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":43,"samuelfangjw":17}},{"path":"src/main/java/seedu/address/logic/parser/DeleteProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteProjectCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommandParser implements Parser\u003cDeleteProjectCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteProjectCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"     * and returns a DeleteProjectCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"    public DeleteProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"            return new DeleteProjectCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":3,"Eriksen2411":24,"samuelfangjw":6}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteTodoCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommandParser implements Parser\u003cDeleteTodoCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTodoCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * and returns a DeleteTodoCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public DeleteTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_INDEX);","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            Index targetTodoIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"            return new DeleteTodoCommand(projectIndex, targetTodoIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_TODO_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":41,"samuelfangjw":17}},{"path":"src/main/java/seedu/address/logic/parser/FindContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class FindContactCommandParser implements Parser\u003cFindContactCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    public FindContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        return new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lirc572":6,"-":27}},{"path":"src/main/java/seedu/address/logic/parser/MarkDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new MarkDeadlineCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class MarkDeadlineCommandParser implements Parser\u003cMarkDeadlineCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkDeadlineCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * and returns a MarkDeadlineCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public MarkDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MARK_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MARK_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"            Index targetDeadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MARK_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            return new MarkDeadlineCommand(index, targetDeadlineIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":51,"samuelfangjw":8}},{"path":"src/main/java/seedu/address/logic/parser/MarkTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkTodoCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new MarkTodoCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"public class MarkTodoCommandParser implements Parser\u003cMarkTodoCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTodoCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * and returns a MarkTodoCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public MarkTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MARK_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MARK_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"            Index targetTodoIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MARK_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            return new MarkTodoCommand(index, targetTodoIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_TODO_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":51,"samuelfangjw":8}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The index provided is invalid. \"","lastModifiedDate":"2021-04-01"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            + \"Index should be a non-negative integer.\";","lastModifiedDate":"2021-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     * Parses a {@code String name} into a {@code seedu.address.model.contact.Name}.","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public static Name parseContactName(String name) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"     * Parses a {@code String name} into a {@code seedu.address.model.groupmate.Name}.","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    public static seedu.address.model.groupmate.Name parseGroupmateName(String name) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        return new seedu.address.model.groupmate.Name(trimmedName);","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"     * Parses a {@code String role} into a {@code Role}.","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the given {@code role} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        requireNonNull(role);","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"        if (!Role.isValidRoleName(trimmedRole)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"     * Parses {@code Collection\u003cString\u003e roles} into a {@code Set\u003cRole\u003e}.","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"    public static Set\u003cRole\u003e parseRoles(Collection\u003cString\u003e roles) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"        requireNonNull(roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"        final Set\u003cRole\u003e roleSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        for (String roleName : roles) {","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"            roleSet.add(parseRole(roleName));","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        return roleSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"     * Parses a {@code String name} into a {@code ProjectName}.","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-10"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-10"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    public static ProjectName parseProjectName(String name) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-10"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-03-10"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"        if (!ProjectName.isValidProjectName(trimmedName)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(ProjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"        return new ProjectName(trimmedName);","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":192,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"Eriksen2411"},"content":"     * Parses a {@code String description} into a {@code description}.","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"Eriksen2411"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":199,"author":{"gitId":"Eriksen2411"},"content":"    public static String parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"Eriksen2411"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"vevek"},"content":"        if (!trimmedDescription.matches(\"[^\\\\s].*\")) {","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"vevek"},"content":"            throw new ParseException(Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"Eriksen2411"},"content":"        return trimmedDescription;","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"Eriksen2411"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"Eriksen2411"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the given {@code LocalDate} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":213,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"Eriksen2411"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"Eriksen2411"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"Eriksen2411"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"Eriksen2411"},"content":"            return DateUtil.encodeDate(trimmedDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"Eriksen2411"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-03-26"},{"lineNumber":221,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"vevek"},"content":"     * Parses a {@code String isWeekly} into a {@code Boolean}.","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"vevek"},"content":"     * {@code String isWeekly} should be one of: \u0027Y\u0027, \u0027N\u0027, \u0027y\u0027 or \u0027n\u0027.","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"vevek"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the given {@code isWeekly} is invalid.","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"vevek"},"content":"    public static Boolean parseIsWeekly(String isWeekly) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"vevek"},"content":"        requireNonNull(isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"vevek"},"content":"        String trimmedIsWeekly \u003d isWeekly.trim();","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"vevek"},"content":"        if (trimmedIsWeekly.equalsIgnoreCase(\"Y\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"vevek"},"content":"        } else if (trimmedIsWeekly.equalsIgnoreCase(\"N\")) {","lastModifiedDate":"2021-03-30"},{"lineNumber":238,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"vevek"},"content":"        } else {","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"vevek"},"content":"            throw new ParseException(Messages.MESSAGE_PARSER_WEEKLY_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"vevek"},"content":"     * Parses a {@code String time} into a {@code LocalTime}.","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"vevek"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-28"},{"lineNumber":247,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-28"},{"lineNumber":248,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the given {@code LocalTime} is invalid.","lastModifiedDate":"2021-03-28"},{"lineNumber":249,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":250,"author":{"gitId":"vevek"},"content":"    public static LocalTime parseTime(String time) throws ParseException {","lastModifiedDate":"2021-03-28"},{"lineNumber":251,"author":{"gitId":"vevek"},"content":"        requireNonNull(time);","lastModifiedDate":"2021-03-28"},{"lineNumber":252,"author":{"gitId":"vevek"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2021-03-28"},{"lineNumber":253,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-28"},{"lineNumber":254,"author":{"gitId":"vevek"},"content":"            return TimeUtil.encodeTime(trimmedTime);","lastModifiedDate":"2021-03-28"},{"lineNumber":255,"author":{"gitId":"vevek"},"content":"        } catch (TimeConversionException e) {","lastModifiedDate":"2021-03-28"},{"lineNumber":256,"author":{"gitId":"vevek"},"content":"            throw new ParseException(e.getMessage());","lastModifiedDate":"2021-03-28"},{"lineNumber":257,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":258,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":259,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lirc572":49,"vevek":44,"Eriksen2411":31,"-":117,"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/parser/UpdateContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"public class UpdateContactCommandParser implements Parser\u003cUpdateContactCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public UpdateContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        if (argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor updateContactDescriptor \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                new UpdateContactCommand.UpdateContactDescriptor();","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"            updateContactDescriptor.setName(ParserUtil.parseContactName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"            updateContactDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"            updateContactDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"            updateContactDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(updateContactDescriptor::setTags);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        if (!updateContactDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(UpdateContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        return new UpdateContactCommand(index, updateContactDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"lirc572":13,"-":68,"samuelfangjw":6}},{"path":"src/main/java/seedu/address/logic/parser/UpdateDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateDeadlineCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":" * Parses input arguments and creates a new UpdateDeadlineCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateDeadlineCommandParser implements Parser\u003cUpdateDeadlineCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code UpdateDeadlineCommand}.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"     * and returns an {@code UpdateDeadlineCommand} object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                PREFIX_INDEX, PREFIX_DESCRIPTION, PREFIX_DEADLINE_DATE);","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        Index targetDeadlineIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            targetDeadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"        UpdateDeadlineCommand.UpdateDeadlineDescriptor updateDeadlineDescriptor \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"                new UpdateDeadlineCommand.UpdateDeadlineDescriptor();","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"            updateDeadlineDescriptor.setDescription(ParserUtil","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"                    .parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE_DATE).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"            updateDeadlineDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE_DATE).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        if (!updateDeadlineDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(UpdateContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"        return new UpdateDeadlineCommand(projectIndex, targetDeadlineIndex, updateDeadlineDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given.","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"lirc572":2,"Eriksen2411":56,"samuelfangjw":20}},{"path":"src/main/java/seedu/address/logic/parser/UpdateEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateEventCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":" * Parses input arguments and creates a new UpdateEventCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateEventCommandParser implements Parser\u003cUpdateEventCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code UpdateEventCommand}.","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"     * and returns an {@code UpdateEventCommand} object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_DESCRIPTION,","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"                PREFIX_EVENT_DATE, PREFIX_EVENT_TIME, PREFIX_EVENT_WEEKLY);","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        Index targetEventIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            targetEventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"        UpdateEventCommand.UpdateEventDescriptor updateEventDescriptor \u003d new UpdateEventCommand.UpdateEventDescriptor();","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"            updateEventDescriptor.setDescription(","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_DATE).isPresent()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            updateEventDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_EVENT_DATE).get()));","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_TIME).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"            updateEventDescriptor.setTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_EVENT_TIME).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        if (argMultimap.getValue(PREFIX_EVENT_WEEKLY).isPresent()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"            updateEventDescriptor.setIsWeekly(","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                    ParserUtil.parseIsWeekly(argMultimap.getValue(PREFIX_EVENT_WEEKLY).get()));","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        if (!updateEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(UpdateContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"        return new UpdateEventCommand(projectIndex, targetEventIndex, updateEventDescriptor);","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given.","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"lirc572":2,"vevek":10,"Eriksen2411":52,"samuelfangjw":23}},{"path":"src/main/java/seedu/address/logic/parser/UpdateGroupmateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateGroupmateCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":" * Parses input arguments and creates a new UpdateGroupmateCommand object","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"public class UpdateGroupmateCommandParser implements Parser\u003cUpdateGroupmateCommand\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code UpdateGroupmateCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     * and returns an {@code UpdateGroupmateCommand} object for execution.","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    public UpdateGroupmateCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_NAME,","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"                PREFIX_ROLE);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"                    UpdateGroupmateCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        Index targetGroupmateIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            targetGroupmateIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        UpdateGroupmateCommand.UpdateGroupmateDescriptor updateGroupmateDescriptor \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                new UpdateGroupmateCommand.UpdateGroupmateDescriptor();","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            updateGroupmateDescriptor.setName(","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"                    ParserUtil.parseGroupmateName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        parseRolesForEdit(argMultimap.getAllValues(PREFIX_ROLE)).ifPresent(updateGroupmateDescriptor::setRoles);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        if (!updateGroupmateDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(UpdateContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        return new UpdateGroupmateCommand(projectIndex, targetGroupmateIndex, updateGroupmateDescriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"     * Parses {@code Collection\u003cString\u003e roles} into a {@code Set\u003cRole\u003e} if {@code roles} is non-empty.","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"     * If {@code roles} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"     * {@code Set\u003cRole\u003e} containing zero tags.","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    private Optional\u003cSet\u003cRole\u003e\u003e parseRolesForEdit(Collection\u003cString\u003e roles) throws ParseException {","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        assert roles !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        if (roles.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        Collection\u003cString\u003e roleSet \u003d roles.size() \u003d\u003d 1 \u0026\u0026 roles.contains(\"\") ? Collections.emptySet() : roles;","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        return Optional.of(ParserUtil.parseRoles(roleSet));","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given.","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"lirc572":78,"samuelfangjw":20}},{"path":"src/main/java/seedu/address/logic/parser/UpdateProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-27"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-27"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateProjectCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateProjectCommandParser implements Parser\u003cUpdateProjectCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the UpdateProjectCommand","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"     * and returns an UpdateProjectCommand object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"        Index index;","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"        try {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"        ProjectName newProjectName \u003d ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        return new UpdateProjectCommand(index, newProjectName);","lastModifiedDate":"2021-03-27"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-27"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-27"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Eriksen2411":46,"samuelfangjw":6}},{"path":"src/main/java/seedu/address/logic/parser/UpdateTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-27"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-27"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-27"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-27"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.UpdateTodoCommand;","lastModifiedDate":"2021-03-27"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-27"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-27"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-27"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-27"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":" * Parses input arguments and creates a new UpdateTodoCommand object","lastModifiedDate":"2021-03-27"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-27"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"public class UpdateTodoCommandParser implements Parser\u003cUpdateTodoCommand\u003e {","lastModifiedDate":"2021-03-27"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code UpdateTodoCommand}.","lastModifiedDate":"2021-03-27"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"     * and returns an {@code UpdateTodoCommand} object for execution.","lastModifiedDate":"2021-03-27"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-27"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    public UpdateTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-27"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-27"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_INDEX, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEX, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-27"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-27"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-27"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        Index projectIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-04-01"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        Index targetTodoIndex;","lastModifiedDate":"2021-04-01"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-04-01"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            targetTodoIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_INDEX).get());","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_TODO_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-27"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"        CompletableTodo todo \u003d new Todo(description);","lastModifiedDate":"2021-03-27"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"        return new UpdateTodoCommand(projectIndex, targetTodoIndex, todo);","lastModifiedDate":"2021-03-27"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given.","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"}],"authorContributionMap":{"Eriksen2411":48,"samuelfangjw":21}},{"path":"src/main/java/seedu/address/logic/parser/ViewProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Parses input arguments and creates a new ViewProjectCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectCommandParser implements Parser\u003cViewProjectCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewProjectCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * and returns a ViewProjectCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public ViewProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2021-04-01"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-01"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewProjectCommand(index);","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, pe);","lastModifiedDate":"2021-04-01"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":34}},{"path":"src/main/java/seedu/address/logic/uicommands/ExitUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Exits the application.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ExitUiCommand extends UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.closeApplication();","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return other instanceof ExitUiCommand; // instanceof handles null","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/uicommands/ShowContactsUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Open the contacts panel.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ShowContactsUiCommand extends UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayContacts();","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return other instanceof ShowContactsUiCommand; // instanceof handles null","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/uicommands/ShowHelpUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Exits the application.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ShowHelpUiCommand extends UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return other instanceof ShowHelpUiCommand; // instanceof handles null","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/uicommands/ShowOverviewTabUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Show overview tab of a Project.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ShowOverviewTabUiCommand extends UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayOverviewTab();","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return other instanceof ShowOverviewTabUiCommand; // instanceof handles null","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/uicommands/ShowTodayUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Shows the today panel.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ShowTodayUiCommand extends UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayToday();","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return other instanceof ShowTodayUiCommand; // instanceof handles null","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/uicommands/ShowTodosTabUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Show todos tab of a Project.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ShowTodosTabUiCommand extends UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayTodosTab();","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return other instanceof ShowTodosTabUiCommand; // instanceof handles null","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/uicommands/UiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Represents a UI command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public abstract class UiCommand {","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"     * Executes the Ui command and returns the result message.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     * @param mainWindow {@code MainWindow} which the command should operate on.","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * @throws UiCommandException If an error occurs during UI command execution.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public abstract void execute(MainWindow mainWindow) throws UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":20}},{"path":"src/main/java/seedu/address/logic/uicommands/ViewProjectAndOverviewUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * View a panel containing information about a specified project.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Ensures that the overview panel is visible.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectAndOverviewUiCommand extends UiCommand {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ViewProjectAndOverviewUiCommand} with the specified {@code projectIndex}.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectIndex The {@code projectIndex} of the project to be viewed.","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public ViewProjectAndOverviewUiCommand(Index projectIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.selectProject(projectIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayOverviewTab();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ViewProjectAndOverviewUiCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projectIndex.equals(((ViewProjectAndOverviewUiCommand) other).projectIndex)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(projectIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/main/java/seedu/address/logic/uicommands/ViewProjectAndTodosUiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.MainWindow;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * View a panel containing information about a specified project.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Ensures that the todos panel is visible.","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectAndTodosUiCommand extends UiCommand {","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ViewProjectAndTodosUiCommand} with the specified {@code projectIndex}.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectIndex The {@code projectIndex} of the project to be viewed.","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public ViewProjectAndTodosUiCommand(Index projectIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void execute(MainWindow mainWindow) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.selectProject(projectIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayTodosTab();","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ViewProjectAndTodosUiCommand // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projectIndex.equals(((ViewProjectAndTodosUiCommand) other).projectIndex)); // state check","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(projectIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/main/java/seedu/address/logic/uicommands/exceptions/UiCommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.uicommands.exceptions;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.UiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * Represents an error which occurs during execution of a {@link UiCommand}.","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"public class UiCommandException extends Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a new {@code UiCommandException} with the specified detail {@code message}.","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public UiCommandException(String message) {","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        super(message);","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a new {@code UiCommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public UiCommandException(String message, Throwable cause) {","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        super(message, cause);","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":22}},{"path":"src/main/java/seedu/address/model/ColabFolder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.UniqueContactList;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.UniqueProjectList;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Wraps all data at the CoLAB level","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * Duplicates are not allowed","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class ColabFolder implements ReadOnlyColabFolder {","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    private final UniqueContactList contacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final UniqueProjectList projects;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /*","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        contacts \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projects \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolder() {}","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     * Creates a {@code ColabFolder} using the Contacts and Projects in {@code toBeCopied}","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolder(ReadOnlyColabFolder toBeCopied) {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        this();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    //// list overwrite operations","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"     * Replaces the contents of the Contacts list with {@code Contacts}.","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * {@code contacts} must not contain duplicate Contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        this.contacts.setContacts(contacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the contents of the project folder with {@code projects}.","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        this.projects.setProjects(projects);","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * Resets the existing data of this {@code ColabFolder} with {@code newData}.","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData(ReadOnlyColabFolder newData) {","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        setContacts(newData.getContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        setProjects(newData.getProjectsList());","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    // contact-level operations","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"     * Checks if contact exists in the {@code ColabFolder}.","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"     * @return true if a Contact with the same identity as {@code contact} exists in the {@code ColabFolder},","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-26"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        return contacts.contains(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"     * Adds a Contact to the {@code ColabFolder}.","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"     * The Contact must not already exist in the {@code ColabFolder}.","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        contacts.add(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"     * Replaces the given contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"     * The contact identity of {@code editedContact} must not be the same as another","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"     * existing contact in the {@code ColabFolder}.","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        requireNonNull(editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        contacts.setContact(target, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     * Removes {@code key} from this {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     * {@code key} must exist in the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    public void removeContact(Contact key) {","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"        contacts.remove(key);","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    // project-level operations","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if project exists in the {@code ColabFolder}.","lastModifiedDate":"2021-03-26"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if a project with the same identity as {@code project} exists in the {@code ColabFolder},","lastModifiedDate":"2021-03-26"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"     * false otherwise.","lastModifiedDate":"2021-03-26"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        return projects.contains(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a project to the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"     * The project must not already exist in the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        projects.add(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the given project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as another","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"     * existing project in the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(editedProject);","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        projects.setProject(target, editedProject);","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"     * Removes {@code key} from this {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"     * {@code key} must exist in the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"    public void removeProject(Project key) {","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(key);","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        projects.remove(key);","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    //// util methods","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        return \"CoLAB Folder Containing \"","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"                + contacts.asUnmodifiableObservableList().size()","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"                + \" contacts and \"","lastModifiedDate":"2021-03-28"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"                + projects.asUnmodifiableObservableList().size()","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"                + \" projects\";","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"    public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e getProjectsList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        return projects.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ColabFolder // instanceof handles nulls","lastModifiedDate":"2021-03-25"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 contacts.equals(((ColabFolder) other).contacts)","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projects.equals(((ColabFolder) other).projects));","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-25"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"        return Objects.hash(contacts, projects);","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":34,"samuelfangjw":158}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.SavedState;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    Predicate\u003cContact\u003e PREDICATE_SHOW_ALL_CONTACTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    Predicate\u003cProject\u003e PREDICATE_SHOW_ALL_PROJECTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ColabFolder \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the user prefs\u0027 CoLAB folder file path.","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    Path getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the user prefs\u0027 CoLAB folder file path.","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    void setColabFolderFilePath(Path colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces CoLAB folder data with the data in {@code colabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    void setColabFolder(ReadOnlyColabFolder colabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    /** Returns the ColabFolder */","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    ReadOnlyColabFolder getColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"     * Returns true if a Contact with the same identity as {@code contact} exists in the CoLAB folder.","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    boolean hasContact(Contact contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"     * Deletes the given Contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"     * The Contact must exist in the CoLAB folder.","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    void deleteContact(Contact target);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"     * Adds the given Contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"     * {@code contact} must not already exist in the CoLAB folder.","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    void addContact(Contact contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"     * Replaces the given Contact {@code target} with {@code editedContact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"     * The Contact identity of {@code editedContact} must not be the same as","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"     * another existing contact in the CoLAB folder.","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"    void setContact(Contact target, Contact editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Contact List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"    /** Returns an unmodifiable view of the filtered contact list */","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"     * Updates the filter of the filtered contact list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    void updateFilteredContactList(Predicate\u003cContact\u003e predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Projects File \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    boolean hasProject(Project project);","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes the given project.","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     * The project must exist in the CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    void deleteProject(Project target);","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     * Adds the given project.","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     * {@code project} must not already exist in the CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    void addProject(Project projects);","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the given project {@code target} with {@code editedProject}.","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"     * another existing project in the CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    void setProject(Project target, Project editedProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Project List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    /** Returns an unmodifiable view of the filtered projects list */","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"     * Updates the filter of the filtered projects list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    void updateFilteredProjectList(Predicate\u003cProject\u003e predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Colab Folder History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the previous state in {@code ColabFolderHistory}","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"     * @throws NoUndoableStateException if previous state not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    SavedState getUndoState() throws NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the next state in {@code ColabFolderHistory}","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"     * @throws NoRedoableStateException if next state not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"    SavedState getRedoState() throws NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"     * Undo the {@code ColabFolder} to the previous state and returns the command result used to get to that state.","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"     * @throws NoUndoableStateException if previous state not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"    CommandResult undo() throws NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"     * Redo the {@code ColabFolder} to the next state and returns the command result used to get to that state.","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"     * @throws NoRedoableStateException if next state not found.","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"    CommandResult redo() throws NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"     * Commits the current {@code ColabFolder} state to {@code ColabFolderHistory}.","lastModifiedDate":"2021-03-29"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    void commitState(CommandResult commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"lirc572":19,"-":80,"samuelfangjw":76}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.ColabFolderHistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.SavedState;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * Represents the in-memory model of the CoLAB folder data.","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final ColabFolderHistory colabFolderHistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final ColabFolder colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private final FilteredList\u003cProject\u003e filteredProjects;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes a ModelManager with the given colabFolder and userPrefs.","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public ModelManager(ReadOnlyColabFolder colabFolder, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(colabFolder, userPrefs);","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        logger.fine(\"Initializing with CoLAB folder: \" + colabFolder + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolderHistory \u003d new ColabFolderHistory(colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolder \u003d new ColabFolder(colabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        filteredContacts \u003d new FilteredList\u003c\u003e(this.colabFolder.getContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        filteredProjects \u003d new FilteredList\u003c\u003e(this.colabFolder.getProjectsList());","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        this(new ColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder.equals(other.colabFolder)","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 filteredContacts.equals(other.filteredContacts)","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 filteredProjects.equals(other.filteredProjects);","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ColabFolder \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    public Path getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        return userPrefs.getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    public void setColabFolderFilePath(Path colabFolderFilePath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        userPrefs.setColabFolderFilePath(colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    public void setColabFolder(ReadOnlyColabFolder colabFolder) {","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolder.resetData(colabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    public ReadOnlyColabFolder getColabFolder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        return colabFolder.hasContact(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"    public void deleteContact(Contact target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"        colabFolder.removeContact(target);","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        colabFolder.addContact(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        colabFolder.setContact(target, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder.hasProject(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteProject(Project target) {","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(target);","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.removeProject(target);","lastModifiedDate":"2021-03-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2021-03-25"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.addProject(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.setProject(target, editedProject);","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Contact List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"     * Returns an unmodifiable view of the list of {@code Contact} backed by the internal list of","lastModifiedDate":"2021-03-28"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"     * {@code versionedColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"        return filteredContacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"    public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        filteredContacts.setPredicate(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Projects List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"     * Returns an unmodifiable view of the list of {@code Project} backed by the internal list of","lastModifiedDate":"2021-03-10"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"     * {@code versionedColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"        return filteredProjects;","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"    public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        filteredProjects.setPredicate(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Colab Folder History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"    public SavedState getUndoState() throws NoUndoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolderHistory.undo();","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"    public SavedState getRedoState() throws NoRedoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolderHistory.redo();","lastModifiedDate":"2021-03-29"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult undo() throws NoUndoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"        SavedState savedState \u003d getUndoState();","lastModifiedDate":"2021-03-29"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d savedState.getCommandResult();","lastModifiedDate":"2021-03-29"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyColabFolder readOnlyColabFolder \u003d savedState.getColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.resetData(readOnlyColabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"        return commandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult redo() throws NoRedoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"        SavedState savedState \u003d getRedoState();","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d savedState.getCommandResult();","lastModifiedDate":"2021-03-29"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyColabFolder readOnlyColabFolder \u003d savedState.getColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.resetData(readOnlyColabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"        return commandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"    public void commitState(CommandResult commandResult) {","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyColabFolder colabFolder \u003d getColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolderCopy \u003d new ColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"        colabFolderCopy.resetData(colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"        colabFolderHistory.commit(colabFolderCopy, commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lirc572":22,"-":117,"samuelfangjw":114}},{"path":"src/main/java/seedu/address/model/ReadOnlyColabFolder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Unmodifiable view of a CoLAB folder.","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public interface ReadOnlyColabFolder {","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"     * Returns an unmodifiable view of the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"     * This list will not contain any duplicate contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    ObservableList\u003cContact\u003e getContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Returns an unmodifiable view of the projects list.","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * This list will not contain any duplicate projects.","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    ObservableList\u003cProject\u003e getProjectsList();","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":4,"samuelfangjw":20}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    Path getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":15,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private Path colabFolderFilePath \u003d Paths.get(\"data\" , \"colab.json\");","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        setColabFolderFilePath(newUserPrefs.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public Path getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolderFilePath;","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void setColabFolderFilePath(Path colabFolderFilePath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolderFilePath \u003d colabFolderFilePath;","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 colabFolderFilePath.equals(o.colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(guiSettings, colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        sb.append(\"\\nLocal CoLAB data file location : \" + colabFolderFilePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"samuelfangjw":13}},{"path":"src/main/java/seedu/address/model/colabfolderhistory/ColabFolderHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.colabfolderhistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Stores a history of {@code ColabFolder}.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ColabFolderHistory {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cSavedState\u003e savedStateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private int currentStatePointer;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ColabFolderHistory} object with the initial state of the {@code ColabFolder}.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @param initialColabFolder The initial state of the ColabFolder.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolderHistory(ReadOnlyColabFolder initialColabFolder) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        savedStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        savedStateList.add(new SavedState(initialColabFolder));","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        currentStatePointer \u003d 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * Saves a copy of the current {@code ColabFolder} state at the end of the state list.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void commit(ReadOnlyColabFolder colabFolder, CommandResult commandResult) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        removeStatesAfterCurrentPointer();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        savedStateList.add(new SavedState(colabFolder, commandResult));","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        currentStatePointer++;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    private void removeStatesAfterCurrentPointer() {","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        savedStateList.subList(currentStatePointer + 1, savedStateList.size()).clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the previous state of the {@code ColabFolder}.","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public SavedState undo() {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        if (!canUndo()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            throw new NoUndoableStateException();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        currentStatePointer--;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return savedStateList.get(currentStatePointer);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the next state of the {@code ColabFolder}.","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public SavedState redo() {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        if (!canRedo()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            throw new NoRedoableStateException();","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        currentStatePointer++;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        return savedStateList.get(currentStatePointer);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if {@code undo()} has colab folder states to undo.","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public boolean canUndo() {","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if {@code redo()} has colab folder states to redo.","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    public boolean canRedo() {","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        return currentStatePointer \u003c savedStateList.size() - 1;","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof ColabFolderHistory)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderHistory otherColabFolderHistory \u003d (ColabFolderHistory) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        return savedStateList.equals(otherColabFolderHistory.savedStateList)","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 currentStatePointer \u003d\u003d otherColabFolderHistory.currentStatePointer;","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":98}},{"path":"src/main/java/seedu/address/model/colabfolderhistory/SavedState.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.colabfolderhistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Encapsulates information regarding the state of the {@code ColabFolder} at a certain point in time.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class SavedState {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final ReadOnlyColabFolder colabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private final CommandResult commandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code SavedState} object with a {@code colabFolder} and {@code commandResult}.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @param colabFolder The {@code ReadOnlyColabFolder} to store, should not be null.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param commandResult The {@code CommandResult} to store.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public SavedState(ReadOnlyColabFolder colabFolder, CommandResult commandResult) {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(colabFolder, commandResult);","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolder \u003d colabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        this.commandResult \u003d commandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code SavedState} object with a {@code colabFolder}. Sets {@code commandResult to null}.","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * @param colabFolder The {@code ReadOnlyColabFolder} to store, should not be null.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public SavedState(ReadOnlyColabFolder colabFolder) {","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(colabFolder);","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolder \u003d colabFolder;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        this.commandResult \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public ReadOnlyColabFolder getColabFolder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult getCommandResult() {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return commandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof SavedState)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        SavedState otherSavedState \u003d (SavedState) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder.equals(otherSavedState.colabFolder)","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 commandResult \u003d\u003d otherSavedState.commandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(colabFolder, commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":72}},{"path":"src/main/java/seedu/address/model/colabfolderhistory/exceptions/NoRedoableStateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.colabfolderhistory.exceptions;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Thrown when trying to {@code redo()} but no redoable state found.","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class NoRedoableStateException extends RuntimeException {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public NoRedoableStateException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Nothing to redo.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/seedu/address/model/colabfolderhistory/exceptions/NoUndoableStateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.colabfolderhistory.exceptions;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Thrown when trying to {@code undo()} but no undoable state found.","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class NoUndoableStateException extends RuntimeException {","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public NoUndoableStateException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Nothing to undo.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/seedu/address/model/contact/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a Contact\u0027s address in the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":2,"-":55}},{"path":"src/main/java/seedu/address/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":" * Represents a contact in the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"public class Contact {","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    public Contact(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"     * Returns true if both Contacts have the same name.","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"     * This defines a weaker notion of equality between two Contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        return otherContact !\u003d null","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherContact.getName().equals(getName());","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"     * Returns true if both Contacts have the same identity and data fields.","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"     * This defines a stronger notion of equality between two Contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        return otherContact.getName().equals(getName())","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherContact.getPhone().equals(getPhone())","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherContact.getEmail().equals(getEmail())","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherContact.getAddress().equals(getAddress())","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherContact.getTags().equals(getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":19,"-":104}},{"path":"src/main/java/seedu/address/model/contact/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a Contact\u0027s email in the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"!#$%\u0026\u0027*+/\u003d?`{|}~^.-\";","lastModifiedDate":"2018-02-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \") .\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    - be at least 2 characters long\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    - start and end with alphanumeric characters\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - consist of alphanumeric characters, a period or a hyphen for the characters in between, if any.\";","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^[\\\\w\" + SPECIAL_CHARACTERS + \"]+\";","lastModifiedDate":"2018-02-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_FIRST_CHARACTER_REGEX \u003d \"[^\\\\W_]\"; // alphanumeric characters except underscore","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_MIDDLE_REGEX \u003d \"[a-zA-Z0-9.-]*\"; // alphanumeric, period and hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_CHARACTER_REGEX \u003d \"[^\\\\W_]$\";","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\"","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + DOMAIN_FIRST_CHARACTER_REGEX + DOMAIN_MIDDLE_REGEX + DOMAIN_LAST_CHARACTER_REGEX;","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":2,"-":65}},{"path":"src/main/java/seedu/address/model/contact/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a Contact\u0027s name in the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":2,"-":57}},{"path":"src/main/java/seedu/address/model/contact/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" * Tests that a {@code Contact}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cContact\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public boolean test(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(contact.getName().fullName, keyword));","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lirc572":5,"-":26}},{"path":"src/main/java/seedu/address/model/contact/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a Contact\u0027s phone number in the contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":2,"-":51}},{"path":"src/main/java/seedu/address/model/contact/UniqueContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":" * A list of contacts that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":" * A contact is considered unique by comparing using {@code Contact#isSameContact(Contact)}. As such,","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":" * adding and updating of contacts uses Contact#isSameContact(Contact) for equality so as to ensure that the contact","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":" * being added or updated is unique in terms of identity in the UniqueContactList. However, the removal of a contact","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":" * uses Contact#equals(Object) so as to ensure that the contact with exactly the same fields will be removed.","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":" *","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":" *","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"public class UniqueContactList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     * Returns true if the list contains an equivalent Contact as the given argument.","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     * Adds a Contact to the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     * The Contact must not already exist in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public void add(Contact toAdd) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     * Replaces the Contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * The Contact identity of {@code editedContact} must not be the same as another existing Contact in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        if (!target.isSameContact(editedContact) \u0026\u0026 contains(editedContact)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        internalList.set(index, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"     * Removes the equivalent Contact from the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"     * The Contact must exist in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    public void setContacts(UniqueContactList replacement) {","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"     * Replaces the contents of this list with {@code contacts}.","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"     * {@code contacts} must not contain duplicate Contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(contacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        if (!contactsAreUnique(contacts)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"        internalList.setAll(contacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"                || (other instanceof UniqueContactList // instanceof handles nulls","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"                        \u0026\u0026 internalList.equals(((UniqueContactList) other).internalList));","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-28"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"     * Returns true if {@code contacts} contains only unique contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"    private boolean contactsAreUnique(List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        for (int i \u003d 0; i \u003c contacts.size() - 1; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"            for (int j \u003d i + 1; j \u003c contacts.size(); j++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"                if (contacts.get(i).isSameContact(contacts.get(j))) {","lastModifiedDate":"2021-03-28"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"                    return false;","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"                }","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"            }","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"        return true;","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"lirc572":137}},{"path":"src/main/java/seedu/address/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Signals that the operation is unable to find the specified Contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"public class ContactNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"lirc572":6}},{"path":"src/main/java/seedu/address/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Signals that the operation will result in duplicate Contacts (Contacts are considered duplicates if they have","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" * the same identity).","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"        super(\"Operation would result in duplicate contacts\");","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"lirc572":11}},{"path":"src/main/java/seedu/address/model/groupmate/Groupmate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" * Represents a groupmate in the groupmate list.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class Groupmate {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private final Name name;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    private final Set\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public Groupmate(Name name, Set\u003cRole\u003e roles) {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(name, roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        this.roles.addAll(roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public Name getName() {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        return name;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * Returns an immutable role set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public Set\u003cRole\u003e getRoles() {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        return Collections.unmodifiableSet(roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     * Returns true if both Groupmates have the same name.","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     * This defines a weaker notion of equality between two Groupmates.","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    public boolean isSameGroupmate(Groupmate other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        return other !\u003d null","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 other.getName().equals(getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * Returns true if both Groupmates have the same identity and data fields.","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     * This defines a stronger notion of equality between two Groupmates.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        if (!(other instanceof Groupmate)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        Groupmate otherGroupmate \u003d (Groupmate) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        return otherGroupmate.getName().equals(getName())","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherGroupmate.getRoles().equals(getRoles());","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        return Objects.hash(name, roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        builder.append(getName());","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        Set\u003cRole\u003e roles \u003d getRoles();","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        if (!roles.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"            builder.append(\"; Roles: \");","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"            roles.forEach(builder::append);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":91}},{"path":"src/main/java/seedu/address/model/groupmate/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a Groupmate\u0027s name in the groupmate list.","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"public class Name {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    /*","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    public final String fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public Name(String name) {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        fullName \u003d name;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        return fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        return fullName.hashCode();","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":59}},{"path":"src/main/java/seedu/address/model/groupmate/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":" * Represents a Role.","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidRoleName(String)}","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"public class Role {","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"            \"Role names should be alphanumeric (can have underscores and hyphens)\";","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_-]*$\";","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    public final String roleName;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     * @param roleName A valid role name.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public Role(String roleName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        requireNonNull(roleName);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        checkArgument(isValidRoleName(roleName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"        this.roleName \u003d roleName;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     * Returns true if a given string is a valid role name.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public static boolean isValidRoleName(String test) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"                || (other instanceof Role // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 roleName.equals(((Role) other).roleName)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        return roleName.hashCode();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public String toString() {","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        return \u0027[\u0027 + roleName + \u0027]\u0027;","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":55}},{"path":"src/main/java/seedu/address/model/project/DeadlineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateDeadlineException;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":" * Represents a list of Deadlines.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" * Deadline list ensures that there are no duplicates.","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":" * Also maintains an internal list of sorted deadlines.","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"public class DeadlineList {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cCompletableDeadline\u003e deadlines \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final SortedList\u003cCompletableDeadline\u003e sortedDeadlines \u003d new SortedList\u003c\u003e(deadlines,","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            Comparator.comparing(CompletableDeadline::getBy).thenComparing(CompletableDeadline::getDescription));","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * Constructs a empty {@code DeadlineList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    public DeadlineList() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code DeadlineList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * @param deadlines A list of {@code deadlines}.","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public DeadlineList(List\u003cCompletableDeadline\u003e deadlines) {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        requireNonNull(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        this.deadlines.addAll(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a deadline to this {@code DeadlineList}.The {@code Deadline} must not already exist in","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * the {@code DeadlineList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"     * @param deadline {@code Deadline} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        if (hasDeadline(deadline)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateDeadlineException();","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        this.deadlines.add(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Get the {@code Deadline} in the sorted list specified by index.","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * @param i index specifies the target {@code Deadline} in the sorted list.","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"     * @return {@code Deadline} at this index.","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"    public CompletableDeadline getDeadline(Integer i) {","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        return this.sortedDeadlines.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * Set the {@code Deadline} specified by index in the sorted list with a new {@code Deadline}.","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"     * @param index index specifies the target {@code Deadline}.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"     * @param deadline new {@code Deadline} for this index.","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"    public void setDeadline(Integer index, CompletableDeadline deadline) {","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        int deadlineIndex \u003d sortedDeadlines.getSourceIndex(index);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        this.deadlines.set(deadlineIndex, deadline);","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code deadlines} as an {@code SortedList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cCompletableDeadline\u003e getSortedDeadlineList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        return this.sortedDeadlines;","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes a deadline from this {@code DeadlineList}","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     * .","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"    public void deleteDeadline(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        int deadlinesIndex \u003d sortedDeadlines.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        this.deadlines.remove(deadlinesIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     * Marks a deadline from this {@code DeadlineList} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    public void markAsDone(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadline \u003d sortedDeadlines.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        deadline.markAsDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        // Force observable list to update","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        setDeadline(i, deadline);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a copy of this {@code DeadLineList}","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"     * @return A copy of this {@code DeadlineList}","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        return new DeadlineList(getSortedDeadlineList());","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code CompletableDeadline} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the deadlines occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cCompletableDeadline\u003e getDeadlinesOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        Predicate\u003cCompletableDeadline\u003e predicate \u003d deadline -\u003e deadline.getBy().isEqual(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        return deadlines.filtered(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"     * Returns a sequential stream with this {@code DeadlineList} as its source.","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"     * @return a sequential Stream over the completables in this {@code DeadlineList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"    public Stream\u003cCompletableDeadline\u003e stream() {","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"        return deadlines.stream();","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if the {@code DeadlineList} already contains the specified {@code deadlineToCheck}.","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"     * @param deadlineToCheck The deadline that is to be checked.","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if this project contains the specified deadline, false otherwise.","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasDeadline(CompletableDeadline deadlineToCheck) {","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        for (CompletableDeadline deadline: deadlines) {","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"            if (deadlineToCheck.equals(deadline)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if a {@code Deadline} at a specific index in the {@code DeadlineList} done.","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"     * @param index index of the {@code Deadline}.","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if the {@code Deadline} is done, false otherwise.","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":172,"author":{"gitId":"Eriksen2411"},"content":"    public boolean checkIsDone(Integer index) {","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"        return sortedDeadlines.get(index).getIsDone();","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"Eriksen2411"},"content":"     * Returns the size of the {@code DeadlineList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"Eriksen2411"},"content":"     * @return size of the {@code DeadlineList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"Eriksen2411"},"content":"    public int size() {","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"Eriksen2411"},"content":"        return deadlines.size();","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":185,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeadlineList // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 deadlines.equals(((DeadlineList) other).deadlines)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"vevek"},"content":"        return deadlines.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":79,"Eriksen2411":33,"samuelfangjw":84}},{"path":"src/main/java/seedu/address/model/project/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-27"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateEventException;","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.RepeatableComparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":" * Represents a list of Events.","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" * Event list ensures that there are no duplicates.","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":" * Also maintains an internal list of sorted events.","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"public class EventList {","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final SortedList\u003cEvent\u003e sortedEvents \u003d new SortedList\u003c\u003e(events, new RepeatableComparator());","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code EventList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public EventList () {}","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code EventList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @param events A list of {@code Event}.","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public EventList (List\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(events);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * Adds an event to this {@code EventList}. The {@code Event} must not already exist in the {@code EventList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"     * @param event {@code Event} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        if (hasEvent(event)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2021-03-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        this.events.add(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     * Set the {@code Event} specified by index in the sorted event list with a new {@code Event}.","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * @param i index number specifies the target {@code Event} in the sorted list.","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"     * @param event new {@code Event} for this index.","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"    public void setEvent(Integer i, Event event) {","lastModifiedDate":"2021-03-27"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(event, i);","lastModifiedDate":"2021-03-27"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        int eventsIndex \u003d sortedEvents.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        this.events.set(eventsIndex, event);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * Get the {@code Event} specified by index in sorted {@code EventList}.","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"     * @param i index number specifies the target {@code Event}.","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"     * @return The {@code Event} specified.","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"    public Event getEvent(Integer i) {","lastModifiedDate":"2021-03-27"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        return sortedEvents.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"     * Deletes an event from this {@code EventList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     * @param i Index of {@code Event} in the sorted list to be deleted.","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"    public void deleteEvent(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        int eventsIndex \u003d sortedEvents.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        this.events.remove(eventsIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a copy of this {@code EventList}","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"     * @return A copy of this {@code EventList}","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    public EventList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        return new EventList(getSortedEventList());","lastModifiedDate":"2021-03-31"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a sequential stream with this {@code EventList} as its source.","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     * @return a sequential Stream over the events in this {@code EventList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    public Stream\u003cEvent\u003e stream() {","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        return events.stream();","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code events} as an {@code SortedList\u003cEvent\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cEvent\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cEvent\u003e getSortedEventList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        return sortedEvents;","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code Events} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the events occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cEvent\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cEvent\u003e getEventsOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        Predicate\u003cEvent\u003e predicate \u003d event -\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            if (event.getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                return event.getDate().getDayOfWeek().equals(dateOfEvent.getDayOfWeek());","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                return event.getDate().isEqual(dateOfEvent);","lastModifiedDate":"2021-03-30"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        };","lastModifiedDate":"2021-03-30"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        return events.filtered(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if the {@code EventList} already contains the specified {@code eventToCheck}.","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"     * @param eventToCheck The event that is to be checked.","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if this project contains the specified event, false otherwise.","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasEvent(Event eventToCheck) {","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"        for (Event event: events) {","lastModifiedDate":"2021-03-26"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"            if (eventToCheck.equals(event)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":159,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"Eriksen2411"},"content":"     * Returns the size of the {@code EventList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"Eriksen2411"},"content":"     * @return size of the {@code EventList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"Eriksen2411"},"content":"    public int size() {","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"Eriksen2411"},"content":"        return events.size();","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof EventList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 events.equals(((EventList) other).events)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        return events.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"vevek":11,"Eriksen2411":38,"samuelfangjw":131}},{"path":"src/main/java/seedu/address/model/project/GroupmateList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * Represents a list of Groupmates.","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Groupmate list ensures that there are no duplicates.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * Also maintains an internal list of sorted groupmates.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"public class GroupmateList {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    private final ObservableList\u003cGroupmate\u003e groupmates \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final SortedList\u003cGroupmate\u003e sortedGroupmates \u003d new SortedList\u003c\u003e(groupmates,","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            Comparator.comparing(Groupmate::toString, String::compareToIgnoreCase));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"     * Constructs an empty {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public GroupmateList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     * @param groupmates A list of {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public GroupmateList(List\u003cGroupmate\u003e groupmates) {","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        requireNonNull(groupmates);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        this.groupmates.addAll(groupmates);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Returns groupmates as a {@code SortedList\u003cGroupmate\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * @return groupmates as a {@code SortedList\u003cGroupmate\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cGroupmate\u003e getSortedGroupmates() {","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        return sortedGroupmates;","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Returns the number of groupmates in the {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     * @return the number of groupmates in the {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public int size() {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        return groupmates.size();","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the {@code Groupmate} at the specified position in the sorted {@code GroupmateList}.","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * @return the {@code Groupmate} at the specified position in the sorted {@code GroupmateList}.","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    public Groupmate get(int index) {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        int groupmatesIndex \u003d sortedGroupmates.getSourceIndex(index);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return groupmates.get(groupmatesIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"     * Deletes a {@code Groupmate} from this {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * @param i Index of {@code Groupmate} in the sorted list to be deleted.","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    public void delete(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        int groupmatesIndex \u003d sortedGroupmates.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        groupmates.remove(groupmatesIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"     * Returns a copy of this {@code GroupmateList}","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"     * @return A copy of this {@code GroupmateList}","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    public GroupmateList getCopy() {","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        return new GroupmateList(getSortedGroupmates());","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"     * Returns a sequential stream with this {@code GroupmateList} as its source.","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"     * @return a sequential Stream over the groupmates in this {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"    public Stream\u003cGroupmate\u003e stream() {","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        return groupmates.stream();","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"     * Adds a groupmate to this {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"     * @param groupmate {@code Groupmate} to add.","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"    public void addGroupmate(Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        this.groupmates.add(groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     * Set the {@code Groupmate} specified by index in the sorted list with a new {@code Groupmate}.","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     * @param i index number specifies the target {@code Groupmate} in the sorted list.","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"     * @param groupmate new {@code Groupmate} for this index.","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"    public void setGroupmate(Integer i, Groupmate groupmate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(groupmate, i);","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        int groupmatesIndex \u003d sortedGroupmates.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        this.groupmates.set(groupmatesIndex, groupmate);","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"     * Returns true if this {@code GroupmateList} has the provided {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"     * @param groupmate the groupmate to test.","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"     * @return whether the {@code Groupmate} is in this {@code GroupmateList}.","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    public boolean contains(Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        return stream().anyMatch(groupmate::isSameGroupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"                || (other instanceof GroupmateList // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 groupmates.equals(((GroupmateList) other).groupmates)); // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        return groupmates.hashCode();","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"lirc572":76,"samuelfangjw":70}},{"path":"src/main/java/seedu/address/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Project in CoLAB.","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"public class Project {","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    // Identity fields","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectName projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    // Data fields","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final EventList events;","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    private final TodoList todos;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private final DeadlineList deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    private final GroupmateList groupmates;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code Project}.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public Project(ProjectName projectName) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projectName);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        this.events \u003d new EventList();","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        this.todos \u003d new TodoList();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        this.deadlines \u003d new DeadlineList();","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        this.groupmates \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code Project}","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    public Project(ProjectName projectName, EventList events, TodoList todos, DeadlineList deadlines,","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"                   GroupmateList groupmates) {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(projectName, events, todos, deadlines, groupmates);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        this.events \u003d events;","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        this.todos \u003d todos;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        this.deadlines \u003d deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        this.groupmates \u003d groupmates;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName getProjectName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        assert projectName !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public EventList getEvents() {","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        assert events !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        return events;","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public TodoList getTodos() {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assert todos !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        return todos;","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    public DeadlineList getDeadlines() {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        assert deadlines !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        return deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"    public GroupmateList getGroupmates() {","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        assert groupmates !\u003d null;","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        return groupmates;","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code Events} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the events occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cEvent\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cEvent\u003e getEventsOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        return events.getEventsOnDate(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code CompletableDeadline} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the deadlines occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cCompletableDeadline\u003e getDeadlinesOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        return deadlines.getDeadlinesOnDate(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"     * Adds a groupmate to the {@code GroupmateList}.","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"     * @param groupmate {@code Groupmate} to add.","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"    public void addGroupmate(Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        requireNonNull(groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        this.groupmates.addGroupmate(groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"     * Returns true if a {@code Groupmate} with the same identity as {@code groupmate} exists","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"     * in this {@code Project}\u0027s {@code Groupmate}s.","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"     * @param groupmate the {@code Groupmate} to compare.","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"     * @return true if a groupmate with the same identity as {@code groupmate} exists under this {@code Project}.","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"    public boolean hasGroupmate(Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        requireNonNull(groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        return groupmates.contains(groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"     * Adds a deadline to {@code DeadlineList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"     * @param deadline {@code Deadline} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"        this.deadlines.addDeadline(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"Eriksen2411"},"content":"     * Adds an event to {@code EventList} field of this {@code Project}.","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"Eriksen2411"},"content":"     * @param event {@code Event} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"Eriksen2411"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"Eriksen2411"},"content":"        this.events.addEvent(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"     * Adds an todo to {@code TodoList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"     * @param todo {@code Todo} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"        this.todos.addTodo(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"     *  Returns the {@code Person}. at the specified position in this {@code Project}\u0027s {@code GroupmateList}.","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"     * @return the {@code Person}. at the specified position in this {@code Project}\u0027s {@code GroupmateList}.","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"    public Groupmate getGroupmate(Integer i) {","lastModifiedDate":"2021-03-29"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"        return groupmates.get(i);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":173,"author":{"gitId":"Eriksen2411"},"content":"     * Set the {@code Event} specified by index with a new {@code Event}.","lastModifiedDate":"2021-03-27"},{"lineNumber":174,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":175,"author":{"gitId":"Eriksen2411"},"content":"     * @param i index number specifies the target {@code Event}.","lastModifiedDate":"2021-03-27"},{"lineNumber":176,"author":{"gitId":"Eriksen2411"},"content":"     * @param event new {@code Event} for this index.","lastModifiedDate":"2021-03-27"},{"lineNumber":177,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":178,"author":{"gitId":"Eriksen2411"},"content":"    public void setEvent(Integer i, Event event) {","lastModifiedDate":"2021-03-27"},{"lineNumber":179,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(event, i);","lastModifiedDate":"2021-03-27"},{"lineNumber":180,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":181,"author":{"gitId":"Eriksen2411"},"content":"        this.events.setEvent(i, event);","lastModifiedDate":"2021-03-27"},{"lineNumber":182,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":183,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"     * Set the {@code Groupmate} specified by index with a new {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"     * @param i index number specifies the target {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"     * @param groupmate new {@code Groupmate} for this index.","lastModifiedDate":"2021-03-30"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"    public void setGroupmate(Integer i, Groupmate groupmate) {","lastModifiedDate":"2021-03-30"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(groupmate, i);","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"        this.groupmates.setGroupmate(i, groupmate);","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"     *  Deletes a groupmate from {@code groupmates} field of this {@code Project}.","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"     * @param i Index of {@code Person} to be deleted.","lastModifiedDate":"2021-03-16"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"    public void deleteGroupmate(Integer i) {","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"        this.groupmates.delete(i);","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"vevek"},"content":"     * Deletes a deadline from {@code DeadlineList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"vevek"},"content":"    public void deleteDeadline(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"vevek"},"content":"        this.deadlines.deleteDeadline(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"vevek"},"content":"     * Deletes an event from {@code EventList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":218,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Event} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"vevek"},"content":"    public void deleteEvent(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"vevek"},"content":"        this.events.deleteEvent(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"vevek"},"content":"     * Deletes a todo from {@code TodoList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":229,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Todo} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"vevek"},"content":"    public void deleteTodo(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":232,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":233,"author":{"gitId":"vevek"},"content":"        this.todos.deleteTodo(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":234,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"vevek"},"content":"     * Marks a deadline from {@code DeadlineList} field of this {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"vevek"},"content":"    public void markDeadline(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":242,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":243,"author":{"gitId":"vevek"},"content":"        this.deadlines.markAsDone(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":244,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":245,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":246,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":247,"author":{"gitId":"vevek"},"content":"     * Marks a todo from {@code TodoList} field of this {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":248,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":249,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Todo} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":250,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":251,"author":{"gitId":"vevek"},"content":"    public void markTodo(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":252,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":253,"author":{"gitId":"vevek"},"content":"        this.todos.markAsDone(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":254,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":255,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if both projects have the same name.","lastModifiedDate":"2021-03-08"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"     * This defines a weaker notion of equality between two projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"    public boolean isSameProject(Project otherProject) {","lastModifiedDate":"2021-03-08"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"        if (otherProject \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"        return otherProject !\u003d null","lastModifiedDate":"2021-03-08"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getProjectName().equals(getProjectName());","lastModifiedDate":"2021-03-08"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a new copy of this project.","lastModifiedDate":"2021-03-29"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"     * @return a copy of this project.","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"    public Project getCopy() {","lastModifiedDate":"2021-03-29"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d this.events.getCopy();","lastModifiedDate":"2021-03-29"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d this.deadlines.getCopy();","lastModifiedDate":"2021-03-29"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d this.todos.getCopy();","lastModifiedDate":"2021-03-29"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"        GroupmateList groupmateList \u003d this.groupmates.getCopy();","lastModifiedDate":"2021-03-30"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(this.getProjectName(), eventList, todoList, deadlineList, groupmateList);","lastModifiedDate":"2021-03-30"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code deadlines} as an {@code SortedList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cCompletableDeadline\u003e getSortedDeadlines() {","lastModifiedDate":"2021-03-31"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"        return deadlines.getSortedDeadlineList();","lastModifiedDate":"2021-03-31"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code events} as an {@code SortedList\u003cEvent\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cEvent\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cEvent\u003e getSortedEvents() {","lastModifiedDate":"2021-03-31"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"        return events.getSortedEventList();","lastModifiedDate":"2021-03-31"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code todos} as a {@code SortedList\u003cCompletableTodo\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cCompletableTodo\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cCompletableTodo\u003e getSortedTodos() {","lastModifiedDate":"2021-03-31"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"        return todos.getSortedTodos();","lastModifiedDate":"2021-03-31"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code groupmates} as a {@code SortedList\u003cGroupmate\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-31"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cGroupmate\u003e}","lastModifiedDate":"2021-03-31"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":315,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cGroupmate\u003e getSortedGroupmates() {","lastModifiedDate":"2021-03-31"},{"lineNumber":316,"author":{"gitId":"samuelfangjw"},"content":"        return groupmates.getSortedGroupmates();","lastModifiedDate":"2021-03-31"},{"lineNumber":317,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":318,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":319,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":320,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if both projects have the same identity and data fields.","lastModifiedDate":"2021-03-08"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":"     * This defines a stronger notion of equality between two projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":322,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":323,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":324,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":325,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":326,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":327,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":328,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":329,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof Project)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":330,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":331,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":332,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":333,"author":{"gitId":"samuelfangjw"},"content":"        Project otherProject \u003d (Project) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":334,"author":{"gitId":"samuelfangjw"},"content":"        return otherProject.getProjectName().equals(getProjectName())","lastModifiedDate":"2021-03-08"},{"lineNumber":335,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getEvents().equals(getEvents())","lastModifiedDate":"2021-03-08"},{"lineNumber":336,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherProject.getTodos().equals(getTodos())","lastModifiedDate":"2021-03-13"},{"lineNumber":337,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherProject.getDeadlines().equals(getDeadlines())","lastModifiedDate":"2021-03-13"},{"lineNumber":338,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 otherProject.getGroupmates().equals(getGroupmates());","lastModifiedDate":"2021-03-29"},{"lineNumber":339,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":340,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":341,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":342,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":343,"author":{"gitId":"lirc572"},"content":"        return Objects.hash(projectName, events, todos, deadlines, groupmates);","lastModifiedDate":"2021-03-29"},{"lineNumber":344,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":345,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":346,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":347,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":348,"author":{"gitId":"samuelfangjw"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":349,"author":{"gitId":"samuelfangjw"},"content":"        builder.append(getProjectName());","lastModifiedDate":"2021-03-08"},{"lineNumber":350,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":351,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cEvent\u003e events \u003d getEvents().getSortedEventList();","lastModifiedDate":"2021-03-31"},{"lineNumber":352,"author":{"gitId":"samuelfangjw"},"content":"        if (!events.isEmpty()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":353,"author":{"gitId":"samuelfangjw"},"content":"            builder.append(\"; Events: \");","lastModifiedDate":"2021-03-08"},{"lineNumber":354,"author":{"gitId":"samuelfangjw"},"content":"            events.forEach(builder::append);","lastModifiedDate":"2021-03-08"},{"lineNumber":355,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":356,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":357,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cCompletableTodo\u003e todos \u003d getTodos().getSortedTodos();","lastModifiedDate":"2021-03-31"},{"lineNumber":358,"author":{"gitId":"vevek"},"content":"        if (!todos.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":359,"author":{"gitId":"vevek"},"content":"            builder.append(\"; Todos: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":360,"author":{"gitId":"vevek"},"content":"            todos.forEach(builder::append);","lastModifiedDate":"2021-03-13"},{"lineNumber":361,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":362,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":363,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cCompletableDeadline\u003e deadlines \u003d getDeadlines().getSortedDeadlineList();","lastModifiedDate":"2021-03-31"},{"lineNumber":364,"author":{"gitId":"vevek"},"content":"        if (!deadlines.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":365,"author":{"gitId":"vevek"},"content":"            builder.append(\"; Deadlines: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":366,"author":{"gitId":"vevek"},"content":"            deadlines.forEach(builder::append);","lastModifiedDate":"2021-03-13"},{"lineNumber":367,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":368,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":369,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cGroupmate\u003e groupmates \u003d getGroupmates().getSortedGroupmates();","lastModifiedDate":"2021-03-31"},{"lineNumber":370,"author":{"gitId":"lirc572"},"content":"        if (!groupmates.isEmpty()) {","lastModifiedDate":"2021-03-29"},{"lineNumber":371,"author":{"gitId":"lirc572"},"content":"            builder.append(\"; Groupmates: \");","lastModifiedDate":"2021-03-29"},{"lineNumber":372,"author":{"gitId":"lirc572"},"content":"            groupmates.forEach(builder::append);","lastModifiedDate":"2021-03-29"},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":375,"author":{"gitId":"samuelfangjw"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":376,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":377,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":378,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"lirc572":69,"vevek":100,"Eriksen2411":22,"samuelfangjw":187}},{"path":"src/main/java/seedu/address/model/project/ProjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Project\u0027s name.","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectName(String)}","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectName {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"            \"Project name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public final String projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectName}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @param name A valid project name.","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName(String name) {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        checkArgument(isValidProjectName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d name;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if a given string is a valid project name.","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static boolean isValidProjectName(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ProjectName // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projectName.equals(((ProjectName) other).projectName)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return projectName.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/main/java/seedu/address/model/project/ProjectNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Tests that a {@code Project}\u0027s {@code ProjectName} matches any of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameContainsKeywordsPredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(project.getProjectName().projectName, keyword));","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ProjectNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 keywords.equals(((ProjectNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":31}},{"path":"src/main/java/seedu/address/model/project/TodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateTodoException;","lastModifiedDate":"2021-03-26"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Represents a list of Todos.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Todo list ensures that there are no duplicates.","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * Also maintains an internal list of sorted todos.","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"public class TodoList {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cCompletableTodo\u003e todos \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final SortedList\u003cCompletableTodo\u003e sortedTodos \u003d new SortedList\u003c\u003e(todos,","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            Comparator.comparing(CompletableTodo::getDescription, String::compareToIgnoreCase));","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * Constructs a empty {@code TodoList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public TodoList() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code TodoList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param todos A list of {@code Todos}.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public TodoList(List\u003cCompletableTodo\u003e todos) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        requireNonNull(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.todos.addAll(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a todo to this {@code TodoList}. The {@code CompletableTodo} must not already exist in the {@code TodoList}.","lastModifiedDate":"2021-03-26"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * @param todo {@code Todo} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void addTodo(CompletableTodo todo) {","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (hasTodo(todo)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateTodoException();","lastModifiedDate":"2021-03-26"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        this.todos.add(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * Set the {@code Todo} specified by index in the sorted todo list with a new {@code Todo}.","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     * @param i index specifies the target {@code Todo} in the sorted todo list.","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"     * @param todo new {@code Todo} for this index.","lastModifiedDate":"2021-03-27"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"    public void setTodo(Integer i, CompletableTodo todo) {","lastModifiedDate":"2021-03-27"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-27"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        int todoIndex \u003d sortedTodos.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        this.todos.set(todoIndex, todo);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * Get the {@code Todo} specified by index in the sorted list.","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * @param i index specifies the target {@code Todo} in the sorted list.","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"     * @return {@code Todo} at this index.","lastModifiedDate":"2021-03-27"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"    public CompletableTodo getTodo(Integer i) {","lastModifiedDate":"2021-03-27"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-27"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        return this.sortedTodos.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code TodoList} as an {@code SortedList\u003cCompletableTodo\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code SortedList\u003cCompletableTodo\u003e}.","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public SortedList\u003cCompletableTodo\u003e getSortedTodos() {","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        return this.sortedTodos;","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes a todo from this {@code TodoList}.","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     * @param i Index of {@code Todo} to be deleted in the sorted list.","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"    public void deleteTodo(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        int todoIndex \u003d sortedTodos.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        this.todos.remove(todoIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"     * Marks a todo from this {@code TodoList} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * @param i Index of {@code Todo} in the sorted list to be marked as done.","lastModifiedDate":"2021-03-31"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"    public void markAsDone(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todo \u003d sortedTodos.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        int todoIndex \u003d sortedTodos.getSourceIndex(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        // Force observable list to update","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        this.todos.set(todoIndex, todo);","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"Eriksen2411"},"content":"     * Returns a copy of this {@code TodoList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"Eriksen2411"},"content":"     * @return A copy of this {@code TodoList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    public TodoList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        return new TodoList(getSortedTodos());","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"     * Returns a sequential stream with this {@code TodoList} as its source.","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"     * @return a sequential Stream over the Todos in this {@code TodoList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"    public Stream\u003cCompletableTodo\u003e stream() {","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"        return this.todos.stream();","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-26"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if the {@code TodoList} already contains the specified {@code todoToCheck}.","lastModifiedDate":"2021-03-26"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"     * @param todoToCheck The todo that is to be checked.","lastModifiedDate":"2021-03-26"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if this project contains the specified todo, false otherwise.","lastModifiedDate":"2021-03-26"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-26"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasTodo(CompletableTodo todoToCheck) {","lastModifiedDate":"2021-03-26"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        for (CompletableTodo todo: todos) {","lastModifiedDate":"2021-03-26"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"            if (todoToCheck.equals(todo)) {","lastModifiedDate":"2021-03-26"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"                return true;","lastModifiedDate":"2021-03-26"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-26"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-26"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        return false;","lastModifiedDate":"2021-03-26"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":151,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":152,"author":{"gitId":"Eriksen2411"},"content":"     * Checks if a {@code Todo} in the {@code TodoList} done or not.","lastModifiedDate":"2021-03-27"},{"lineNumber":153,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":154,"author":{"gitId":"Eriksen2411"},"content":"     * @param index index of that {@code Todo}.","lastModifiedDate":"2021-03-27"},{"lineNumber":155,"author":{"gitId":"Eriksen2411"},"content":"     * @return true if that {@code Todo} is done, false otherwise.","lastModifiedDate":"2021-03-27"},{"lineNumber":156,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":157,"author":{"gitId":"Eriksen2411"},"content":"    public boolean checkIsDone(Integer index) {","lastModifiedDate":"2021-03-27"},{"lineNumber":158,"author":{"gitId":"Eriksen2411"},"content":"        return todos.get(index).getIsDone();","lastModifiedDate":"2021-03-27"},{"lineNumber":159,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":160,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":161,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-27"},{"lineNumber":162,"author":{"gitId":"Eriksen2411"},"content":"     * Returns the size of the {@code TodoList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":163,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-27"},{"lineNumber":164,"author":{"gitId":"Eriksen2411"},"content":"     * @return size of the {@code TodoList}.","lastModifiedDate":"2021-03-27"},{"lineNumber":165,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-27"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"    public int size() {","lastModifiedDate":"2021-03-27"},{"lineNumber":167,"author":{"gitId":"Eriksen2411"},"content":"        return todos.size();","lastModifiedDate":"2021-03-27"},{"lineNumber":168,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-27"},{"lineNumber":169,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-27"},{"lineNumber":170,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"vevek"},"content":"                || (other instanceof TodoList // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 this.todos.equals(((TodoList) other).todos)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"vevek"},"content":"        return todos.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":74,"Eriksen2411":39,"samuelfangjw":69}},{"path":"src/main/java/seedu/address/model/project/UniqueProjectList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * A list of projects that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * A project is considered unique by comparing using {@code Project#isSameProject(Project)}. As such, adding and","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * updating of projects uses Project#isSameProject(Project) for equality so as to ensure that the project being added","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * or updated is unique in terms of identity in the UniqueProjectList. However, the removal of a project uses","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" * Project#equals(Object) so as to ensure that the project with exactly the same fields will be removed.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" * @see Project#isSameProject(Project)","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"public class UniqueProjectList implements Iterable\u003cProject\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if the list contains an equivalent project as the given argument.","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public boolean contains(Project toCheck) {","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProject);","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a project to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * The project must not already exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public void add(Project toAdd) {","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        if (!target.isSameProject(editedProject) \u0026\u0026 contains(editedProject)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        internalList.set(index, editedProject);","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * Removes the equivalent project from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * The project must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public void remove(Project toRemove) {","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-08"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(UniqueProjectList replacement) {","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-08"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the contents of this list with {@code projects}.","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projects);","lastModifiedDate":"2021-03-08"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        if (!projectsAreUnique(projects)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e copyOfProjects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : projects) {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"            copyOfProjects.add(project.getCopy());","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        internalList.setAll(copyOfProjects);","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    public Iterator\u003cProject\u003e iterator() {","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof UniqueProjectList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 internalList.equals(((UniqueProjectList) other).internalList));","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if {@code projects} contains only unique projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    private boolean projectsAreUnique(List\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        for (int i \u003d 0; i \u003c projects.size() - 1; i++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"            for (int j \u003d i + 1; j \u003c projects.size(); j++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"                if (projects.get(i).isSameProject(projects.get(j))) {","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                    return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"                }","lastModifiedDate":"2021-03-08"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":147}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateDeadlineException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation will result in duplicate Deadlines.","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class DuplicateDeadlineException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public DuplicateDeadlineException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Operation would result in duplicate deadlines.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation will result in duplicate Events.","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Operation would result in duplicate events.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateGroupmateException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":" * Signals that the operation will result in duplicate Groupmates (Groupmates are considered duplicates if they have","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":" * the same name).","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"public class DuplicateGroupmateException extends RuntimeException {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    public DuplicateGroupmateException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"        super(\"Operation would result in duplicate groupmates\");","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":11}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateProjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation will result in duplicate Projects (Projects are considered duplicates if they have the","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" * same identity).","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"public class DuplicateProjectException extends RuntimeException {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    public DuplicateProjectException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Operation would result in duplicate projects\");","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":11}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateTodoException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-26"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation will result in duplicate Todos.","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-26"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class DuplicateTodoException extends RuntimeException {","lastModifiedDate":"2021-03-26"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    public DuplicateTodoException() {","lastModifiedDate":"2021-03-26"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Operation would result in duplicate todos.\");","lastModifiedDate":"2021-03-26"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-26"}],"authorContributionMap":{"samuelfangjw":10}},{"path":"src/main/java/seedu/address/model/project/exceptions/ProjectNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation is unable to find the specified project.","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":6}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Tag.","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/model/task/CompletableDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public abstract class CompletableDeadline {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    protected String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    public CompletableDeadline(String description, LocalDate by) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, by);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-03-12"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the CompletableDeadline is Done.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public CompletableDeadline(String description, LocalDate by, Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, by, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-03-12"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * Returns the deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate representing the deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        assert this.by !\u003d null : \"by should not be null!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        return this.by;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableDeadline description.","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"     * @return A String representing the CompletableDeadline description.","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"        return this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableDeadline description.","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"     * Returns the status of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the CompletableDeadline\u0027s status.","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        return this.isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the by date.","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"     * @return String representation of by date.","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    public String getStringByDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"        assert this.by !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"        return DateUtil.decodeDateForStorage(by);","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    };","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a CompletableDeadline is equal to another Object.","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":119,"samuelfangjw":18}},{"path":"src/main/java/seedu/address/model/task/CompletableTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"public abstract class CompletableTodo {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    protected String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public CompletableTodo(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the CompletableTodo is Done.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public CompletableTodo(String description, Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(description, isDone);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableTodo description.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * @return A String representing the CompletableTodo description.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableTodo description.","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     * Returns the status of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the CompletableTodo\u0027s status.","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        return this.isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a CompletableTodo is equal to another Object.","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":100,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/model/task/Interval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Recognised Intervals of Interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public enum Interval {","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    NONE,","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"    DAILY,","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    WEEKLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"    FORTNIGHTLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"    MONTHLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    YEARLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":13}},{"path":"src/main/java/seedu/address/model/task/Repeatable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"public abstract class Repeatable {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    protected String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    protected Boolean isWeekly;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    protected LocalDate date;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    protected LocalTime time;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * @param date Date of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     * @param time Time of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public Repeatable(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, date, time);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.isWeekly \u003d false;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * @param date Date of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * @param time Time of the Repeatable.","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * @param isWeekly isWeekly Status of the Repeatable","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public Repeatable(String description, LocalDate date, LocalTime time, Boolean isWeekly) {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, date, time, isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        this.isWeekly \u003d isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"     * Returns the Repeatable description.","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     * @return A String representing the Repeatable description.","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        return this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"     * Returns the date of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate representing the Repeatable\u0027s date.","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        assert this.date !\u003d null : \"date should not be null!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        return this.date;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"     * Returns the time of the Repeatable.","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"     * @return A LocalTime representing the Repeatable\u0027s time.","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        assert this.time !\u003d null : \"time should not be null!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        return this.time;","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"     * Returns the isWeekly status of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the Repeatable\u0027s isWeekly status.","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    public abstract Boolean getIsWeekly();","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Repeatable is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":113}},{"path":"src/main/java/seedu/address/model/task/deadline/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":" * Represents a CompletableDeadline as a Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"public class Deadline extends CompletableDeadline {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        super(description, by);","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Deadline is Done.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public Deadline(String description, LocalDate by, Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        super(description, by, isDone);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Deadline is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        return otherDeadline.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherDeadline.getIsDone().equals(getIsDone())","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherDeadline.getBy().equals(getBy());","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone, by);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        return this.description + \" (by: \" + DateUtil.decodeDate(by) + \")\";","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"vevek":65,"samuelfangjw":3}},{"path":"src/main/java/seedu/address/model/task/deadline/DeadlineWithProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.task.deadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * A dateline with an associated project name.","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class DeadlineWithProject extends CompletableDeadline {","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectName projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code DeadlineWithProject} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * @param deadline The {@code CompletableDeadline}.","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectName Project name to be associated with deadline.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineWithProject(CompletableDeadline deadline, ProjectName projectName) {","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        super(deadline.getDescription(), deadline.getBy(), deadline.getIsDone());","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName getProjectName() {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof DeadlineWithProject)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineWithProject otherDeadline \u003d (DeadlineWithProject) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        return otherDeadline.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherDeadline.getIsDone().equals(getIsDone())","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherDeadline.getBy().equals(getBy())","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherDeadline.getProjectName().equals(getProjectName());","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(description, isDone, by, projectName);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return this.description + \" (by: \" + DateUtil.decodeDate(by) + \") with project \" + projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":56}},{"path":"src/main/java/seedu/address/model/task/repeatable/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.repeatable;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Repeatable;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" * Represents a Repeatable as an Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"public class Event extends Repeatable {","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * @param date Date of the Event.","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * @param time Time of the Event.","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public Event(String description, LocalDate date, LocalTime time) {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        super(description, date, time);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param date Date of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @param time Time of the Repeatable.","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * @param isWeekly isWeekly Status of the Repeatable","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public Event(String description, LocalDate date, LocalTime time, Boolean isWeekly) {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        super(description, date, time, isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * Returns the isWeekly status of the Event.","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the Event\u0027s isWeekly status.","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public Boolean getIsWeekly() {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assert this.isWeekly !\u003d null;","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        return this.isWeekly;","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Event is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return otherEvent.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherEvent.getIsWeekly().equals(getIsWeekly())","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isWeekly, date, time);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        if (!getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"            return this.description + \" (on: \" + DateUtil.decodeDate(date) + \" at:\" + TimeUtil.decodeTime(time) + \")\";","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        return this.description + \" (every \" + DateUtil.decodeDateIntoDay(date) + \" at:\" + TimeUtil.decodeTime(time)","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"                + \")\";","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":84,"samuelfangjw":8}},{"path":"src/main/java/seedu/address/model/task/repeatable/EventWithProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.task.repeatable;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Repeatable;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * An event with an associated project name.","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class EventWithProject extends Repeatable {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectName projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructor for EventWithProject.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param repeatable The {@code Repeatable}.","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectName The project name to be associated with this event.","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public EventWithProject(Repeatable repeatable, ProjectName projectName) {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        super(repeatable.getDescription(), repeatable.getDate(), repeatable.getTime(), repeatable.getIsWeekly());","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the isWeekly status of the EventWithProject.","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * @return A Boolean representing the EventWithProject\u0027s isWeekly status.","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public Boolean getIsWeekly() {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assert this.isWeekly !\u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        return this.isWeekly;","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName getProjectName() {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * Checks if an instance of a EventWithProject is equal to another Object.","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof EventWithProject)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        EventWithProject otherEvent \u003d (EventWithProject) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        return otherEvent.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherEvent.getIsWeekly().equals(getIsWeekly())","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherEvent.getTime().equals(getTime())","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherEvent.getDate().equals(getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(description, isWeekly, date, time, projectName);","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a String representation of the EventWithProject.","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     * @return A String representation of the EventWithProject.","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        if (!getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            return this.description + \" (on: \" + DateUtil.decodeDate(date) + \" at:\" + TimeUtil.decodeTime(time)","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"                    + \") with project \" + projectName.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        return this.description + \" (every \" + DateUtil.decodeDateIntoDay(date) + \" at:\" + TimeUtil.decodeTime(time)","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                + \") with project \" + projectName.toString();","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":85}},{"path":"src/main/java/seedu/address/model/task/repeatable/RepeatableComparator.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.task.repeatable;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Repeatable;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * A comparator for the repeatable class.","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class RepeatableComparator implements Comparator\u003cRepeatable\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public int compare(Repeatable r1, Repeatable r2) {","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        int compareDays \u003d Integer.compare(daysTo(r1), daysTo(r2));","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        if (compareDays !\u003d 0) {","lastModifiedDate":"2021-04-05"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"            return compareDays;","lastModifiedDate":"2021-04-05"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-04-05"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            int compareTime \u003d r1.getTime().compareTo(r2.getTime());","lastModifiedDate":"2021-04-05"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            return compareTime !\u003d 0 ? compareTime : r1.getDescription().compareTo(r2.getDescription());","lastModifiedDate":"2021-04-05"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-04-05"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private int daysTo(Repeatable repeatable) {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate date \u003d repeatable.getDate();","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        if (repeatable.getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            int dayOfRepeatable \u003d date.getDayOfWeek().getValue();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            int dayOfToday \u003d today.getDayOfWeek().getValue();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            if (dayOfRepeatable \u003c dayOfToday) {","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                dayOfRepeatable +\u003d 7;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            return dayOfRepeatable - dayOfToday;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            return today.until(date).getDays();","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/main/java/seedu/address/model/task/todo/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":" * Represents a CompletableTodo as a Todo.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"public class Todo extends CompletableTodo {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        super(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Todo is Done.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        super(description, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Todo is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        Todo otherTodo \u003d (Todo) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        return otherTodo.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherTodo.getIsDone().equals(getIsDone());","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone);","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return this.description;","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":62,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.TimeUtil.encodeTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.GroupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":" * Contains utility methods for populating {@code ColabFolder} with sample data.","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DONE \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public static ReadOnlyColabFolder getSampleColabFolder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder sampleAb \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        for (Contact sampleContact : getSampleContacts()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"            sampleAb.addContact(sampleContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        for (Project sampleProject : getSampleProjects()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            sampleAb.addProject(sampleProject);","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        return sampleAb;","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public static Contact[] getSampleContacts() {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        return new Contact[] {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"            new Contact(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"            new Contact(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"            new Contact(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"            new Contact(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            new Contact(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"            new Contact(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code Set\u003cTag\u003e} containing the list of strings given.","lastModifiedDate":"2021-03-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"     * Returns a role set containing the list of strings given.","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"     * @return A {@code Set\u003cRole\u003e} containing the list of strings given.","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"    public static Set\u003cRole\u003e getRoleSet(String... strings) {","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"                .map(Role::new)","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     * Returns an array of sample {@code Projects}","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     * @return sample {@code Projects}","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    public static Project[] getSampleProjects() {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            return new Project[] { getCS2103TProject(), getCS2101Project(), getWebDevProject() };","lastModifiedDate":"2021-04-01"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"        } catch (DateConversionException | TimeConversionException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"            assert false : \"error with sample projects\";","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"            return new Project[] {}; // return empty projects array","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2103T project.","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"    public static Project getCS2103TProject() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d new ProjectName(\"CS2103T Team Project\");","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(projectName, getCS2103TEventList(), getCS2103TTodosList(),","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"                getCS2103TDeadlineList(), getCS2103TGroupmateList());","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2101 project.","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-26"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"    public static Project getCS2101Project() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d new ProjectName(\"CS2101 OP2\");","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(projectName, getCS2101EventList(), getCS2101TodosList(),","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"                getCS2101DeadlineList(), getCS2101GroupmateList());","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new Web Dev Project.","lastModifiedDate":"2021-04-01"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-04-01"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-04-01"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-04-01"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    public static Project getWebDevProject() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-04-01"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d new ProjectName(\"Web Dev Project\");","lastModifiedDate":"2021-04-01"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(projectName, getWebDevEventList(), getWebDevTodosList(),","lastModifiedDate":"2021-04-01"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                getWebDevDeadlineList(), getWebDevGroupmateList());","lastModifiedDate":"2021-04-01"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"    private static EventList getCS2103TEventList() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        Event eventWeeklyMeeting \u003d new Event(\"Weekly Project Meeting\",","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"31-01-2021\"), encodeTime(\"1730\") , true);","lastModifiedDate":"2021-04-01"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        Event eventPracticalDryRun \u003d new Event(\"Practical Exam Dry Run\",","lastModifiedDate":"2021-04-01"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"03-04-2021\"), encodeTime(\"1400\"), false);","lastModifiedDate":"2021-04-01"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        Event eventPractical \u003d new Event(\"Practical Exam\",","lastModifiedDate":"2021-04-01"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"16-04-2021\"), encodeTime(\"1400\"), false);","lastModifiedDate":"2021-04-01"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventWeeklyMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventPracticalDryRun);","lastModifiedDate":"2021-04-01"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventPractical);","lastModifiedDate":"2021-04-01"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2103TDeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone1 \u003d new Deadline(\"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"01-03-2021\"), DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone2 \u003d new Deadline(\"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"15-03-2021\"), DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone3 \u003d new Deadline(\"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"31-03-2021\"), DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone4 \u003d new Deadline(\"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"12-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone1);","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone2);","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone3);","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone4);","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"    private static TodoList getCS2103TTodosList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoUpdateDocs \u003d new Todo(\"Update documentation\", DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoAddCommand \u003d new Todo(\"Finish add command\", DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoTests \u003d new Todo(\"Add unit tests\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoBrainstormNewIdea \u003d new Todo(\"Brainstorm new feature\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoUpdateDocs);","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoAddCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoTests);","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoBrainstormNewIdea);","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"    private static GroupmateList getCS2103TGroupmateList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"        HashSet\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        roles.add(new Role(\"Developer\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate danh \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Danh\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate ruochen \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Ruochen\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate samuel \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Samuel\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate vevek \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Vevek\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(danh);","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(ruochen);","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(samuel);","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(vevek);","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"lirc572"},"content":"        return groupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"vevek"},"content":"    private static EventList getCS2101EventList() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"        Event eventPlanningMeeting \u003d new Event(\"OP2 Planning Meeting\",","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"vevek"},"content":"                encodeDate(\"17-03-2021\"), encodeTime(\"2000\"), false","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Consultation \u003d new Event(\"OP2 Consultation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"vevek"},"content":"                encodeDate(\"23-03-2021\"), encodeTime(\"1000\"), false","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2ProductDemo \u003d new Event(\"OP2 Product Demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"vevek"},"content":"                encodeDate(\"06-04-2021\"), encodeTime(\"1000\"), false","lastModifiedDate":"2021-03-29"},{"lineNumber":220,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Pitch \u003d new Event(\"OP2 Pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"vevek"},"content":"                encodeDate(\"09-04-2021\"), encodeTime(\"1000\"), false","lastModifiedDate":"2021-03-29"},{"lineNumber":223,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventPlanningMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Consultation);","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2ProductDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Pitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2101DeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineDemo \u003d new Deadline(\"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"03-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlinePitch \u003d new Deadline(\"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"06-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlinePitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"lirc572"},"content":"    private static TodoList getCS2101TodosList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSplitWorkload \u003d new Todo(\"Split Workload\", DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSlidesForPitch \u003d new Todo(\"Do up slides for pitch\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoVideoForDemo \u003d new Todo(\"Do up video for demo\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSplitWorkload);","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSlidesForPitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoVideoForDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"lirc572"},"content":"    private static GroupmateList getCS2101GroupmateList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"        HashSet\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"        roles.add(new Role(\"Team_Member\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate danh \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Danh\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate ruochen \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Ruochen\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate samuel \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Samuel\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate vevek \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Vevek\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-04-01"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        groupmateList.addGroupmate(danh);","lastModifiedDate":"2021-04-01"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"        groupmateList.addGroupmate(ruochen);","lastModifiedDate":"2021-04-01"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"        groupmateList.addGroupmate(samuel);","lastModifiedDate":"2021-04-01"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"        groupmateList.addGroupmate(vevek);","lastModifiedDate":"2021-04-01"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"        return groupmateList;","lastModifiedDate":"2021-04-01"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"    private static EventList getWebDevEventList() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-04-01"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"        Event eventMeeting \u003d new Event(\"Web Dev Meeting\",","lastModifiedDate":"2021-04-01"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"02-04-2021\"), encodeTime(\"2000\"), true","lastModifiedDate":"2021-04-01"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-04-01"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-04-01"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventMeeting);","lastModifiedDate":"2021-04-01"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-04-01"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getWebDevDeadlineList() throws DateConversionException {","lastModifiedDate":"2021-04-01"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineFirst \u003d new Deadline(\"First draft\",","lastModifiedDate":"2021-04-01"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"03-04-2021\"), DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineSecond \u003d new Deadline(\"Second draft\",","lastModifiedDate":"2021-04-01"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"16-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-04-01"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineFirst);","lastModifiedDate":"2021-04-01"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineSecond);","lastModifiedDate":"2021-04-01"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-04-01"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getWebDevTodosList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoWriteTests \u003d new Todo(\"Write unit tests\", NOT_DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoStyle \u003d new Todo(\"Style buttons\", DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoHeader \u003d new Todo(\"Do up header component\", NOT_DONE);","lastModifiedDate":"2021-04-01"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-04-01"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoWriteTests);","lastModifiedDate":"2021-04-01"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoStyle);","lastModifiedDate":"2021-04-01"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoHeader);","lastModifiedDate":"2021-04-01"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-04-01"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-04-01"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"    private static GroupmateList getWebDevGroupmateList() {","lastModifiedDate":"2021-04-01"},{"lineNumber":315,"author":{"gitId":"samuelfangjw"},"content":"        HashSet\u003cRole\u003e roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-04-01"},{"lineNumber":316,"author":{"gitId":"samuelfangjw"},"content":"        roles.add(new Role(\"Web_Developer\"));","lastModifiedDate":"2021-04-01"},{"lineNumber":317,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate danh \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Danh\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":318,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate ruochen \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Ruochen\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":319,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate samuel \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Samuel\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":320,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate vevek \u003d new Groupmate(new seedu.address.model.groupmate.Name(\"Vevek\"), roles);","lastModifiedDate":"2021-04-01"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":322,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":323,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(danh);","lastModifiedDate":"2021-03-29"},{"lineNumber":324,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(ruochen);","lastModifiedDate":"2021-03-29"},{"lineNumber":325,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(samuel);","lastModifiedDate":"2021-03-29"},{"lineNumber":326,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(vevek);","lastModifiedDate":"2021-03-29"},{"lineNumber":327,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":328,"author":{"gitId":"lirc572"},"content":"        return groupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":329,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":330,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"lirc572":47,"vevek":16,"-":40,"samuelfangjw":227}},{"path":"src/main/java/seedu/address/storage/ColabFolderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Represents a storage for {@link ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public interface ColabFolderStorage {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    Path getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * Returns ColabFolder data as a {@link ReadOnlyColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@link ReadOnlyColabFolder} or {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    Optional\u003cReadOnlyColabFolder\u003e readColabFolder() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * @see #getColabFolderFilePath()","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    Optional\u003cReadOnlyColabFolder\u003e readColabFolder(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Saves the given {@link ReadOnlyColabFolder} to the storage.","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * @param colabFolder cannot be null.","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    void saveColabFolder(ReadOnlyColabFolder colabFolder) throws IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * @see #saveColabFolder(ReadOnlyColabFolder)","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    void saveColabFolder(ReadOnlyColabFolder colabFolder, Path filePath) throws IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"samuelfangjw":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"class JsonAdaptedContact {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code JsonAdaptedContact} with the given contact details.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public JsonAdaptedContact(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     * Converts this Jackson-friendly adapted contact object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        final List\u003cTag\u003e contactTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"            contactTags.add(tag.toModelType());","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(contactTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        return new Contact(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lirc572":19,"-":90}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Jackson-friendly version of {@link CompletableDeadline}.","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"class JsonAdaptedDeadline {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final String by;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code description}, {@code interval},","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * {@code at} and {@code isDone}.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedDeadline(@JsonProperty(\"description\")String description,","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                               @JsonProperty(\"date\") String by,","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                               @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * Converts a given {@code Deadline} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedDeadline(CompletableDeadline source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        by \u003d source.getStringByDate();","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d source.getIsDone();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Deadline} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    public CompletableDeadline toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Deadline description should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        if (isDone \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Deadline isDone should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        if (by \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Deadline by date should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            LocalDate date \u003d DateUtil.encodeDate(by);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"            return new Deadline(description, date , isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":10,"samuelfangjw":60}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    private final String date;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    private final String time;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    private final Boolean isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code description}, {@code date},","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * {@code time} and {@code isWeekly}.","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"description\")String description,","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"                            @JsonProperty(\"date\") String date,","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"                            @JsonProperty(\"time\") String time,","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"                            @JsonProperty(\"isWeekly\") Boolean isWeekly) {","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.isWeekly \u003d isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        date \u003d DateUtil.decodeDateForStorage(source.getDate());","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        time \u003d TimeUtil.decodeTime(source.getTime());","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        isWeekly \u003d source.getIsWeekly();","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Event description should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Event date should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        LocalDate encodedDate;","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"            encodedDate \u003d DateUtil.encodeDate(date);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        if (time \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Event time should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        LocalTime encodedTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"            encodedTime \u003d TimeUtil.encodeTime(time);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        } catch (TimeConversionException e) {","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        if (isWeekly \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Event isWeekly should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        return new Event(description, encodedDate, encodedTime, isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":4,"vevek":24,"samuelfangjw":59}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroupmate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":" * Jackson-friendly version of {@link Groupmate}.","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"class JsonAdaptedGroupmate {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Groupmate\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    private final String name;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    private final List\u003cJsonAdaptedRole\u003e roles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code JsonAdaptedGroupmate} with the given groupmate details.","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public JsonAdaptedGroupmate(@JsonProperty(\"name\") String name,","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"                                @JsonProperty(\"roles\") List\u003cJsonAdaptedRole\u003e roles) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        if (roles !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"            this.roles.addAll(roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     * Converts a given {@code Groupmate} into this class for Jackson use.","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public JsonAdaptedGroupmate(Groupmate source) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        roles.addAll(source.getRoles().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"                .map(JsonAdaptedRole::new)","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     * Converts this Jackson-friendly adapted Groupmate object into the model\u0027s {@code Groupmate} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted groupmate.","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    public Groupmate toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        final List\u003cRole\u003e groupmateRoles \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        for (JsonAdaptedRole role : roles) {","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"            groupmateRoles.add(role.toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        final Set\u003cRole\u003e modelRoles \u003d new HashSet\u003c\u003e(groupmateRoles);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        return new Groupmate(modelName, modelRoles);","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":72,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.GroupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * Jackson-friendly version of {@link Project}.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"class JsonAdaptedProject {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Project\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final String projectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cJsonAdaptedEvent\u003e eventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private final List\u003cJsonAdaptedTodo\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    private final List\u003cJsonAdaptedDeadline\u003e deadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    private final List\u003cJsonAdaptedGroupmate\u003e groupmateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code JsonAdaptedProject} with the given project details.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedProject(@JsonProperty(\"projectName\") String projectName,","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                              @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e eventList,","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                              @JsonProperty(\"todos\") List\u003cJsonAdaptedTodo\u003e todoList,","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"                              @JsonProperty(\"deadlines\") List\u003cJsonAdaptedDeadline\u003e deadlineList,","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"                              @JsonProperty(\"groupmates\") List\u003cJsonAdaptedGroupmate\u003e groupmateList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        if (eventList !\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            this.eventList.addAll(eventList);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        if (todoList !\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"            this.todoList.addAll(todoList);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        if (deadlineList !\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"            this.deadlineList.addAll(deadlineList);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        if (groupmateList !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"            this.groupmateList.addAll(groupmateList);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * Converts a given {@code Project} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedProject(Project source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d source.getProjectName().toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addAll(source.getEvents().stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                .map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        todoList.addAll(source.getTodos().stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                .map(JsonAdaptedTodo::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        deadlineList.addAll(source.getDeadlines().stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"                .map(JsonAdaptedDeadline::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        groupmateList.addAll(source.getGroupmates().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"                .map(JsonAdaptedGroupmate::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * Converts this Jackson-friendly adapted project object into the model\u0027s {@code Project} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted project.","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    public Project toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        if (projectName \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                    ProjectName.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName convertedProjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"            convertedProjectName \u003d new ProjectName(projectName);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        final List\u003cEvent\u003e projectEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        for (JsonAdaptedEvent event : eventList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            projectEvents.add(event.toModelType());","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"        final List\u003cCompletableTodo\u003e projectTodos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        for (JsonAdaptedTodo todo : todoList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"            projectTodos.add(todo.toModelType());","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"        final List\u003cCompletableDeadline\u003e projectDeadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"        for (JsonAdaptedDeadline deadline : deadlineList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"            projectDeadlines.add(deadline.toModelType());","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        final List\u003cGroupmate\u003e projectContacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        for (JsonAdaptedGroupmate groupmate : groupmateList) {","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"            projectContacts.add(groupmate.toModelType());","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(convertedProjectName, new EventList(projectEvents), new TodoList(projectTodos),","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"                new DeadlineList(projectDeadlines), new GroupmateList(projectContacts));","lastModifiedDate":"2021-03-29"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":12,"vevek":26,"samuelfangjw":83}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedRole.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" * Jackson-friendly version of {@link Role}.","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"class JsonAdaptedRole {","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    private final String roleName;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code JsonAdaptedRole} with the given {@code roleName}.","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public JsonAdaptedRole(String roleName) {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        this.roleName \u003d roleName;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     * Converts a given {@code Role} into this class for Jackson use.","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public JsonAdaptedRole(Role source) {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        roleName \u003d source.roleName;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    @JsonValue","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public String getRoleName() {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        return roleName;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"     * Converts this Jackson-friendly adapted role object into the model\u0027s {@code Role} object.","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted role.","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    public Role toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        if (roleName \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Role should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        if (!Role.isValidRoleName(roleName)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        return new Role(roleName);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":48,"samuelfangjw":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        if (tagName \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Tag should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":48,"samuelfangjw":4}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" * Jackson-friendly version of {@link CompletableTodo}.","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"class JsonAdaptedTodo {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    private final String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code description} and {@code isDone}.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedTodo(@JsonProperty(\"description\")String description,","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"                           @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * Converts a given {@code CompletableTodo} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedTodo(CompletableTodo source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        isDone \u003d source.getIsDone();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code CompletableTodo} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public CompletableTodo toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Todo description should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        if (isDone \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(\"Todo isDone should not be null.\");","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":43,"samuelfangjw":8}},{"path":"src/main/java/seedu/address/storage/JsonColabFolderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * A class to access ColabFolder data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"public class JsonColabFolderStorage implements ColabFolderStorage {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonColabFolderStorage.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public JsonColabFolderStorage(Path filePath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public Path getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyColabFolder\u003e readColabFolder() throws DataConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return readColabFolder(filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * Similar to {@link #readColabFolder()}.","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyColabFolder\u003e readColabFolder(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        Optional\u003cJsonSerializableColabFolder\u003e jsonColabFolder \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                filePath, JsonSerializableColabFolder.class);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (!jsonColabFolder.isPresent()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            return Optional.of(jsonColabFolder.get().toModelType());","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalValueException | NullPointerException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + e.getMessage());","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    public void saveColabFolder(ReadOnlyColabFolder colabFolder) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        saveColabFolder(colabFolder, filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * Similar to {@link #saveColabFolder(ReadOnlyColabFolder)}.","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public void saveColabFolder(ReadOnlyColabFolder colabFolder, Path filePath) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(colabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableColabFolder(colabFolder), filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":57,"samuelfangjw":23}},{"path":"src/main/java/seedu/address/storage/JsonSerializableColabFolder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * An Immutable ColabFolder that is serializable to JSON format.","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"@JsonRootName(value \u003d \"colab\")","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"class JsonSerializableColabFolder {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACTS \u003d \"Contact list contains duplicate contact(s).\";","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECTS \u003d \"Contact list contains duplicate project(s).\";","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cJsonAdaptedProject\u003e projects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     * Constructs a {@code JsonSerializableColabFolder} with the given contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public JsonSerializableColabFolder(@JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts,","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                                       @JsonProperty(\"projects\") List\u003cJsonAdaptedProject\u003e projects) {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        this.projects.addAll(projects);","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * Converts a given {@code ReadOnlyColabFolder} into this class for Jackson use.","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public JsonSerializableColabFolder(ReadOnlyColabFolder source) {","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        contacts.addAll(source.getContactList().stream().map(JsonAdaptedContact::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        projects.addAll(source.getProjectsList().stream().map(JsonAdaptedProject::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Converts this CoLAB folder into the model\u0027s {@code ColabFolder} object.","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolder toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        for (JsonAdaptedContact jsonAdaptedContact : contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"            Contact contact \u003d jsonAdaptedContact.toModelType();","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"            if (colabFolder.hasContact(contact)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTACTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"            colabFolder.addContact(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        for (JsonAdaptedProject jsonAdaptedProject : projects) {","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            Project project \u003d jsonAdaptedProject.toModelType();","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            if (colabFolder.hasProject(project)) {","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROJECTS);","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            colabFolder.addProject(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":13,"samuelfangjw":63}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public interface Storage extends ColabFolderStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    Path getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    Optional\u003cReadOnlyColabFolder\u003e readColabFolder() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    void saveColabFolder(ReadOnlyColabFolder colabFolder) throws IOException;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":26,"samuelfangjw":5}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Manages storage of ColabFolder data in local storage.","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private ColabFolderStorage colabFolderStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code StorageManager} with the given {@code ColabFolderStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public StorageManager(ColabFolderStorage colabFolderStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolderStorage \u003d colabFolderStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ColabFolder methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public Path getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolderStorage.getColabFolderFilePath();","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyColabFolder\u003e readColabFolder() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        return readColabFolder(colabFolderStorage.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyColabFolder\u003e readColabFolder(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolderStorage.readColabFolder(filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public void saveColabFolder(ReadOnlyColabFolder colabFolder) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        saveColabFolder(colabFolder, colabFolderStorage.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    public void saveColabFolder(ReadOnlyColabFolder colabFolder, Path filePath) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        colabFolderStorage.saveColabFolder(colabFolder, filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":61,"samuelfangjw":17}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commandhistory.CommandHistory;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final CommandHistory commandHistory \u003d CommandHistory.getCommandHistory();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Handles the UP and DOWN key code pressed event for navigating through the {@code CommandHistory}.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    private void handleKeyPressed(KeyEvent keyEvent) {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        if (keyEvent.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            handleUpPressed();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        } else if (keyEvent.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"            handleDownPressed();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    private void handleUpPressed() {","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        String previousCommand \u003d commandTextField.getText();","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        String command \u003d commandHistory.getPrevious(previousCommand);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        if (!previousCommand.equals(command)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            setStyleToDefault();","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        commandTextField.setText(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        commandTextField.end();","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    private void handleDownPressed() {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        String command \u003d commandHistory.getNext(commandTextField.getText());","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        commandTextField.setText(command);","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        commandTextField.end();","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            commandHistory.addCommand(commandText);","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":85,"samuelfangjw":36}},{"path":"src/main/java/seedu/address/ui/CommandSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.property.SimpleStringProperty;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * Class that encapsulates information about a command and it\u0027s syntax to display to the user.","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"public class CommandSyntax {","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    private SimpleStringProperty command;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    private SimpleStringProperty usage;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code CommandSyntax} object with the given {@code command} and {@code usage}","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     * @param command Details about the command.","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * @param usage Details about the usage of a command.","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public CommandSyntax(String command, String usage) {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        this.command \u003d new SimpleStringProperty(command);","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        this.usage \u003d new SimpleStringProperty(usage);","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public String getCommand() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        return command.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public String getUsage() {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        return usage.get();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":29}},{"path":"src/main/java/seedu/address/ui/CompletableDeadlineCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code CompletableDeadline}.","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableDeadlineCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"CompletableDeadlineCard.fxml\";","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public final CompletableDeadline deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private Label description;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private Label day;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private Label completedLabel;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code CompletableDeadlineCard} with the given {@code CompletableDeadline} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableDeadlineCard(CompletableDeadline deadline, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(deadline, displayedIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        description.setText(deadline.getDescription());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        date.setText(DateUtil.decodeDate(deadline.getBy()));","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        day.setText(DateUtil.decodeDateIntoDay(deadline.getBy()));","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel.setText(getTextToDisplay(deadline.getIsDone()));","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the text of the completed label that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code String} containing the text that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public static String getTextToDisplay(boolean isDone) {","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        return isDone ? \"✔\" : \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof CompletableDeadlineCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard card \u003d (CompletableDeadlineCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 deadline.equals(card.deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":75}},{"path":"src/main/java/seedu/address/ui/CompletableTodoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code CompletableTodo}.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTodoCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"CompletableTodoCard.fxml\";","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public final CompletableTodo todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private Label description;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label completedLabel;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code CompletableTodoCard} with the given {@code CompletableTodo} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTodoCard(CompletableTodo todo, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        description.setText(todo.getDescription());","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel.setText(todo.getIsDone() ? \"✔\" : \"\");","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the text of the completed label that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code String} containing the text that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public static String getTextToDisplay(boolean isDone) {","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        return isDone ? \"✔\" : \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof CompletableTodoCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard card \u003d (CompletableTodoCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 todo.equals(card.todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":64}},{"path":"src/main/java/seedu/address/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":" * An UI component that displays information of a {@code Contact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private static final String FXML \u003d \"ContactListCard.fxml\";","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public final Contact contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    private HBox tags;","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * Creates a {@code ContactCard} with the given {@code Contact} and index to display.","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public ContactCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        name.setText(contact.getName().fullName);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        phone.setText(contact.getPhone().value);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        address.setText(contact.getAddress().value);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        email.setText(contact.getEmail().value);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        contact.getTags().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        if (!(other instanceof ContactCard)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        ContactCard card \u003d (ContactCard) other;","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 contact.equals(card.contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lirc572":16,"-":59,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/ui/ContactListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":" * Panel containing the list of contacts.","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class ContactListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private static final String FXML \u003d \"ContactListPanel.fxml\";","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactListPanel.class);","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cContact\u003e contactListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final Label noContactsLabel \u003d new Label();","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane contactListViewPlaceholder;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * Creates a {@code ContactListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public ContactListPanel(ObservableList\u003cContact\u003e contactList) {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        contactListView.setItems(contactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        contactListView.setCellFactory(listView -\u003e new ContactListViewCell());","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        if (contactListView.getItems().isEmpty()) {","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            noContactsLabel.setText(\"You have no contacts!\");","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            contactListViewPlaceholder.getChildren().add(noContactsLabel);","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            contactListViewPlaceholder.getChildren().add(contactListView);","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Contact} using a {@code ContactCard}.","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    class ContactListViewCell extends ListCell\u003cContact\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        protected void updateItem(Contact contact, boolean empty) {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"            super.updateItem(contact, empty);","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"            if (empty || contact \u003d\u003d null) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                setGraphic(new ContactCard(contact, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lirc572":15,"-":33,"samuelfangjw":13}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"EventCard.fxml\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public final Event event;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private Label eventDescription;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label day;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    private Label time;","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(event, displayedIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        eventDescription.setText(event.getDescription());","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        day.setText(DateUtil.decodeDateIntoDay(event.getDate()));","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        time.setText(TimeUtil.decodeTime(event.getTime()));","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        if (event.getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            date.setText(\"every\");","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            date.setText(DateUtil.decodeDate(event.getDate()));","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":4,"samuelfangjw":68}},{"path":"src/main/java/seedu/address/ui/GroupmateCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":" * An UI component that displays information of a {@code Groupmate}.","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class GroupmateCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private static final String FXML \u003d \"GroupmateCard.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    public final Groupmate groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    private Label name;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    private Label id;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private HBox roles;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     * Creates a {@code GroupmateCard} with the given {@code Groupmate} and index to display.","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public GroupmateCard(Groupmate groupmate, int displayedIndex) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        super(FXML);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        this.groupmate \u003d groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        name.setText(groupmate.getName().fullName);","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        groupmate.getRoles().stream()","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"                .sorted(Comparator.comparing(role -\u003e role.roleName))","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"                .forEach(role -\u003e roles.getChildren().add(new Label(role.roleName)));","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"            return true;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        if (!(other instanceof GroupmateCard)) {","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"            return false;","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        // state check","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        GroupmateCard card \u003d (GroupmateCard) other;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 groupmate.equals(card.groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":58,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/ui/HelpPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TableColumn;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TableView;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.cell.PropertyValueFactory;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Controller for a help page","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class HelpPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public static final String HELP_MESSAGE \u003d \"The detailed user guide can be found at: \" + USERGUIDE_URL;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public static final String URL_COPIED \u003d \"URL has been copied.\";","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private static final int ROW_HEIGHT \u003d 30;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private static final int SAFETY_MARGIN \u003d 35;","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"HelpPanel.fxml\";","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private Button copyButton;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private Label helpMessage;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e projectsTableView;","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e todosTableView;","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e deadlinesTableView;","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e eventsTableView;","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e groupmatesTableView;","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e contactsTableView;","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private TableView\u003cCommandSyntax\u003e othersTableView;","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new HelpPanel.","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public HelpPanel(MainWindow mainWindow) {","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(projectsTableView, getProjectCommands());","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(todosTableView, getTodoCommands());","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(deadlinesTableView, getDeadlineCommands());","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(eventsTableView, getEventCommands());","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(groupmatesTableView, getGroupmateCommands());","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(contactsTableView, getContactCommands());","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        setUpTable(othersTableView, getOtherCommands());","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpTable(TableView\u003cCommandSyntax\u003e table, ObservableList\u003cCommandSyntax\u003e commands) {","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        table.setItems(commands);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        table.setSelectionModel(null);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        table.prefHeightProperty()","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(table.getItems()).multiply(ROW_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        TableColumn\u003cCommandSyntax, String\u003e commandCol \u003d new TableColumn\u003c\u003e(\"Command\");","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        commandCol.setSortable(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        commandCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"command\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        TableColumn\u003cCommandSyntax, String\u003e usageCol \u003d new TableColumn\u003c\u003e(\"Usage\");","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        usageCol.setSortable(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        usageCol.setCellValueFactory(new PropertyValueFactory\u003c\u003e(\"usage\"));","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        commandCol.prefWidthProperty().bind(table.widthProperty().multiply(0.12));","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        usageCol.prefWidthProperty().bind(table.widthProperty().multiply(0.86));","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        commandCol.setResizable(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        usageCol.setResizable(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        commandCol.setReorderable(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        usageCol.setReorderable(false);","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        table.getColumns().add(commandCol);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        table.getColumns().add(usageCol);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-29"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    private void copyUrl() {","lastModifiedDate":"2021-03-29"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-03-29"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2021-03-29"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2021-03-29"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.setFeedbackToUser(URL_COPIED);","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getProjectCommands() {","lastModifiedDate":"2021-03-29"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"project\", \"project PROJECT_INDEX\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"overview\", \"overview\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"todos\", \"todos\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"addP\", \"addP n/PROJECT_NAME\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"updateP\", \"updateP PROJECT_INDEX n/PROJECT_NAME\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"deleteP\", \"deleteP PROJECT_INDEX\")","lastModifiedDate":"2021-03-31"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-31"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getTodoCommands() {","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"addT\", \"addT PROJECT_INDEX d/DESCRIPTION\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"updateT\", \"updateT PROJECT_INDEX i/TODO_INDEX d/DESCRIPTION\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"deleteT\", \"deleteT PROJECT_INDEX i/TODO_INDEX\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"markT\", \"markT PROJECT_INDEX i/TODO_INDEX\")","lastModifiedDate":"2021-04-01"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getDeadlineCommands() {","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"addD\", \"addD PROJECT_INDEX d/DESCRIPTION by/DATE\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"updateD\",","lastModifiedDate":"2021-03-31"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"                        \"updateD PROJECT_INDEX i/DEADLINE_INDEX [d/DESCRIPTION] [by/DATE]\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"deleteD\", \"deleteD PROJECT_INDEX i/DEADLINE_INDEX\"),","lastModifiedDate":"2021-04-01"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"markD\", \"markD PROJECT_INDEX i/DEADLINE_INDEX\")","lastModifiedDate":"2021-04-01"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getEventCommands() {","lastModifiedDate":"2021-03-31"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"addE\",","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"                        \"addE PROJECT_INDEX d/DESCRIPTION on/DATE at/TIME w/REPEAT_WEEKLY\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"updateE\",","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"                        \"updateE PROJECT_INDEX i/EVENT_INDEX [d/DESCRIPTION] [on/DATE] [at/TIME] \"","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                                + \"[w/REPEATS_WEEKLY]\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"deleteE\", \"deleteE PROJECT_INDEX i/EVENT_INDEX\")","lastModifiedDate":"2021-03-31"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-31"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getGroupmateCommands() {","lastModifiedDate":"2021-03-31"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"addG\", \"addG PROJECT_INDEX n/NAME [r/ROLE]...\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"updateG\",","lastModifiedDate":"2021-03-31"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"                        \"updateG PROJECT_INDEX i/GROUPMATE_INDEX [n/NAME] [r/ROLE]...\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"deleteG\", \"deleteG PROJECT_INDEX i/GROUPMATE_INDEX\")","lastModifiedDate":"2021-04-03"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getContactCommands() {","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-29"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"addC\", \"addC n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]...\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"findC\", \"findC KEYWORD [KEYWORD]...\"),","lastModifiedDate":"2021-04-05"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"updateC\",","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"                        \"updateC INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]...\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"deleteC\", \"deleteC INDEX\")","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"    private static ObservableList\u003cCommandSyntax\u003e getOtherCommands() {","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"        return FXCollections.observableArrayList(","lastModifiedDate":"2021-03-31"},{"lineNumber":169,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"today\", \"today\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":170,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"contacts\", \"contacts\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"undo\", \"undo\"),","lastModifiedDate":"2021-04-02"},{"lineNumber":172,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"redo\", \"redo\"),","lastModifiedDate":"2021-04-02"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"help\", \"help\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":174,"author":{"gitId":"vevek"},"content":"                new CommandSyntax(\"clear\", \"clear\"),","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"                new CommandSyntax(\"exit\", \"exit\")","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        );","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"vevek":9,"samuelfangjw":169}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UI_PROJECT_NOT_DISPLAYED;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_WELCOME;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.UiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.exceptions.UiCommandException;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    private ContactListPanel contactListPanel;","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    private SidePanel sidePanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    private HelpPanel helpPanel;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private TodayPanel todayPanel;","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectDisplayPanel projectDisplayPanel;","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane sidePanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane infoDisplayPlaceholder;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        helpPanel \u003d new HelpPanel(this);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel \u003d new SidePanel(logic.getFilteredProjectsList(), this);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        sidePanelPlaceholder.getChildren().add(sidePanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        setFeedbackToUser(MESSAGE_WELCOME);","lastModifiedDate":"2021-03-31"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel \u003d new ProjectDisplayPanel();","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.setMainWindow(this);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"            if (commandResult.hasUiCommand()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"                executeUiCommand(commandResult.getUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2021-04-01"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-04-01"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"            logic.commitState(commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        } catch (CommandException | UiCommandException | ParseException e) {","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"            setFeedbackToUser(e.getMessage());","lastModifiedDate":"2021-03-29"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(e.getMessage(), e);","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    private void executeUiCommand(UiCommand uiCommand) throws UiCommandException {","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        uiCommand.execute(this);","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"     * Displays a message in the {@code resultDisplay}.","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"     * @param message The message to display.","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"    public void setFeedbackToUser(String message) {","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"        resultDisplay.setFeedbackToUser(message);","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"    // Methods that change the UI","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2021-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"    public void closeApplication() {","lastModifiedDate":"2021-03-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2021-03-13"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"     * Displays the help panel.","lastModifiedDate":"2021-03-29"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"    public void displayHelp() {","lastModifiedDate":"2021-03-29"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        if (!infoDisplayPlaceholder.getChildren().contains(helpPanel.getRoot())) {","lastModifiedDate":"2021-03-29"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().add(helpPanel.getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"     * Displays a project","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"     * @param project Project to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"    public void displayProject(Project project) {","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"        if (!infoDisplayPlaceholder.getChildren().contains(projectDisplayPanel.getRoot())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().add(projectDisplayPanel.getRoot());","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.displayProject(project);","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"     * Shows contacts tab.","lastModifiedDate":"2021-03-14"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"    public void displayContacts() {","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearButtonStyles();","lastModifiedDate":"2021-03-31"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.addContactButtonStyle();","lastModifiedDate":"2021-03-31"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"        contactListPanel \u003d new ContactListPanel(logic.getFilteredContactList());","lastModifiedDate":"2021-03-31"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"        infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":"        infoDisplayPlaceholder.getChildren().add(contactListPanel.getRoot());","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearSelection();","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"     * Shows today tab.","lastModifiedDate":"2021-03-23"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"    public void displayToday() {","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearButtonStyles();","lastModifiedDate":"2021-03-31"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.addTodayButtonStyle();","lastModifiedDate":"2021-03-31"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"        todayPanel \u003d new TodayPanel(logic.getColabFolder(), LocalDate.now());","lastModifiedDate":"2021-03-25"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"        infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"        infoDisplayPlaceholder.getChildren().add(todayPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearSelection();","lastModifiedDate":"2021-03-23"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"     * Shows overview tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"    public void displayOverviewTab() throws UiCommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"        if (!infoDisplayPlaceholder.getChildren().contains(projectDisplayPanel.getRoot())) {","lastModifiedDate":"2021-03-25"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"            throw new UiCommandException(MESSAGE_UI_PROJECT_NOT_DISPLAYED);","lastModifiedDate":"2021-03-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.showOverviewTab();","lastModifiedDate":"2021-03-25"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"     * Shows todos tab.","lastModifiedDate":"2021-03-15"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"    public void displayTodosTab() throws UiCommandException {","lastModifiedDate":"2021-03-25"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"        if (!infoDisplayPlaceholder.getChildren().contains(projectDisplayPanel.getRoot())) {","lastModifiedDate":"2021-03-25"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"            throw new UiCommandException(MESSAGE_UI_PROJECT_NOT_DISPLAYED);","lastModifiedDate":"2021-03-25"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.showTodosTab();","lastModifiedDate":"2021-03-25"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"     * Selects a project in the {@code ListView} at a specific index.","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"     * @param index Index to select.","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"    public void selectProject(Index index) {","lastModifiedDate":"2021-03-25"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.selectProject(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"     * Clears side panel button styles.","lastModifiedDate":"2021-03-31"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-31"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"    public void clearButtonStyles() {","lastModifiedDate":"2021-03-30"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearButtonStyles();","lastModifiedDate":"2021-03-30"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"    // UI Handlers when button is clicked","lastModifiedDate":"2021-03-25"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"    private void handleExit() {","lastModifiedDate":"2021-03-25"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"        closeApplication();","lastModifiedDate":"2021-03-25"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-25"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"    private void handleHelp() {","lastModifiedDate":"2021-03-25"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"        resultDisplay.setFeedbackToUser(SHOWING_HELP_MESSAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"        displayHelp();","lastModifiedDate":"2021-03-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"lirc572":2,"-":168,"samuelfangjw":139}},{"path":"src/main/java/seedu/address/ui/ProjectCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code Project}.","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"ProjectListCard.fxml\";","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public final Project project;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label name;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectCard} with the given {@code Project} and index to display.","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectCard(Project project, int displayedIndex) {","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        this.project \u003d project;","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        name.setText(project.getProjectName().projectName);","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof ProjectCard)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard card \u003d (ProjectCard) other;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 project.equals(card.project);","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/main/java/seedu/address/ui/ProjectDisplayPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_DEADLINES_TO_DISPLAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_EVENTS_TO_DISPLAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_GROUPMATES_TO_DISPLAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_TODOS_TO_DISPLAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewOverviewCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodosCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":" * Panel containing a project.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectDisplayPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public static final Integer OVERVIEW_TAB \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public static final Integer TODOS_TAB \u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"ProjectDisplayPanel.fxml\";","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private static final int SAFETY_MARGIN \u003d 20; // Applied to each listview to prevent card from being cut off","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private static final int EVENTS_CARD_HEIGHT \u003d 45;","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    private static final int DEADLINES_CARD_HEIGHT \u003d 45;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private static final int GROUPMATES_CARD_HEIGHT \u003d 55;","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableTodo\u003e completableTodoListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cGroupmate\u003e groupmateListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cEvent\u003e eventListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableDeadline\u003e completableDeadlineListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    private MainWindow mainWindow \u003d null;","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private Label projectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane deadlineListViewPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane eventListViewPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane todoListViewPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane groupmateListViewPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectDisplayPanel() {","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().selectedIndexProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            if (newValue.equals(OVERVIEW_TAB)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                setFeedbackToUser(ViewOverviewCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"            } else if (newValue.equals(TODOS_TAB)) {","lastModifiedDate":"2021-04-01"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                setFeedbackToUser(ViewTodosCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        });","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * Displays a project in the {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     * @param project Project to display.","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void displayProject(Project project) {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName.setText(project.getProjectName().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        setUpEventList(project.getSortedEvents());","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        setUpDeadlinesList(project.getSortedDeadlines());","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        setUpTodoList(project.getSortedTodos());","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        setUpGroupmatesList(project.getSortedGroupmates());","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpTodoList(SortedList\u003cCompletableTodo\u003e todos) {","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        completableTodoListView.setItems(todos);","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        completableTodoListView.setCellFactory(listView -\u003e new CompletableTodoListViewCell());","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        todoListViewPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        if (completableTodoListView.getItems().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"            Label noTodosPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"            noTodosPlaceholder.setText(MESSAGE_NO_TODOS_TO_DISPLAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            todoListViewPlaceholder.getChildren().add(noTodosPlaceholder);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            todoListViewPlaceholder.getChildren().add(completableTodoListView);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpGroupmatesList(SortedList\u003cGroupmate\u003e groupmates) {","lastModifiedDate":"2021-03-31"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        groupmateListView.prefHeightProperty()","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(groupmates).multiply(GROUPMATES_CARD_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        groupmateListView.setItems(groupmates);","lastModifiedDate":"2021-03-31"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        groupmateListView.setCellFactory(listView -\u003e new GroupmateListViewCell());","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        groupmateListViewPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        if (groupmateListView.getItems().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"            Label noGroupmatesPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"            noGroupmatesPlaceholder.setText(MESSAGE_NO_GROUPMATES_TO_DISPLAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"            groupmateListViewPlaceholder.getChildren().add(noGroupmatesPlaceholder);","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"            groupmateListViewPlaceholder.getChildren().add(groupmateListView);","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpDeadlinesList(SortedList\u003cCompletableDeadline\u003e deadlines) {","lastModifiedDate":"2021-03-31"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView.prefHeightProperty()","lastModifiedDate":"2021-03-24"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(deadlines).multiply(DEADLINES_CARD_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView.setItems(deadlines);","lastModifiedDate":"2021-03-31"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView.setCellFactory(listView -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"                new CompletableDeadlineListViewCell());","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        deadlineListViewPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        if (completableDeadlineListView.getItems().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"            Label noDeadlinesPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"            noDeadlinesPlaceholder.setText(MESSAGE_NO_DEADLINES_TO_DISPLAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"            deadlineListViewPlaceholder.getChildren().add(noDeadlinesPlaceholder);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            deadlineListViewPlaceholder.getChildren().add(completableDeadlineListView);","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpEventList(SortedList\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        eventListView.prefHeightProperty()","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(events).multiply(EVENTS_CARD_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        eventListView.setItems(events);","lastModifiedDate":"2021-03-31"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        eventListViewPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        if (eventListView.getItems().isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"            Label noDeadlinesPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"            noDeadlinesPlaceholder.setText(MESSAGE_NO_EVENTS_TO_DISPLAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"            eventListViewPlaceholder.getChildren().add(noDeadlinesPlaceholder);","lastModifiedDate":"2021-03-30"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"            eventListViewPlaceholder.getChildren().add(eventListView);","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    private void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2021-03-31"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        if (mainWindow !\u003d null) {","lastModifiedDate":"2021-03-31"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"            mainWindow.setFeedbackToUser(feedbackToUser);","lastModifiedDate":"2021-03-31"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-31"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"     * Displays the overview tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    public void showOverviewTab() {","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().select(OVERVIEW_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"     * Displays the todo tab.","lastModifiedDate":"2021-03-15"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    public void showTodosTab() {","lastModifiedDate":"2021-03-15"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().select(TODOS_TAB);","lastModifiedDate":"2021-03-15"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2021-03-31"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"    static class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code CompletableDeadline} using","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"     * a {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    static class CompletableDeadlineListViewCell extends ListCell\u003cCompletableDeadline\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(CompletableDeadline completableDeadline, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(completableDeadline, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || completableDeadline \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new CompletableDeadlineCard(completableDeadline, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code CompletableTodo} using","lastModifiedDate":"2021-03-14"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"     * a {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    static class CompletableTodoListViewCell extends ListCell\u003cCompletableTodo\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(CompletableTodo completableTodo, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(completableTodo, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || completableTodo \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new CompletableTodoCard(completableTodo, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"lirc572"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Groupmate} using a {@code GroupmateCard}.","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"    static class GroupmateListViewCell extends ListCell\u003cGroupmate\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":236,"author":{"gitId":"lirc572"},"content":"        protected void updateItem(Groupmate groupmate, boolean empty) {","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"lirc572"},"content":"            super.updateItem(groupmate, empty);","lastModifiedDate":"2021-03-29"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"lirc572"},"content":"            if (empty || groupmate \u003d\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":"                setGraphic(new GroupmateCard(groupmate, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-29"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":8,"samuelfangjw":239}},{"path":"src/main/java/seedu/address/ui/ProjectListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-04-01"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" * Panel containing the list of projects.","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"ProjectListPanel.fxml\";","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ProjectListPanel.class);","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private ListView\u003cProject\u003e projectListView;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectListPanel(ObservableList\u003cProject\u003e projectList, MainWindow mainWindow) {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.setItems(projectList);","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.setCellFactory(listview -\u003e new ProjectListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            if (event.getCode() \u003d\u003d KeyCode.UP || event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                event.consume();","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        });","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().selectedItemProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            if (newValue !\u003d null) {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                mainWindow.setFeedbackToUser(String.format(ViewProjectCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-04-01"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                        newValue.getProjectName()));","lastModifiedDate":"2021-04-01"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                mainWindow.clearButtonStyles();","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                mainWindow.displayProject(newValue);","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        });","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * Clears currently selected item from {@code ProjectListPanel}","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public void clearSelection() {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().clearSelection();","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Project} using a {@code ProjectCard}.","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    class ProjectListViewCell extends ListCell\u003cProject\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(Project project, boolean empty) {","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(project, empty);","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || project \u003d\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-11"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new ProjectCard(project, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-11"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * Selects a project in the {@code ListView} at a specific index.","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     * @param index Index to select.","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void selectProject(Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().clearSelection();","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().select(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"samuelfangjw":85}},{"path":"src/main/java/seedu/address/ui/SidePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewContactsCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodayCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Panel containing a project.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class SidePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"SidePanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String SELECTED_STYLE_CLASS \u003d \"selected\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectListPanel projectListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane projectsListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private Button todayButton;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Button contactsButton;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectDisplayPanel} with the given {@code project} and {@code displayedIndex}.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public SidePanel(ObservableList\u003cProject\u003e projectList, MainWindow mainWindow) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        addTodayButtonStyle();","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        this.projectListPanel \u003d new ProjectListPanel(projectList, mainWindow);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsListPanelPlaceholder.getChildren().add(projectListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Selects a project in the {@code ListView} at a specific index.","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * @param index Index to select.","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void selectProject(Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        projectListPanel.selectProject(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * Opens contacts panel.","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public void openContactsPanel() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.setFeedbackToUser(ViewContactsCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        clearButtonStyles();","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        addContactButtonStyle();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayContacts();","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Opens today panel.","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public void openTodayPanel() {","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.setFeedbackToUser(ViewTodayCommand.MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        clearButtonStyles();","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        addTodayButtonStyle();","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.displayToday();","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * Clears currently selected item from {@code ProjectListPanel}","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public void clearSelection() {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        projectListPanel.clearSelection();","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     * Resets all button styles to default.","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    public void clearButtonStyles() {","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        todayButton.getStyleClass().remove(SELECTED_STYLE_CLASS);","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        contactsButton.getStyleClass().remove(SELECTED_STYLE_CLASS);","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     * Change the background colour of today button to the current accent color value.","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    public void addTodayButtonStyle() {","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        todayButton.getStyleClass().add(SELECTED_STYLE_CLASS);","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * Change the background colour of contacts button to the current accent color value.","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    public void addContactButtonStyle() {","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        contactsButton.getStyleClass().add(SELECTED_STYLE_CLASS);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":101}},{"path":"src/main/java/seedu/address/ui/TodayDeadlineCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.DeadlineWithProject;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code DeadlineWithProject}.","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class TodayDeadlineCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"TodayDeadlineCard.fxml\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public final CompletableDeadline deadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label description;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label day;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private Label completedLabel;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private Label projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code TodayDeadlineCard} with the given {@code DeadlineWithProject}.","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public TodayDeadlineCard(DeadlineWithProject deadline) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(\"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        description.setText(deadline.getDescription());","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        date.setText(DateUtil.decodeDate(deadline.getBy()));","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        day.setText(DateUtil.decodeDateIntoDay(deadline.getBy()));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel.setText(getTextToDisplay(deadline.getIsDone()));","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        projectName.setText(deadline.getProjectName().toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the text of the completed label that is to be displayed.","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code String} containing the text that is to be displayed.","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    public static String getTextToDisplay(boolean isDone) {","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        return isDone ? \"✔\" : \"\";","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof TodayDeadlineCard)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        TodayDeadlineCard card \u003d (TodayDeadlineCard) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 deadline.equals(card.deadline);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":79}},{"path":"src/main/java/seedu/address/ui/TodayEventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.TimeUtil;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.EventWithProject;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of an {@code EventWithProject}.","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class TodayEventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"TodayEventCard.fxml\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public final EventWithProject eventWithProject;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private Label eventDescription;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label day;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private Label time;","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private Label projectName;","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an {@code EventCard} with the given {@code Event} without an index to display.","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public TodayEventCard(EventWithProject eventWithProject) {","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(eventWithProject);","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.eventWithProject \u003d eventWithProject;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(\"\");","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        eventDescription.setText(eventWithProject.getDescription());","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        day.setText(DateUtil.decodeDateIntoDay(eventWithProject.getDate()));","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        time.setText(TimeUtil.decodeTime(eventWithProject.getTime()));","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        projectName.setText(eventWithProject.getProjectName().toString());","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        if (eventWithProject.getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            date.setText(\"every\");","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            date.setText(DateUtil.decodeDate(eventWithProject.getDate()));","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof TodayEventCard)) {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        TodayEventCard card \u003d (TodayEventCard) other;","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 eventWithProject.equals(card.eventWithProject);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":75}},{"path":"src/main/java/seedu/address/ui/TodayPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_DEADLINES_TO_DISPLAY_TODAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_EVENTS_TO_DISPLAY_TODAY;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.SortedList;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.DeadlineWithProject;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.EventWithProject;","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" * Panel displaying today screen.","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"public class TodayPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"TodayPanel.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private final LocalDate currentDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e projectsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cEventWithProject\u003e eventsListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cDeadlineWithProject\u003e deadlinesListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane eventsListViewPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane deadlinesListViewPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code TodayPanel}.","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * @param colabFolder CoLAB folder used to create today panel.","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public TodayPanel(ReadOnlyColabFolder colabFolder, LocalDate date) {","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsList \u003d colabFolder.getProjectsList();","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        this.currentDate \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        this.date.setText(DateUtil.decodeDateWithDay(currentDate));","lastModifiedDate":"2021-03-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        initEventsSection();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        initDeadlinesSection();","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    private void initDeadlinesSection() {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        deadlinesListView.setCellFactory(listView -\u003e new TodayDeadlineListViewCell());","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        ObservableList\u003cDeadlineWithProject\u003e observableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : projectsList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            project.getDeadlinesOnDate(currentDate)","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                    .forEach(x -\u003e observableList.add(new DeadlineWithProject(x, project.getProjectName())));","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        SortedList\u003cDeadlineWithProject\u003e sortedDeadlineList \u003d new SortedList\u003c\u003e(observableList,","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                Comparator.comparing(DeadlineWithProject::getDescription));","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        deadlinesListView.setItems(sortedDeadlineList);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        if (observableList.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            Label noDeadlinesPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            noDeadlinesPlaceholder.setText(MESSAGE_NO_DEADLINES_TO_DISPLAY_TODAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            deadlinesListViewPlaceholder.getChildren().add(noDeadlinesPlaceholder);","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            deadlinesListViewPlaceholder.getChildren().add(deadlinesListView);","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    private void initEventsSection() {","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        eventsListView.setCellFactory(listView -\u003e new TodayEventListViewCell());","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        ObservableList\u003cEventWithProject\u003e observableList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : projectsList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"            project.getEventsOnDate(currentDate)","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                    .forEach(x -\u003e observableList.add(new EventWithProject(x, project.getProjectName())));","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        SortedList\u003cEventWithProject\u003e sortedEventList \u003d new SortedList\u003c\u003e(observableList,","lastModifiedDate":"2021-03-30"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                Comparator.comparing(EventWithProject::getTime).thenComparing(EventWithProject::getDescription));","lastModifiedDate":"2021-04-05"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        eventsListView.setItems(sortedEventList);","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        if (observableList.isEmpty()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            Label noEventsPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            noEventsPlaceholder.setText(MESSAGE_NO_EVENTS_TO_DISPLAY_TODAY);","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"            eventsListViewPlaceholder.getChildren().add(noEventsPlaceholder);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"            eventsListViewPlaceholder.getChildren().add(eventsListView);","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    static class TodayEventListViewCell extends ListCell\u003cEventWithProject\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(EventWithProject eventWithProject, boolean empty) {","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(eventWithProject, empty);","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || eventWithProject \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new TodayEventCard(eventWithProject).getRoot());","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code DeadlineWithProject} using","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"     * a {@code TodayDeadlineCard}.","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    static class TodayDeadlineListViewCell extends ListCell\u003cDeadlineWithProject\u003e {","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(DeadlineWithProject deadlineWithProject, boolean empty) {","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(deadlineWithProject, empty);","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || deadlineWithProject \u003d\u003d null) {","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new TodayDeadlineCard(deadlineWithProject).getRoot());","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"samuelfangjw":142}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.awt.Taskbar;","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.awt.image.BufferedImage;","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javax.imageio.ImageIO;","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/colab_icon_500.png\";","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        // Set the application icon","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        // Set taskbar icon for macOS","lastModifiedDate":"2021-02-26"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        if (Taskbar.isTaskbarSupported()) {","lastModifiedDate":"2021-02-26"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            BufferedImage applicationIcon \u003d getBufferedImage(ICON_APPLICATION);","lastModifiedDate":"2021-02-26"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            Taskbar taskbar \u003d Taskbar.getTaskbar();","lastModifiedDate":"2021-02-26"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            if (taskbar.isSupported(Taskbar.Feature.ICON_IMAGE) \u0026\u0026 applicationIcon !\u003d null) {","lastModifiedDate":"2021-02-26"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                Taskbar.getTaskbar().setIconImage(applicationIcon);","lastModifiedDate":"2021-02-26"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-02-26"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // Set up main window","lastModifiedDate":"2021-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            mainWindow.show(); // This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"            mainWindow.displayToday(); // Display today panel","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    private BufferedImage getBufferedImage(String imagePath) {","lastModifiedDate":"2021-02-26"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-02-26"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            BufferedImage iconApplication \u003d ImageIO.read(getClass().getResource(imagePath));","lastModifiedDate":"2021-02-26"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"            return iconApplication;","lastModifiedDate":"2021-02-26"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-02-26"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(StringUtil.getDetails(e));","lastModifiedDate":"2021-02-26"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            return null;","lastModifiedDate":"2021-02-26"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"samuelfangjw":27}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" onKeyPressed\u003d\"#handleKeyPressed\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"-":8,"samuelfangjw":1}},{"path":"src/main/resources/view/CompletableDeadlineCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"45\" prefHeight\u003d\"45\" maxHeight\u003d\"45\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"completedLabel\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets bottom\u003d\"0\" left\u003d\"20\" right\u003d\"5\" top\u003d\"0\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"day\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$day\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":38}},{"path":"src/main/resources/view/CompletableTodoCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"completedLabel\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":30}},{"path":"src/main/resources/view/ContactListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"105\" prefHeight\u003d\"105\" maxHeight\u003d\"105\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox fx:id\u003d\"tags\" spacing\u003d\"5\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":29,"samuelfangjw":7}},{"path":"src/main/resources/view/ContactListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  \u003cLabel text\u003d\"Contacts\" styleClass\u003d\"cell_huge_label\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane fx:id\u003d\"contactListViewPlaceholder\" styleClass\u003d\"pane_with_background\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":6,"samuelfangjw":4}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".root {","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    Colors inspired by material design principles which can be found at","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    https://material.io/design/color/dark-theme.html.","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    DP refers to the elevation level as stated on the website.","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    */","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -BASE_COLOR: #121212;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -DP_0_ELEVATION: rgba(255, 255, 255, 0.00);","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -DP_1_ELEVATION: rgba(255, 255, 255, 0.05);","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    -DP_2_ELEVATION: rgba(255, 255, 255, 0.08);","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    -DP_3_ELEVATION: rgba(255, 255, 255, 0.09);","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    -DP_4_ELEVATION: rgba(255, 255, 255, 0.05);","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_ACCENT: #3d187a;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL: -DP_3_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL_SELECTED: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /* Background color */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -BASE_COLOR;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"/* Labels */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"/* list view */","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":".list-view .scroll-bar:horizontal {","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    -fx-scale-y: 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-02-28"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL_SELECTED;","lastModifiedDate":"2021-03-06"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_CELL_SELECTED;","lastModifiedDate":"2021-03-06"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":".list-cell:filled:selected #tags .label {","lastModifiedDate":"2021-02-28"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-06"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_CELL;","lastModifiedDate":"2021-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":".cell_huge_label {","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: lightgrey !important;","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_0_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"/* tabs */","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":".tab {","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0.0 1.0;","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 5px 20px;","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 15px 15px 0 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":".tab .tab-label {","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .focus-indicator {","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 3px 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-insets: -8px;","lastModifiedDate":"2021-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":".tab:selected {","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 3px 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":".tab-pane {","lastModifiedDate":"2021-03-02"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"/* result display */","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"/* status-bar */","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0.8;","lastModifiedDate":"2021-02-28"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_0_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_0_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":".menu:hover,","lastModifiedDate":"2021-02-28"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":".menu:showing,","lastModifiedDate":"2021-02-28"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":".menu-item:focused {","lastModifiedDate":"2021-02-28"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"/* scroll bar */","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: derive(-DP_1_ELEVATION, 20%);","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":242,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: derive(-DP_1_ELEVATION, 50%);","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":252,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":256,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":260,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":".virtual-flow \u003e .corner {","lastModifiedDate":"2021-03-31"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: #f70d1a;","lastModifiedDate":"2021-03-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION -DP_1_ELEVATION white -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-alignment: justify;","lastModifiedDate":"2021-03-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":290,"author":{"gitId":"lirc572"},"content":"#contactListView, #projectListView {","lastModifiedDate":"2021-03-28"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":292,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"/* result display */","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay {","lastModifiedDate":"2021-03-16"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .content,","lastModifiedDate":"2021-03-16"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .scroll-pane,","lastModifiedDate":"2021-03-16"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .scroll-pane .viewport,","lastModifiedDate":"2021-03-16"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .scroll-pane .content {","lastModifiedDate":"2021-03-16"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-16"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"/* tags */","lastModifiedDate":"2021-03-17"},{"lineNumber":307,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":320,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":".pane_with_background {","lastModifiedDate":"2021-03-31"},{"lineNumber":322,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-31"},{"lineNumber":323,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 10 10;","lastModifiedDate":"2021-03-31"},{"lineNumber":324,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":325,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"lirc572":1,"-":205,"samuelfangjw":119}},{"path":"src/main/resources/view/EventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@ProjectDisplayPanel.css\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"45\" prefHeight\u003d\"45\" maxHeight\u003d\"45\" \u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"eventDescription\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"20\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"day\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":44}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background: transparent;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":18,"samuelfangjw":1}},{"path":"src/main/resources/view/GroupmateCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"55\" prefHeight\u003d\"55\" maxHeight\u003d\"55\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            \u003cHBox fx:id\u003d\"roles\" minWidth\u003d\"-Infinity\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"20\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":26,"samuelfangjw":10}},{"path":"src/main/resources/view/HelpPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".help-panel {","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":".commands-display-vbox {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane {","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane .corner {","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":".table-view {","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-width: 700;","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-width: 700;","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-width: 700;","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":".table-cell {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    -fx-wrap-text: true;","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":".table-row-cell {","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":".table-view .scroll-bar * {","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-height: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":".table-view .column-header-background {","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-height: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":".label-header {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 24;","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 5 0 5 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"#helpMessage {","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 20 10;","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"#copyButton {","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 20 10;","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 10 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"#copyButton:pressed, #copyButton:default:hover:pressed {","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_2_ELEVATION;","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":81}},{"path":"src/main/resources/view/HelpPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.TableView?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"help-panel\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@HelpPanel.css\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \u003cLabel fx:id\u003d\"helpMessage\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" text\u003d\"Label\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/Button\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  \u003cScrollPane fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox styleClass\u003d\"commands-display-vbox\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Projects\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"projectsTableView\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Todos\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"todosTableView\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Deadlines\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"deadlinesTableView\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Events\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"eventsTableView\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Groupmates\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"groupmatesTableView\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Contacts\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"contactsTableView\"\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Others\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTableView fx:id\u003d\"othersTableView\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/TableView\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/ScrollPane\u003e","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":77}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"\u003cfx:root maxHeight\u003d\"2160.0\" maxWidth\u003d\"3840.0\" minHeight\u003d\"680\" minWidth\u003d\"900\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CoLAB\"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \u003cImage url\u003d\"@/images/colab_icon_500.png\"/\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox minHeight\u003d\"480.0\" minWidth\u003d\"640.0\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"          \u003cStackPane fx:id\u003d\"sidePanelPlaceholder\" HBox.hgrow\u003d\"NEVER\" minWidth\u003d\"200\" prefWidth\u003d\"200\" maxWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"          \u003cVBox fx:id\u003d\"infoDisplay\" minHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"infoDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"150\" maxHeight\u003d\"150\" VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"              \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":36,"samuelfangjw":26}},{"path":"src/main/resources/view/ProjectDisplayPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".project-display-panel-vbox {","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":".project-display-panel-section {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 10 20 15 20;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0 10 5 10;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":".cell_huge_label {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 10px 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":".label-header {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 24;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 10px 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-height: 50px;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"/* tabs */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":".tab {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0.0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 5px 5px;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_3_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":".tab .tab-label {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    -fx-translate-x: 10px;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .focus-indicator {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":".tab:selected {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-height: 150;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-width: 50;","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 50px 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_3_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":".tab-pane {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"/* list view */","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":".list-view {","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0 0 10 0;","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:even,","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:odd,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"#interval {","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 10 0 0;","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"#roles {","lastModifiedDate":"2021-03-30"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-03-30"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-03-30"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"#roles .label {","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-30"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-03-30"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-03-30"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-03-30"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":137}},{"path":"src/main/resources/view/ProjectDisplayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.Group?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@ProjectDisplayPanel.css\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  \u003cLabel fx:id\u003d\"projectName\" styleClass\u003d\"cell_huge_label\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"  \u003cTabPane fx:id\u003d\"tabPane\" rotateGraphic\u003d\"true\" side\u003d\"LEFT\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    \u003ctabs\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTab\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"          \u003cGroup\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \u003cLabel rotate\u003d\"90\" styleClass\u003d\"tab-label\" text\u003d\"Overview\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/Group\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"          \u003cScrollPane fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            \u003cVBox styleClass\u003d\"project-display-panel-vbox\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"              \u003cVBox styleClass\u003d\"project-display-panel-section\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Events\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                \u003cStackPane fx:id\u003d\"eventListViewPlaceholder\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"              \u003cVBox styleClass\u003d\"project-display-panel-section\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Deadlines\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                \u003cStackPane fx:id\u003d\"deadlineListViewPlaceholder\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"              \u003cVBox styleClass\u003d\"project-display-panel-section\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Groupmates\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                \u003cStackPane fx:id\u003d\"groupmateListViewPlaceholder\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/ScrollPane\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTab\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"          \u003cGroup\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            \u003cLabel rotate\u003d\"90\" styleClass\u003d\"tab-label\" text\u003d\"Todos\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/Group\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"          \u003cVBox styleClass\u003d\"project-display-panel-section\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Todos\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"todoListViewPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/tabs\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/TabPane\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstyleClass\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"white-text\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/styleClass\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":65}},{"path":"src/main/resources/view/ProjectListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane minHeight\u003d\"45\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"190\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":32}},{"path":"src/main/resources/view/ProjectListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cListView fx:id\u003d\"projectListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"-":7,"samuelfangjw":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"-Infinity\" prefHeight\u003d\"130\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"samuelfangjw":2}},{"path":"src/main/resources/view/SidePanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".side-panel{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":".button {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 24px;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":".button:hover {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":".button:selected {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":".selected {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"#projectListView {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"#projectListView #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell:filled:even,","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell:filled:odd {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"#colab-logo {","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-image: url(\"../images/logo_no_background.png\");","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-repeat: no-repeat;","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-size: contain;","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-position: center center;","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":67}},{"path":"src/main/resources/view/SidePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"side-panel\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@SidePanel.css\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane id\u003d\"colab-logo\" prefHeight\u003d\"200\" maxHeight\u003d\"200\" prefWidth\u003d\"200\" maxWidth\u003d\"200\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \u003cButton fx:id\u003d\"todayButton\" text\u003d\"Today\" onAction\u003d\"#openTodayPanel\" prefWidth\u003d\"200\" maxWidth\u003d\"200\" prefHeight\u003d\"45\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  \u003cButton fx:id\u003d\"contactsButton\" onAction\u003d\"#openContactsPanel\" text\u003d\"Contacts\" prefWidth\u003d\"200\" maxWidth\u003d\"200\" prefHeight\u003d\"45\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"  \u003cSeparator/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane fx:id\u003d\"projectsListPanelPlaceholder\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":18}},{"path":"src/main/resources/view/TodayDeadlineCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets bottom\u003d\"10\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"completedLabel\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"projectName\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$project\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets bottom\u003d\"0\" left\u003d\"5\" right\u003d\"0\" top\u003d\"0\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets bottom\u003d\"0\" left\u003d\"5\" right\u003d\"0\" top\u003d\"0\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets bottom\u003d\"0\" left\u003d\"0\" right\u003d\"5\" top\u003d\"0\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"day\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$day\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":46}},{"path":"src/main/resources/view/TodayEventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@ProjectDisplayPanel.css\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"10\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"eventDescription\" text\u003d\"\\$first\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"projectName\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"          \u003cInsets top\u003d\"0\" right\u003d\"0\" bottom\u003d\"0\" left\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"time\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets top\u003d\"0\" right\u003d\"5\" bottom\u003d\"0\" left\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"day\" styleClass\u003d\"cell_small_label\" minWidth\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"samuelfangjw":48}},{"path":"src/main/resources/view/TodayPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".pane_with_background {","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 10 10;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":".list-view {","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 3 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:even,","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:odd,","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled #cardPane {","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell .label {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":33}},{"path":"src/main/resources/view/TodayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@TodayPanel.css\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  \u003cHBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003cLabel text\u003d\"Today - \" styleClass\u003d\"cell_huge_label\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$currentDate\" styleClass\u003d\"cell_huge_label\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox styleClass\u003d\"pane_with_background\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel text\u003d\"Events\" styleClass\u003d\"cell_huge_label\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003cStackPane fx:id\u003d\"eventsListViewPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox styleClass\u003d\"pane_with_background\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel text\u003d\"Deadlines\" styleClass\u003d\"cell_huge_label\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003cStackPane fx:id\u003d\"deadlinesListViewPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/StackPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstyleClass\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"pane-with-border\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/styleClass\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":36}},{"path":"src/test/data/JsonColabFolderStorageTest/invalidAndValidContactColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"    \"name\": \"Valid Contact\",","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"    \"name\": \"Contact With Invalid Phone Field\",","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\": \"948asdf2424\",","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2103T Team Project\",","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Update documentation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Finish add command\",","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Add unit tests\",","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Brainstorm new feature\",","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"01-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"15-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"31-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2101 OP2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Split Workload\",","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up slides for pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up video for demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"05-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"08-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":15,"samuelfangjw":105}},{"path":"src/test/data/JsonColabFolderStorageTest/invalidAndValidProjectColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"neighbours\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"family\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"classmates\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"Valid Project\",","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"valid groupmate\",","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"  \",","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"valid groupmate\",","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":7,"samuelfangjw":75}},{"path":"src/test/data/JsonColabFolderStorageTest/invalidContactColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"    \"name\": \"Contact with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2103T Team Project\",","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Update documentation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Finish add command\",","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Add unit tests\",","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Brainstorm new feature\",","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"01-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"15-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"31-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2101 OP2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Split Workload\",","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up slides for pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up video for demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"05-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"08-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":14,"samuelfangjw":101}},{"path":"src/test/data/JsonColabFolderStorageTest/invalidProjectColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"neighbours\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"family\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"classmates\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"  \",","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"valid groupmate\",","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":4,"samuelfangjw":58}},{"path":"src/test/data/JsonSerializableColabFolderTest/duplicateContactColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\": \"alice@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\": \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"email\": \"pauline@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2103T Team Project\",","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Update documentation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Finish add command\",","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Add unit tests\",","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Brainstorm new feature\",","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"01-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"15-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"31-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2101 OP2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Consultation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"23-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Product Demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"06-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"09-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Split Workload\",","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up slides for pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up video for demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"05-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"08-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":13,"samuelfangjw":108}},{"path":"src/test/data/JsonSerializableColabFolderTest/duplicateProjectColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"neighbours\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"family\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"classmates\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"Duplicate Project\",","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"valid groupmate\",","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"  } , {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"Duplicate Project\",","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"valid groupmate\",","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":7,"samuelfangjw":75}},{"path":"src/test/data/JsonSerializableColabFolderTest/invalidContactColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\": [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"    \"name\": \"Contact with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2103T Team Project\",","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Update documentation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Finish add command\",","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Add unit tests\",","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Brainstorm new feature\",","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"01-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"15-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"31-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2101 OP2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Split Workload\",","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up slides for pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up video for demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"05-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"08-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":14,"samuelfangjw":101}},{"path":"src/test/data/JsonSerializableColabFolderTest/invalidProjectColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Alex Yeoh\",","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"87438807\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"alexyeoh@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Geylang Street 29, #06-40\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Bernice Yu\",","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"99272758\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"berniceyu@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 30 Lorong 3 Serangoon Gardens, #07-18\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\", \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Charlotte Oliveiro\",","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"93210283\",","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"charlotte@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 11 Ang Mo Kio Street 74, #11-04\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"neighbours\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"David Li\",","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"91031282\",","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"lidavid@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 436 Serangoon Gardens Street 26, #16-43\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"family\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Irfan Ibrahim\",","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92492021\",","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"irfan@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 47 Tampines Street 20, #17-35\",","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"classmates\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Roy Balakrishnan\",","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"92624417\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"royb@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"Blk 45 Aljunied Street 85, #11-31\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"colleagues\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"  \",","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"valid groupmate\",","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":4,"samuelfangjw":58}},{"path":"src/test/data/JsonSerializableColabFolderTest/typicalColabFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"  \"_comment\": \"CoLAB save file which contains the same values as in TypicalColabFolder#getTypicalColabFolder()\",","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"  \"contacts\" : [ {","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"alice@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"123, Jurong West Ave 6, #08-111\",","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"johnd@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"heinz@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"wall street\",","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"cornelia@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"10th street\",","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"werner@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"michegan ave\",","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"lydia@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"little tokyo\",","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    \"email\" : \"anna@example.com\",","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    \"address\" : \"4th street\",","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"  } ],","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2103T Team Project\",","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Weekly Project Meeting\",","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"31-01-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"20:00\",","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : true","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [{","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Add unit tests\",","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Brainstorm new feature\",","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Finish add command\",","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Update documentation\",","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"01-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"15-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"31-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2101 OP2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Planning Meeting\",","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"17-03-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"17:30\",","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Consultation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"23-03-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"10:00\",","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Product Demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"06-04-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"10:00\",","lastModifiedDate":"2021-03-30"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"      \"date\" : \"09-04-2021\",","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"      \"time\" : \"10:00\",","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"      \"isWeekly\" : false","lastModifiedDate":"2021-03-30"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up slides for pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up video for demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    },{","lastModifiedDate":"2021-03-31"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Split Workload\",","lastModifiedDate":"2021-03-31"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-31"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"05-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"08-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"    \"groupmates\" : [ {","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"      \"name\" : \"Danh\",","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"      \"roles\" : [ ]","lastModifiedDate":"2021-03-29"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":13,"samuelfangjw":140}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \"colabFolderFilePath\" : \"colab.json\"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":12,"samuelfangjw":1}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  \"colabFolderFilePath\" : \"colab.json\"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":10,"samuelfangjw":1}},{"path":"src/test/java/guitests/GuiRobot.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.BooleanSupplier;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.StageNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Robot used to simulate user actions on the GUI.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Extends {@link FxRobot} by adding some customized functionality and workarounds.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GuiRobot extends FxRobot {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int PAUSE_FOR_HUMAN_DELAY_MILLISECONDS \u003d 250;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS \u003d 5000;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String PROPERTY_TESTFX_HEADLESS \u003d \"testfx.headless\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean isHeadlessMode;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiRobot} object.","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public GuiRobot() {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String headlessPropertyValue \u003d System.getProperty(PROPERTY_TESTFX_HEADLESS);","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        isHeadlessMode \u003d headlessPropertyValue !\u003d null \u0026\u0026 headlessPropertyValue.equals(\"true\");","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Pauses execution for {@code PAUSE_FOR_HUMAN_DELAY_MILLISECONDS} milliseconds for a human to examine the","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * effects of the test. This method will be disabled when the GUI tests are executed in headless mode to avoid","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * unnecessary delays.","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void pauseForHuman() {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (isHeadlessMode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sleep(PAUSE_FOR_HUMAN_DELAY_MILLISECONDS);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if tests are run in headless mode.","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isHeadlessMode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return isHeadlessMode;","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Waits for {@code event} to be true by {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} milliseconds.","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS}","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * milliseconds.","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void waitForEvent(BooleanSupplier event) {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        waitForEvent(event, DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS);","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Waits for {@code event} to be true.","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param timeOut in milliseconds","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code timeOut}.","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void waitForEvent(BooleanSupplier event, int timeOut) {","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int timePassed \u003d 0;","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final int retryInterval \u003d 50;","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        while (!event.getAsBoolean()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            sleep(retryInterval);","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            timePassed +\u003d retryInterval;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (timePassed \u003e\u003d timeOut) {","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                throw new EventTimeoutException();","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if the window with {@code stageTitle} is currently open.","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isWindowShown(String stageTitle) {","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getNumberOfWindowsShown(stageTitle) \u003e\u003d 1;","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns the number of windows with {@code stageTitle} that are currently open.","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int getNumberOfWindowsShown(String stageTitle) {","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return (int) listTargetWindows().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .filter(window -\u003e window instanceof Stage \u0026\u0026 ((Stage) window).getTitle().equals(stageTitle))","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .count();","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the first stage, ordered by proximity to the current target window, with the stage title.","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The order that the windows are searched are as follows (proximity): current target window,","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * children of the target window, rest of the windows.","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws StageNotFoundException if the stage is not found.","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Stage getStage(String stageTitle) {","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Optional\u003cStage\u003e targetStage \u003d listTargetWindows().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .filter(Stage.class::isInstance) // checks that the window is of type Stage","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .map(Stage.class::cast)","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .filter(stage -\u003e stage.getTitle().equals(stageTitle))","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .findFirst();","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return targetStage.orElseThrow(StageNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Represents an error which occurs when a timeout occurs when waiting for an event.","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private class EventTimeoutException extends RuntimeException {","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":114,"samuelfangjw":11}},{"path":"src/test/java/guitests/guihandles/CommandBoxHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A handle to the {@code CommandBox} in the GUI.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandBoxHandle extends NodeHandle\u003cTextField\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_INPUT_FIELD_ID \u003d \"#commandTextField\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandBoxHandle(TextField commandBoxNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(commandBoxNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the text in the command box.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getInput() {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return getRootNode().getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Enters the given command in the Command Box and presses enter.","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void run(String command) {","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        click();","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().setText(command));","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        guiRobot.type(KeyCode.ENTER);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the list of style classes present in the command box.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ObservableList\u003cString\u003e getStyleClass() {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return getRootNode().getStyleClass();","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":38,"samuelfangjw":7}},{"path":"src/test/java/guitests/guihandles/CompletableDeadlineCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDateIntoDay;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableDeadlineCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableDeadlineCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#description\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DATE_FIELD_ID \u003d \"#date\";","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String COMPLETED_FIELD_ID \u003d \"#completedLabel\";","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DAY_FIELD_ID \u003d \"#day\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final Label dateLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final Label completedLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private final Label dayLabel;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CompletableDeadlineCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableDeadlineCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        dateLabel \u003d getChildNode(DATE_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel \u003d getChildNode(COMPLETED_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        dayLabel \u003d getChildNode(DAY_FIELD_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public String getDate() {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return dateLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public String getCompleted() {","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return completedLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public String getDay() {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        return dayLabel.getText();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains a {@code CompletableDeadline}.","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(CompletableDeadline deadline) {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return getDescription().equals(deadline.getDescription())","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getDate().equals(decodeDate(deadline.getBy()))","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getDay().equals(decodeDateIntoDay(deadline.getBy()))","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getCompleted().equals(CompletableDeadlineCard.getTextToDisplay(deadline.getIsDone()));","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":70}},{"path":"src/test/java/guitests/guihandles/CompletableTodoCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableDeadlineCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTodoCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#description\";","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String COMPLETED_FIELD_ID \u003d \"#completedLabel\";","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final Label completedLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CompletableTodoCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTodoCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel \u003d getChildNode(COMPLETED_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public String getCompleted() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        return completedLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains a {@code CompletableTodo}.","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(CompletableTodo todo) {","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        return getDescription().equals(todo.getDescription())","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getCompleted().equals(CompletableDeadlineCard.getTextToDisplay(todo.getIsDone()));","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":51}},{"path":"src/test/java/guitests/guihandles/ContactCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides a handle to a {@code ContactCard} in the contact list panel.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ContactCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String ADDRESS_FIELD_ID \u003d \"#address\";","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#phone\";","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String TAGS_FIELD_ID \u003d \"#tags\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Label addressLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Label phoneLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Label emailLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cLabel\u003e tagLabels;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code ContactCardHandle} handler object.","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param cardNode Node of {@code ContactCard}.","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ContactCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressLabel \u003d getChildNode(ADDRESS_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phoneLabel \u003d getChildNode(PHONE_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        emailLabel \u003d getChildNode(EMAIL_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Region tagsContainer \u003d getChildNode(TAGS_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tagLabels \u003d tagsContainer","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .getChildrenUnmodifiable()","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(Label.class::cast)","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getId() {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getAddress() {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return addressLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getPhone() {","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return phoneLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String getEmail() {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return emailLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return tagLabels","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(Label::getText)","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if this handle contains {@code contact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return getName().equals(contact.getName().fullName)","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(contact.getAddress().value)","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(contact.getPhone().value)","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(contact.getEmail().value)","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(contact.getTags().stream()","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        .map(tag -\u003e tag.tagName)","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        .sorted()","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"lirc572":1,"-":82,"samuelfangjw":10}},{"path":"src/test/java/guitests/guihandles/ContactListPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides a handle for {@code ContactListPanel} containing the list of {@code ContactCard}.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class ContactListPanelHandle extends NodeHandle\u003cListView\u003cContact\u003e\u003e {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String CONTACT_LIST_VIEW_ID \u003d \"#contactListViewPlaceholder\";","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String CARD_PANE_ID \u003d \"#cardPane\";","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Optional\u003cContact\u003e lastRememberedSelectedContactCard;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public ContactListPanelHandle(ListView\u003cContact\u003e contactListPanelNode) {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(contactListPanelNode);","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns a handle to the selected {@code ContactCardHandle}.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * A maximum of 1 item can be selected at any time.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected.","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException if the selected card is currently not in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public ContactCardHandle getHandleToSelectedCard() {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cContact\u003e selectedContactList \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (selectedContactList.size() !\u003d 1) {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Contact list size expected 1.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return getAllCardNodes().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .map(ContactCardHandle::new)","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .filter(handle -\u003e handle.equals(selectedContactList.get(0)))","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .orElseThrow(IllegalStateException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the index of the selected card.","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int getSelectedCardIndex() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a card is currently selected.","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isAnyCardSelected() {","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cContact\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return !selectedCardsList.isEmpty();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Navigates the listview to display {@code Contact}s.","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void navigateToCard(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!getRootNode().getItems().contains(contact)) {","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Contact does not exist.\");","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            getRootNode().scrollTo(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Navigates the listview to {@code index}es.","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void navigateToCard(int index) {","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index \u003c 0 || index \u003e\u003d getRootNode().getItems().size()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Index is out of bounds.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            getRootNode().scrollTo(index);","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Selects the {@code ContactCard} at {@code index} in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void select(int index) {","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRootNode().getSelectionModel().select(index);","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns the {@code ContactCard} handle of a {@code Contact} associated with the {@code index} in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException if the selected card is currently not in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ContactCardHandle getContactCardHandle(int index) {","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return getAllCardNodes().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .map(ContactCardHandle::new)","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .filter(handle -\u003e handle.equals(getContact(index)))","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .orElseThrow(IllegalStateException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private Contact getContact(int index) {","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return getRootNode().getItems().get(index);","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns all card nodes in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Card nodes that are visible in the listview are definitely in the scene graph, while some nodes that are not","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * visible in the listview may also be in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private Set\u003cNode\u003e getAllCardNodes() {","lastModifiedDate":"2021-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return guiRobot.lookup(CARD_PANE_ID).queryAll();","lastModifiedDate":"2021-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Remembers the selected {@code ContactCard} in the list.","lastModifiedDate":"2021-03-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void rememberSelectedContactCard() {","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cContact\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            lastRememberedSelectedContactCard \u003d Optional.empty();","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            lastRememberedSelectedContactCard \u003d Optional.of(selectedItems.get(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if the selected {@code ContactCard} is different from the value remembered by the most recent","lastModifiedDate":"2021-03-28"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code rememberSelectedContactCard()} call.","lastModifiedDate":"2021-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean isSelectedContactCardChanged() {","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cContact\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return lastRememberedSelectedContactCard.isPresent();","lastModifiedDate":"2021-03-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return !lastRememberedSelectedContactCard.isPresent()","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    || !lastRememberedSelectedContactCard.get().equals(selectedItems.get(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int getListSize() {","lastModifiedDate":"2021-03-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return getRootNode().getItems().size();","lastModifiedDate":"2021-03-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"lirc572":1,"-":153,"samuelfangjw":10}},{"path":"src/test/java/guitests/guihandles/EventCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDateIntoDay;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.TimeUtil.decodeTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to an {@code EventCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class EventCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#eventDescription\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DATE_FIELD_ID \u003d \"#date\";","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    private static final String TIME_FIELD_ID \u003d \"#time\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DAY_FIELD_ID \u003d \"#day\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final Label dateLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    private final Label timeLabel;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private final Label dayLabel;","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code EventCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code EventCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public EventCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        dateLabel \u003d getChildNode(DATE_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        timeLabel \u003d getChildNode(TIME_FIELD_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        dayLabel \u003d getChildNode(DAY_FIELD_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public String getDate() {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return dateLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    public String getTime() {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        return timeLabel.getText();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public String getDay() {","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        return dayLabel.getText();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains an {@code Event}.","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Event event) {","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return getDescription().equals(event.getDescription())","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 getDate().equals(decodeDate(event.getDate()))","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getTime().equals(decodeTime(event.getTime()))","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getDay().equals(decodeDateIntoDay(event.getDate()));","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"vevek":10,"samuelfangjw":60}},{"path":"src/test/java/guitests/guihandles/MainMenuHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Provides a handle to the main menu of the app.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class MainMenuHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MENU_BAR_ID \u003d \"#menuBar\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public MainMenuHandle(Node mainMenuNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(mainMenuNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Opens the {@code HelpPanel} using the menu bar in {@code MainWindow}.","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void openHelpWindowUsingMenu() {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        clickOnMenuItemsSequentially(\"Help\", \"F1\");","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Opens the {@code HelpPanel} by pressing the shortcut key associated","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * with the menu bar in {@code MainWindow}.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void openHelpWindowUsingAccelerator() {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.F1);","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Clicks on {@code menuItems} in order.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void clickOnMenuItemsSequentially(String... menuItems) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Arrays.stream(menuItems).forEach(guiRobot::clickOn);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":34,"samuelfangjw":8}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Provides a handle for {@code MainWindow}.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class MainWindowHandle extends StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final ContactListPanelHandle contactListPanel;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final ResultDisplayHandle resultDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final CommandBoxHandle commandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final MainMenuHandle mainMenu;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code MainWindowHandle} handler object.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param stage Stage to use as root of the {@code MainWindow}.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public MainWindowHandle(Stage stage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        contactListPanel \u003d new ContactListPanelHandle(getChildNode(ContactListPanelHandle.CONTACT_LIST_VIEW_ID));","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public ContactListPanelHandle getContactListPanel() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return contactListPanel;","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return resultDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return commandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return statusBarFooter;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public MainMenuHandle getMainMenu() {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return mainMenu;","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":48,"samuelfangjw":5}},{"path":"src/test/java/guitests/guihandles/NodeHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides access to a node in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public abstract class NodeHandle\u003cT extends Node\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final T rootNode;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected NodeHandle(T rootNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.rootNode \u003d requireNonNull(rootNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected T getRootNode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return rootNode;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected \u003cQ extends Node\u003e Q getChildNode(String query) {","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Optional\u003cQ\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Clicks on the root node (i.e. itself).","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void click() {","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        guiRobot.clickOn(rootNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":36,"samuelfangjw":11}},{"path":"src/test/java/guitests/guihandles/ProjectCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code ProjectCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final Label nameLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code ProjectCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return nameLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains a {@code Project}.","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Project project) {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return getName().equals(project.getProjectName().toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/test/java/guitests/guihandles/ProjectDisplayPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectDisplayPanelHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String PROJECT_NAME_ID \u003d \"#projectName\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String TAB_PANE_ID \u003d \"#tabPane\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EVENT_LIST_PLACEHOLDER_ID \u003d \"#eventListViewPlaceholder\";","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DEADLINE_LIST_PLACEHOLDER_ID \u003d \"#deadlineListViewPlaceholder\";","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final String TODO_LIST_PLACEHOLDER_ID \u003d \"#todoListViewPlaceholder\";","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final String GROUPMATE_LIST_PLACEHOLDER_ID \u003d \"#groupmateListViewPlaceholder\";","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final Label projectName;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private final TabPane tabPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private final StackPane groupmateListPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final StackPane deadlineListPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final StackPane eventListPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final StackPane todoListPlaceholder;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cEvent\u003e eventListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableDeadline\u003e completableDeadlineListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableTodo\u003e completableTodoListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cContact\u003e groupmateListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectDisplayPanelHandle} handler object.","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * @param panelNode Node of {@code ProjectDisplayHandle}.","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectDisplayPanelHandle(Node panelNode) {","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        super(panelNode);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d getChildNode(PROJECT_NAME_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        tabPane \u003d getChildNode(TAB_PANE_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        eventListPlaceholder \u003d getChildNode(EVENT_LIST_PLACEHOLDER_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        deadlineListPlaceholder \u003d getChildNode(DEADLINE_LIST_PLACEHOLDER_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        todoListPlaceholder \u003d getChildNode(TODO_LIST_PLACEHOLDER_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        groupmateListPlaceholder \u003d getChildNode(GROUPMATE_LIST_PLACEHOLDER_ID);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public String getProjectName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return projectName.getText();","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public int getTabInFocus() {","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return tabPane.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public void setTabInFocus(int tab) {","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().select(tab);","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"lirc572":1,"samuelfangjw":62}},{"path":"src/test/java/guitests/guihandles/ResultDisplayHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A handler for the {@code ResultDisplay} of the UI","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ResultDisplayHandle extends NodeHandle\u003cTextArea\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String RESULT_DISPLAY_ID \u003d \"#resultDisplay\";","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle(TextArea resultDisplayNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(resultDisplayNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns the text in the result display.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return getRootNode().getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":20,"samuelfangjw":5}},{"path":"src/test/java/guitests/guihandles/StageHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Provides access to a stage in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public abstract class StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Stage stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StageHandle(Stage stage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.stage \u003d requireNonNull(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Closes {@code stage}.","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void close() {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        guiRobot.interact(stage::close);","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(stage.isShowing());","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Focuses on this {@code stage}.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String windowTitle \u003d stage.getTitle();","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"Focusing on\" + windowTitle);","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        guiRobot.interact(stage::requestFocus);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"Finishing focus on\" + windowTitle);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if currently focusing on this stage.","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isFocused() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return stage.isFocused();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code stage}.","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected \u003cT extends Node\u003e T getChildNode(String query) {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(stage.getScene().getRoot()).lookup(query).tryQuery();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":51,"samuelfangjw":15}},{"path":"src/test/java/guitests/guihandles/StatusBarFooterHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Labeled;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Reused with modifications from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A handle for the {@code StatusBarFooter} at the footer of the application.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StatusBarFooterHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String STATUS_BAR_PLACEHOLDER \u003d \"#statusbarPlaceholder\";","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String SAVE_LOCATION_STATUS_ID \u003d \"#saveLocationStatus\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Labeled saveLocationNode;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code StatusBarFooterHandle} handler object.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param statusBarFooterNode Node of the {@code StatusBarFooter}.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle(Node statusBarFooterNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(statusBarFooterNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        saveLocationNode \u003d getChildNode(SAVE_LOCATION_STATUS_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the text of the \u0027save location\u0027 portion of the status bar.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getSaveLocation() {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return saveLocationNode.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":29,"samuelfangjw":6}},{"path":"src/test/java/guitests/guihandles/TodayPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Labeled;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle for {@code TodayPanel} containing the list of {@code EventCard} and","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class TodayPanelHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DATE_ID \u003d \"#date\";","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EVENTS_PLACEHOLDER_ID \u003d \"#eventsListViewPlaceholder\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DEADLINES_PLACEHOLDER_ID \u003d \"#deadlinesListViewPlaceholder\";","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code TodayPanelHandle} handler object.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * @param todayPanelNode Node of the {@code TodayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public TodayPanelHandle(Node todayPanelNode) {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        super(todayPanelNode);","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the date displayed in the {@code TodoCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code LocalDate} displayed in the {@code TodoCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public String getDisplayedDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        Labeled date \u003d getChildNode(DATE_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return date.getText();","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":33}},{"path":"src/test/java/guitests/guihandles/exceptions/NodeNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles.exceptions;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that the node cannot be found.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NodeNotFoundException extends NoSuchElementException {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":7,"samuelfangjw":5}},{"path":"src/test/java/guitests/guihandles/exceptions/StageNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles.exceptions;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that the stage cannot be found.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StageNotFoundException extends NoSuchElementException {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":7,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        final Index fifthContactIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        assertTrue(fifthContactIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        assertTrue(fifthContactIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        assertTrue(fifthContactIndex.equals(fifthContactIndex));","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        assertFalse(fifthContactIndex.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        assertFalse(fifthContactIndex.equals(5.0f));","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        assertFalse(fifthContactIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"lirc572":7,"-":53}},{"path":"src/test/java/seedu/address/commons/util/DateUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"public class DateUtilTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-26"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public void encodeDate_validDate_success() throws DateConversionException {","lastModifiedDate":"2021-03-26"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        String validDate1 \u003d \"01-01-2021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        String validDate2 \u003d \"01012021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        String validDate3 \u003d \"01/01/2021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        String validDate4 \u003d \"01.01.2021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate date \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-26"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(date, DateUtil.encodeDate(validDate1));","lastModifiedDate":"2021-03-26"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(date, DateUtil.encodeDate(validDate2));","lastModifiedDate":"2021-03-26"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(date, DateUtil.encodeDate(validDate3));","lastModifiedDate":"2021-03-26"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(date, DateUtil.encodeDate(validDate4));","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-26"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-26"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public void encodeDate_invalidDate_throwsDateConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        String invalidDate \u003d \"209-01-01\";","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String invalidDate1 \u003d \"20-09/0101\";","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"        String invalidDate2 \u003d \"2001-01-01\";","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        String invalidDate3 \u003d \"a\";","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        String invalidDate4 \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        String invalidDate5 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String invalidDate6 \u003d \"20-20--2021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        String invalidDate7 \u003d \"31-02--2021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate1));","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate2));","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate3));","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate4));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate5));","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate6));","lastModifiedDate":"2021-03-26"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate7));","lastModifiedDate":"2021-03-26"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void decodeDate_validDate_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(DateUtil.decodeDate(validDate), \"01 Jan 2020\");","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public void decodeDate_invalidDate_throwsDateConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        LocalDate invalidDate \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.decodeDate(invalidDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    public void decodeDateForStorage_invalidDate_throwsDateConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        LocalDate invalidDate \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.decodeDateForStorage(invalidDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":39,"Eriksen2411":1,"samuelfangjw":27}},{"path":"src/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void createFile_fileExists_success() throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // valid path","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        Path validFilePath \u003d testFolder.resolve(\"valid/file/path\");","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        // create file at path","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        FileUtil.createFile(validFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // method does not throw error","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createFile(validFilePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":23,"samuelfangjw":19}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewContactsCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonColabFolderStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        JsonColabFolderStorage colabFolderStorage \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                new JsonColabFolderStorage(temporaryFolder.resolve(\"colab.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        StorageManager storage \u003d new StorageManager(colabFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        String deleteCommand \u003d DeleteContactCommand.COMMAND_WORD + \" 9\";","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        String listCommand \u003d ViewContactsCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(listCommand, ViewContactsCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_colabFolderStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // Setup LogicManager with JsonColabFolderIoExceptionThrowingStub","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        JsonColabFolderStorage colabFolderStorage \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                new JsonColabFolderIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionColabFolder.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        StorageManager storage \u003d new StorageManager(colabFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        // Execute add contact command","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        String addContactCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        Contact expectedContact \u003d new ContactBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        expectedModel.addContact(expectedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(addContactCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        // Execute add project command","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        String projectName \u003d \"New Project\";","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        String addProjectCommand \u003d AddProjectCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_NAME + projectName;","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        Project expectedProject \u003d new ProjectBuilder().withName(projectName).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel.addProject(expectedProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(addProjectCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredContactList().remove(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void getFilteredProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredProjectsList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(model.getColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    private static class JsonColabFolderIoExceptionThrowingStub extends JsonColabFolderStorage {","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        private JsonColabFolderIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        public void saveColabFolder(ReadOnlyColabFolder colabFolder, Path filePath) throws IOException {","lastModifiedDate":"2021-03-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"lirc572":13,"-":133,"samuelfangjw":35}},{"path":"src/test/java/seedu/address/logic/commandhistory/CommandHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commandhistory;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-28"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class CommandHistoryTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    private final CommandHistory commandHistory \u003d CommandHistory.getCommandHistory();","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        commandHistory.clearCommandHistory();","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public void addCommand_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        // valid command","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e commandHistory.addCommand(\"Test\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public void addCommand_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        // null command","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e commandHistory.addCommand(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void previousAndNextCommand_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String currCommand \u003d \"CurrentCommand\";","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        String commandInHistory1 \u003d \"TestPrevious1\";","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        String commandInHistory2 \u003d \"TestPrevious2\";","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        // User presses up key, no history, return current command.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(currCommand, commandHistory.getPrevious(currCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // Add 2 commands to history.","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        commandHistory.addCommand(commandInHistory1);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        commandHistory.addCommand(commandInHistory2);","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        // User presses up key, return second command in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(commandInHistory2, commandHistory.getPrevious(currCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        // User presses up again, return first command in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(commandInHistory1, commandHistory.getPrevious(commandInHistory2));","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // User presses up again, return first command in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(commandInHistory1, commandHistory.getPrevious(commandInHistory1));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        // User presses down, return second command in history.","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(commandInHistory2, commandHistory.getNext(commandInHistory1));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        // User presses down, return current command.","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(currCommand, commandHistory.getNext(commandInHistory2));","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        // User presses down, return current command.","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(currCommand, commandHistory.getNext(currCommand));","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-28"}],"authorContributionMap":{"samuelfangjw":61}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    public void execute_newContact_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(model.getColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        expectedModel.addContact(validContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        assertCommandSuccess(new AddContactCommand(validContact), model,","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                String.format(AddContactCommand.MESSAGE_SUCCESS, validContact),","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        Contact contactInList \u003d model.getColabFolder().getContactList().get(0);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(new AddContactCommand(contactInList), model, AddContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"lirc572":10,"-":31,"samuelfangjw":6}},{"path":"src/test/java/seedu/address/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.SavedState;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public void constructor_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    public void execute_contactAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        ModelStubAcceptingContactAdded modelStub \u003d new ModelStubAcceptingContactAdded();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validContact).execute(modelStub);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        assertEquals(String.format(AddContactCommand.MESSAGE_SUCCESS, validContact), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        assertEquals(Arrays.asList(validContact), modelStub.contactsAdded);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        AddContactCommand addContactCommand \u003d new AddContactCommand(validContact);","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        ModelStub modelStub \u003d new ModelStubWithContact(validContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"                AddContactCommand.MESSAGE_DUPLICATE_CONTACT, () -\u003e addContactCommand.execute(modelStub));","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        Contact alice \u003d new ContactBuilder().withName(\"Alice\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        Contact bob \u003d new ContactBuilder().withName(\"Bob\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        public Path getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        public void setColabFolderFilePath(Path colabFolderFilePath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        public void setColabFolder(ReadOnlyColabFolder newData) {","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        public ReadOnlyColabFolder getColabFolder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        public void deleteContact(Contact target) {","lastModifiedDate":"2021-03-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"        public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        public void deleteProject(Project target) {","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        public void addProject(Project projects) {","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"        public SavedState getUndoState() throws NoUndoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"        public SavedState getRedoState() throws NoRedoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"        public CommandResult undo() throws NoUndoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"        public CommandResult redo() throws NoRedoableStateException {","lastModifiedDate":"2021-03-29"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-29"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        public void commitState(CommandResult commandResult) {","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":213,"author":{"gitId":"lirc572"},"content":"     * A Model stub that contains a single contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"lirc572"},"content":"    private class ModelStubWithContact extends ModelStub {","lastModifiedDate":"2021-03-28"},{"lineNumber":216,"author":{"gitId":"lirc572"},"content":"        private final Contact contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"lirc572"},"content":"        ModelStubWithContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":219,"author":{"gitId":"lirc572"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":220,"author":{"gitId":"lirc572"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"lirc572"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":225,"author":{"gitId":"lirc572"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":226,"author":{"gitId":"lirc572"},"content":"            return this.contact.isSameContact(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"lirc572"},"content":"     * A Model stub that always accept the contact being added.","lastModifiedDate":"2021-03-28"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"lirc572"},"content":"    private class ModelStubAcceptingContactAdded extends ModelStub {","lastModifiedDate":"2021-03-28"},{"lineNumber":234,"author":{"gitId":"lirc572"},"content":"        final ArrayList\u003cContact\u003e contactsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-28"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"lirc572"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":238,"author":{"gitId":"lirc572"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":239,"author":{"gitId":"lirc572"},"content":"            return contactsAdded.stream().anyMatch(contact::isSameContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":244,"author":{"gitId":"lirc572"},"content":"            requireNonNull(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":245,"author":{"gitId":"lirc572"},"content":"            contactsAdded.add(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        public ReadOnlyColabFolder getColabFolder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"            return new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"lirc572":47,"-":140,"samuelfangjw":67}},{"path":"src/test/java/seedu/address/logic/commands/AddDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public void execute_validParameters_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        Deadline validDeadline \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        CommandResult commandResult \u003d new AddDeadlineCommand(INDEX_FIRST, validDeadline).execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(Messages.MESSAGE_ADD_DEADLINE_SUCCESS, validDeadline,","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToAdd \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        // Typical project list contains only 2 projects","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(INDEX_THIRD, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addDeadlineCommand.execute(model)","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    public void execute_duplicateDeadline_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToAdd \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(LocalDate.of(2020, 1, 1)).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(INDEX_FIRST, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        projectToAddTo.addDeadline(deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_DEADLINE, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                addDeadlineCommand.execute(model));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToAdd \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineToOneCommand \u003d new AddDeadlineCommand(INDEX_FIRST, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineToTwoCommand \u003d new AddDeadlineCommand(INDEX_SECOND, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        assertEquals(addDeadlineToOneCommand, addDeadlineToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineToOneCommandCopy \u003d new AddDeadlineCommand(INDEX_FIRST, deadlineToAdd);;","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        assertEquals(addDeadlineToOneCommandCopy, addDeadlineToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addDeadlineToOneCommand, 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addDeadlineToOneCommand, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addDeadlineToTwoCommand, addDeadlineToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":91,"samuelfangjw":6}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_validParameters_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        Event validEvent \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"                .withDate(LocalDate.of(2020, 01, 01)).withTime(LocalTime.of(17, 30))","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"                .withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        CommandResult commandResult \u003d new AddEventCommand(INDEX_FIRST, validEvent).execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(Messages.MESSAGE_ADD_EVENT_SUCCESS, validEvent,","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToAdd \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"                .withDate(LocalDate.of(2020, 01, 01)).withTime(LocalTime.of(17, 30))","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"                .withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"        // Typical project list contains only 2 projects","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(INDEX_THIRD, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addEventCommand.execute(model)","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToAdd \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"                .withDate(LocalDate.of(2020, 01, 01)).withTime(LocalTime.of(17, 30))","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                .withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(INDEX_FIRST, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"        projectToAddTo.addEvent(eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_EVENT, () -\u003e addEventCommand.execute(model));","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToAdd \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"                .withDate(LocalDate.of(2020, 01, 01)).withTime(LocalTime.of(17, 30))","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"                .withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventToOneCommand \u003d new AddEventCommand(INDEX_FIRST, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventToTwoCommand \u003d new AddEventCommand(INDEX_SECOND, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(addEventToOneCommand, addEventToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventToOneCommandCopy \u003d new AddEventCommand(INDEX_FIRST, eventToAdd);;","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(addEventToOneCommandCopy, addEventToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"        assertNotEquals(addEventToOneCommand, 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"        assertNotEquals(addEventToOneCommand, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"        assertNotEquals(addEventToTwoCommand, addEventToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":10,"Eriksen2411":85,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/logic/commands/AddGroupmateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_ADD_GROUPMATE_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DUPLICATE_GROUPMATE;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.GroupmateBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"public class AddGroupmateCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-15"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        Project validProject \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        Groupmate validGroupmate \u003d new GroupmateBuilder().withName(\"Tom\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        CommandResult commandResult \u003d new AddGroupmateCommand(INDEX_FIRST, validGroupmate).execute(model);","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(MESSAGE_ADD_GROUPMATE_SUCCESS, validGroupmate.getName(),","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                validProject.getProjectName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        Groupmate groupmateToAdd \u003d new GroupmateBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        AddGroupmateCommand addGroupmateCommand \u003d new AddGroupmateCommand(INDEX_THIRD, groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addGroupmateCommand.execute(model)","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        Groupmate groupmateToAdd \u003d new GroupmateBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        AddGroupmateCommand addGroupmateCommand \u003d new AddGroupmateCommand(INDEX_FIRST, groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        projectToAddTo.addGroupmate(groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                String.format(","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                        MESSAGE_DUPLICATE_GROUPMATE,","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                        projectToAddTo.getProjectName()","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"                ), () -\u003e addGroupmateCommand.execute(model)","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        Groupmate groupmateToAdd \u003d new GroupmateBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        AddGroupmateCommand addOneToOneCommand \u003d new AddGroupmateCommand(INDEX_FIRST, groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        AddGroupmateCommand addOneToTwoCommand \u003d new AddGroupmateCommand(INDEX_SECOND, groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        assertEquals(addOneToOneCommand, addOneToOneCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        AddGroupmateCommand addOneToOneCommandCopy \u003d new AddGroupmateCommand(INDEX_FIRST, groupmateToAdd);","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        assertEquals(addOneToOneCommandCopy, addOneToOneCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(addOneToOneCommand, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(addOneToOneCommand, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(addOneToTwoCommand, addOneToOneCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":80,"samuelfangjw":16}},{"path":"src/test/java/seedu/address/logic/commands/AddTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void execute_validParameters_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        Todo validTodo \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        CommandResult commandResult \u003d new AddTodoCommand(INDEX_FIRST, validTodo).execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(Messages.MESSAGE_ADD_TODO_SUCCESS, validTodo,","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        Todo todoToAdd \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        // Typical project list contains only 2 projects","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(INDEX_THIRD, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addTodoCommand.execute(model)","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public void execute_duplicateTodo_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        Todo todoToAdd \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        projectToAddTo.addTodo(todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(INDEX_FIRST, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_TODO, () -\u003e addTodoCommand.execute(model));","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        Todo todoToAdd \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoToOneCommand \u003d new AddTodoCommand(INDEX_FIRST, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoToTwoCommand \u003d new AddTodoCommand(INDEX_SECOND, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        assertEquals(addTodoToOneCommand, addTodoToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoToOneCommandCopy \u003d new AddTodoCommand(INDEX_FIRST, todoToAdd);;","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        assertEquals(addTodoToOneCommandCopy, addTodoToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addTodoToOneCommand, 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addTodoToOneCommand, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"        // different todo -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addTodoToTwoCommand, addTodoToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":86,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_emptyContactList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_nonEmptyContactList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel.setColabFolder(new ColabFolder());","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"vevek":2,"-":23,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ExitUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowHelpUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void hasUiCommand_commandPresent_assertTrue() {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResultHelp \u003d new CommandResult(\"test\", new ShowHelpUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResultExit \u003d new CommandResult(\"test\", new ExitUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(commandResultHelp.hasUiCommand());","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(commandResultExit.hasUiCommand());","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void hasUiCommand_commandNotPresent_assertTrue() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResultNone \u003d new CommandResult(\"test\");","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(commandResultNone.hasUiCommand());","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_nullValues_throwsException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandResult(null, null));","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandResult(null));","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_noNullValues_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new CommandResult(\"test\"));","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new CommandResult(\"test\", new ExitUiCommand()));","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", new ShowHelpUiCommand())));","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", new ExitUiCommand())));","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                new ShowHelpUiCommand()).hashCode());","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                new ExitUiCommand()).hashCode());","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":49,"samuelfangjw":39}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.UiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.UpdateContactDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_NAME_SYLPH \u003d \"Sylphiette Greyrat\";","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_NAME_ROXY \u003d \"Roxy Migurdia\";","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_ROLE_LEADER \u003d \"leader\";","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_ROLE_MAGICIAN \u003d \"magician\";","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_INDEX_ONE \u003d \"1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_INDEX_TWO \u003d \"2\";","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"    public static final String VALID_DESCRIPTION \u003d \" \" + PREFIX_DESCRIPTION + \"CS2106 Tutorial\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public static final String VALID_DEADLINE_DATE \u003d \" \" + PREFIX_DEADLINE_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public static final String VALID_EVENT_DATE \u003d \" \" + PREFIX_EVENT_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public static final String VALID_EVENT_TIME \u003d \" \" + PREFIX_EVENT_TIME + \"1730\";","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    public static final String VALID_EVENT_WEEKLY \u003d \" \" + PREFIX_EVENT_WEEKLY + \"N\";","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"    public static final String INVALID_DESCRIPTION \u003d \" \" + PREFIX_DESCRIPTION + \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public static final String INVALID_DEADLINE_DATE \u003d \" \" + PREFIX_DEADLINE_DATE + \"01/01-2020\";","lastModifiedDate":"2021-03-26"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    public static final String INVALID_EVENT_DATE \u003d \" \" + PREFIX_EVENT_DATE + \"01-01/2020\";","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    public static final String INVALID_EVENT_TIME \u003d \" \" + PREFIX_EVENT_TIME + \"17-30\";","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    public static final String INVALID_EVENT_WEEKLY \u003d \" \" + PREFIX_EVENT_WEEKLY + \"Maybe\";","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    public static final String NAME_DESC_SYLPH \u003d \" \" + PREFIX_NAME + VALID_NAME_SYLPH;","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    public static final String ROLE_DESC_LEADER \u003d \" \" + PREFIX_ROLE + VALID_ROLE_LEADER;","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public static final String NAME_DESC_ROXY \u003d \" \" + PREFIX_NAME + VALID_NAME_ROXY;","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public static final String ROLE_DESC_MAGICIAN \u003d \" \" + PREFIX_ROLE + VALID_ROLE_MAGICIAN;","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    public static final String INDEX_STANDALONE_ONE \u003d \" \" + VALID_INDEX_ONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"    public static final String INDEX_STANDALONE_TWO \u003d \" \" + VALID_INDEX_TWO;","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"    public static final String INVALID_INDEX_STANDALONE \u003d \" \" + \"0\";","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"    public static final UpdateContactCommand.UpdateContactDescriptor DESC_AMY;","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"    public static final UpdateContactCommand.UpdateContactDescriptor DESC_BOB;","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        DESC_AMY \u003d new UpdateContactDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        DESC_BOB \u003d new UpdateContactDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"     * that takes a string {@code expectedMessage} and a {@code uiCommand}.","lastModifiedDate":"2021-03-13"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                                            UiCommand uiCommand, Model expectedModel) {","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, uiCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"     * - the CoLAB folder, filtered contact list and selected contact in {@code actualModel} remain unchanged","lastModifiedDate":"2021-03-28"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder expectedColabFolder \u003d new ColabFolder(actualModel.getColabFolder());","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        List\u003cContact\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedColabFolder, actualModel.getColabFolder());","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"     * Updates {@code model}\u0027s filtered list to show only the contact at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"     * {@code model}\u0027s contact list.","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"    public static void showContactAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-28"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredContactList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"        Contact contact \u003d model.getFilteredContactList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"        final String[] splitName \u003d contact.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-28"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredContactList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, model.getFilteredContactList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"     * Updates {@code model}\u0027s filtered list to show only the project at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"     * {@code model}\u0027s projects folder.","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"    public static void showProjectAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredProjectList().size());","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d model.getFilteredProjectList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        final String[] splitName \u003d project.getProjectName().projectName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        model.updateFilteredProjectList(new ProjectNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, model.getFilteredProjectList().size());","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lirc572":36,"vevek":8,"Eriksen2411":3,"-":114,"samuelfangjw":30}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Model model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        Contact contactToDelete \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        expectedModel.deleteContact(contactToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        Contact contactToDelete \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(DeleteContactCommand.MESSAGE_DELETE_CONTACT_SUCCESS, contactToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(model.getColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        expectedModel.deleteContact(contactToDelete);","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        showNoContact(expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteContactCommand, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getColabFolder().getContactList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"    private void showNoContact(Model model) {","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredContactList(p -\u003e false);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        assertTrue(model.getFilteredContactList().isEmpty());","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lirc572":30,"-":72,"samuelfangjw":8}},{"path":"src/test/java/seedu/address/logic/commands/DeleteDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DELETE_DEADLINE_SUCCESS;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"public class DeleteDeadlineCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToDelete \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        editedProject.addDeadline(deadlineToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        Index firstDeadlineIndex \u003d Index.fromOneBased(1); // deadline is added to front since list is sorted","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeleteDeadlineCommand deleteDeadlineCommand \u003d new DeleteDeadlineCommand(INDEX_FIRST, firstDeadlineIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_DEADLINE_SUCCESS, firstDeadlineIndex.getOneBased(),","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteDeadlineCommand, model, expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(INDEX_FIRST), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToDelete \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        editedProject.addDeadline(deadlineToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        Index lastDeadlineIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand deleteDeadlineCommand \u003d new DeleteDeadlineCommand(INDEX_THIRD, lastDeadlineIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e deleteDeadlineCommand.execute(model)","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    public void execute_invalidDeadlineIndex_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToDelete \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        editedProject.addDeadline(deadlineToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"        Index invalidDeadlineIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"                        INDEX_FIRST.getZeroBased()).getDeadlines().getSortedDeadlineList().size() + 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand deleteDeadlineCommand \u003d new DeleteDeadlineCommand(INDEX_FIRST, invalidDeadlineIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX, () -\u003e deleteDeadlineCommand.execute(model)","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToDelete \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"        Project project1ToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"        Project editedProject1 \u003d new ProjectBuilder(project1ToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"        editedProject1.addDeadline(deadlineToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"                project1ToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"                editedProject1","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"        Project project2ToEdit \u003d model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"        Project editedProject2 \u003d new ProjectBuilder(project2ToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"        editedProject2.addDeadline(deadlineToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"                project2ToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"                editedProject2","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"        Index lastDeadlineFromProject1 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"        Index lastDeadlineFromProject2 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased()).getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand deleteDeadlineFromProject1Command \u003d new DeleteDeadlineCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastDeadlineFromProject1);","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand deleteDeadlineFromProject2Command \u003d new DeleteDeadlineCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"                INDEX_SECOND, lastDeadlineFromProject2);","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteDeadlineFromProject1Command, deleteDeadlineFromProject1Command);","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand deleteDeadlineFromProject1CommandCopy \u003d new DeleteDeadlineCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastDeadlineFromProject1);","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteDeadlineFromProject1Command, deleteDeadlineFromProject1CommandCopy);","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteDeadlineFromProject1Command, 1);","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteDeadlineFromProject1Command, null);","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteDeadlineFromProject1Command, deleteDeadlineFromProject2Command);","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"vevek":145,"samuelfangjw":15}},{"path":"src/test/java/seedu/address/logic/commands/DeleteEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DELETE_EVENT_SUCCESS;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"public class DeleteEventCommandTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    public void execute_validIndexUnfilteredList_success() throws DateConversionException {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        Event eventToDelete \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        editedProject.addEvent(eventToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        Index firstEventIndex \u003d Index.fromOneBased(1); // Event is first in the sorted list","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST, firstEventIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_EVENT_SUCCESS, firstEventIndex.getOneBased(),","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteEventCommand, model, expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(INDEX_FIRST), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        Event eventToDelete \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        editedProject.addEvent(eventToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        Index lastEventIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getEvents().getSortedEventList().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_THIRD, lastEventIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e deleteEventCommand.execute(model)","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    public void execute_invalidEventIndex_throwsCommandException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        Event eventToDelete \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        editedProject.addEvent(eventToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"        Index invalidEventIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getEvents().size() + 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand deleteEventCommand \u003d new DeleteEventCommand(INDEX_FIRST, invalidEventIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX, () -\u003e deleteEventCommand.execute(model)","lastModifiedDate":"2021-03-25"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"        Event eventToDelete \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        Project project1ToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"        Project editedProject1 \u003d new ProjectBuilder(project1ToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"        editedProject1.addEvent(eventToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"                project1ToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"                editedProject1","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"        Project project2ToEdit \u003d model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-25"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"        Project editedProject2 \u003d new ProjectBuilder(project2ToEdit).build();","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"        editedProject2.addEvent(eventToDelete);","lastModifiedDate":"2021-03-25"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"                project2ToEdit,","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"                editedProject2","lastModifiedDate":"2021-03-25"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"        Index lastEventFromProject1 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getEvents().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"        Index lastEventFromProject2 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-25"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased()).getEvents().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand deleteEventFromProject1Command \u003d new DeleteEventCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastEventFromProject1);","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand deleteEventFromProject2Command \u003d new DeleteEventCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"                INDEX_SECOND, lastEventFromProject2);","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteEventFromProject1Command, deleteEventFromProject1Command);","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand deleteEventFromProject1CommandCopy \u003d new DeleteEventCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastEventFromProject1);","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteEventFromProject1Command, deleteEventFromProject1CommandCopy);","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteEventFromProject1Command, 1);","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteEventFromProject1Command, null);","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteEventFromProject1Command, deleteEventFromProject2Command);","lastModifiedDate":"2021-03-25"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"vevek":145,"samuelfangjw":14}},{"path":"src/test/java/seedu/address/logic/commands/DeleteGroupmateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DELETE_GROUPMATE_SUCCESS;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.GroupmateBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"public class DeleteGroupmateCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        Groupmate contactToDelete \u003d new GroupmateBuilder().withName(\"a\").build();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        editedProject.addGroupmate(contactToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"                editedProject","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        Index firstContactIndex \u003d Index.fromOneBased(1); //groupmate is first in sorted list","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeleteGroupmateCommand deleteGroupmateCommand \u003d new DeleteGroupmateCommand(INDEX_FIRST, firstContactIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_GROUPMATE_SUCCESS,","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"                contactToDelete.getName(), projectToEdit.getProjectName());","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteGroupmateCommand, model, expectedMessage,","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(INDEX_FIRST), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        Groupmate contactToDelete \u003d new GroupmateBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        editedProject.addGroupmate(contactToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"                editedProject","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        Index lastContactIndex \u003d Index.fromOneBased(model.getFilteredProjectList().get(","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"                INDEX_FIRST.getZeroBased()).getGroupmates().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        DeleteGroupmateCommand deleteGroupmateCommand \u003d new DeleteGroupmateCommand(INDEX_THIRD, lastContactIndex);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        assertThrows(","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e deleteGroupmateCommand.execute(model)","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        Groupmate contactToDelete \u003d new GroupmateBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        Project project1ToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        Project editedProject1 \u003d new ProjectBuilder(project1ToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        editedProject1.addGroupmate(contactToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"                project1ToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"                editedProject1","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        Project project2ToEdit \u003d model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        Project editedProject2 \u003d new ProjectBuilder(project2ToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        editedProject2.addGroupmate(contactToDelete);","lastModifiedDate":"2021-03-29"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"                project2ToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"                editedProject2","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"        Index lastContactFromProject1 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getGroupmates().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        Index lastContactFromProject2 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"                model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased()).getGroupmates().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        DeleteGroupmateCommand deleteContactFromProject1Command \u003d new DeleteGroupmateCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastContactFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        DeleteGroupmateCommand deleteContactFromProject2Command \u003d new DeleteGroupmateCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"                INDEX_SECOND, lastContactFromProject2);","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteContactFromProject1Command, deleteContactFromProject1Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        DeleteGroupmateCommand deleteContactFromProject1CommandCopy \u003d new DeleteGroupmateCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastContactFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteContactFromProject1Command, deleteContactFromProject1CommandCopy);","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteContactFromProject1Command, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteContactFromProject1Command, null);","lastModifiedDate":"2021-03-24"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteContactFromProject1Command, deleteContactFromProject2Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":107,"vevek":10,"samuelfangjw":19}},{"path":"src/test/java/seedu/address/logic/commands/DeleteProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS,","lastModifiedDate":"2021-04-01"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                projectToDelete.getProjectName());","lastModifiedDate":"2021-04-01"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteProjectCommand, model, expectedMessage, new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"        assertCommandFailure(deleteProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS,","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                projectToDelete.getProjectName());","lastModifiedDate":"2021-04-01"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        showNoProject(expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteProjectCommand, model, expectedMessage, new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"        // ensures that outOfBoundIndex is still in bounds of project list","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getColabFolder().getProjectsList().size());","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"        assertCommandFailure(deleteProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteFirstProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteSecondProjectCommand \u003d new DeleteProjectCommand(INDEX_SECOND);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(deleteFirstProjectCommand.equals(deleteFirstProjectCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteFirstProjectCommandCopy \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(deleteFirstProjectCommand.equals(deleteFirstProjectCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"        assertFalse(deleteFirstProjectCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"        assertFalse(deleteFirstProjectCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"Eriksen2411"},"content":"        assertFalse(deleteFirstProjectCommand.equals(deleteSecondProjectCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Eriksen2411"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Eriksen2411"},"content":"    private void showNoProject(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(p -\u003e false);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(model.getFilteredProjectList().isEmpty());","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"lirc572":1,"Eriksen2411":93,"samuelfangjw":21}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TODO_SUCCESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndTodosUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoToDelete \u003d new TodoBuilder().withDescription(\"a\").build();","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        editedProject.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        Index firstTodoIndex \u003d Index.fromOneBased(1); // todo is first in sorted list","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_FIRST, firstTodoIndex);","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_TODO_SUCCESS, firstTodoIndex.getOneBased(),","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                projectToEdit.getProjectName());","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(deleteTodoCommand, model, expectedMessage,","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndTodosUiCommand(INDEX_FIRST), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        editedProject.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        Index lastTodoIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getSortedTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_THIRD, lastTodoIndex);","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e deleteTodoCommand.execute(model)","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    public void execute_invalidTodoIndex_throwsCommandException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        editedProject.addTodo(todoToDelete);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"        Index invalidTodoIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getSortedTodos().size() + 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_FIRST, invalidTodoIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX, () -\u003e deleteTodoCommand.execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        Project project1ToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"        Project editedProject1 \u003d new ProjectBuilder(project1ToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"        editedProject1.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"                project1ToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"                editedProject1","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"        Project project2ToEdit \u003d model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"        Project editedProject2 \u003d new ProjectBuilder(project2ToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"        editedProject2.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"                project2ToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"                editedProject2","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"        Index lastTodoFromProject1 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getSortedTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"        Index lastTodoFromProject2 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"                model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased()).getTodos().getSortedTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoFromProject1Command \u003d new DeleteTodoCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastTodoFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoFromProject2Command \u003d new DeleteTodoCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"                INDEX_SECOND, lastTodoFromProject2);","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteTodoFromProject1Command, deleteTodoFromProject1Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoFromProject1CommandCopy \u003d new DeleteTodoCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastTodoFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteTodoFromProject1Command, deleteTodoFromProject1CommandCopy);","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteTodoFromProject1Command, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteTodoFromProject1Command, null);","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteTodoFromProject1Command, deleteTodoFromProject2Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":142,"samuelfangjw":17}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ExitUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"                new ExitUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/logic/commands/FindContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.CARL;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.ELLE;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.FIONA;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"public class FindContactCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Model model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        FindContactCommand findFirstCommand \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        FindContactCommand findSecondCommand \u003d new FindContactCommand(secondPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        FindContactCommand findFirstCommandCopy \u003d new FindContactCommand(firstPredicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    public void execute_zeroKeywords_noContactFound() {","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        expectedModel.updateFilteredContactList(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(command, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public void execute_multipleKeywords_multipleContactsFound() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        FindContactCommand command \u003d new FindContactCommand(predicate);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        expectedModel.updateFilteredContactList(predicate);","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(command, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lirc572":20,"-":58,"samuelfangjw":6}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowHelpUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, new ShowHelpUiCommand());","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code RedoCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class RedoCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validState_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", new ShowTodayUiCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        model.commitState(commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        model.undo();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"                String.format(RedoCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser()),","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_invalidState_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(redoCommand, model, RedoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":38}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code UndoCommand}.","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class UndoCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validState_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", new ShowTodayUiCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        model.commitState(commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        model.commitState(commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"                String.format(UndoCommand.MESSAGE_SUCCESS, commandResult.getFeedbackToUser()),","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                String.format(UndoCommand.MESSAGE_SUCCESS, \"Viewing Initial State.\"),","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_invalidState_throwsCommandException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(undoCommand, model, UndoCommand.MESSAGE_FAILURE);","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/test/java/seedu/address/logic/commands/UpdateContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand.UpdateContactDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.UpdateContactDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":" * Contains integration tests (interaction with the Model) and unit tests for UpdateContactCommand.","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"public class UpdateContactCommandTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private Model model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        Contact editedContact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder(editedContact).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(UpdateContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new ColabFolder(model.getColabFolder()), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        expectedModel.setContact(model.getFilteredContactList().get(0), editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(updateContactCommand, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        Index indexLastContact \u003d Index.fromOneBased(model.getFilteredContactList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        Contact lastContact \u003d model.getFilteredContactList().get(indexLastContact.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        ContactBuilder contactInList \u003d new ContactBuilder(lastContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        Contact editedContact \u003d contactInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(indexLastContact, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(UpdateContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new ColabFolder(model.getColabFolder()), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        expectedModel.setContact(lastContact, editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(updateContactCommand, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"                new UpdateContactDescriptor());","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        Contact editedContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(UpdateContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new ColabFolder(model.getColabFolder()), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(updateContactCommand, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        Contact contactInFilteredList \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        Contact editedContact \u003d new ContactBuilder(contactInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"                new UpdateContactDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(UpdateContactCommand.MESSAGE_EDIT_CONTACT_SUCCESS, editedContact);","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new ColabFolder(model.getColabFolder()), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        expectedModel.setContact(model.getFilteredContactList().get(0), editedContact);","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(updateContactCommand, model, expectedMessage, new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"    public void execute_duplicateContactUnfilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        Contact firstContact \u003d model.getFilteredContactList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder(firstContact)","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(updateContactCommand, model, UpdateContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"    public void execute_duplicateContactFilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        // edit contact in filtered list into a duplicate in contact list","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        Contact contactInList \u003d model.getColabFolder().getContactList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-29"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"                new UpdateContactDescriptorBuilder(contactInList).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(updateContactCommand, model, UpdateContactCommand.MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"    public void execute_invalidContactIndexUnfilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredContactList().size() + 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(updateContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"     * but smaller than size of contact list","lastModifiedDate":"2021-03-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"    public void execute_invalidContactIndexFilteredList_failure() {","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        // ensures that outOfBoundIndex is still in bounds of contact list","lastModifiedDate":"2021-03-25"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getColabFolder().getContactList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand updateContactCommand \u003d new UpdateContactCommand(outOfBoundIndex,","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"                new UpdateContactDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        assertCommandFailure(updateContactCommand, model, Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"        final UpdateContactCommand standardCommand \u003d new UpdateContactCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-03-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor copyDescriptor \u003d new UpdateContactDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand commandWithSameValues \u003d new UpdateContactCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"vevek"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"        assertFalse(standardCommand.equals(new UpdateContactCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"        assertFalse(standardCommand.equals(new UpdateContactCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-03-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"lirc572":62,"vevek":2,"-":98,"samuelfangjw":14}},{"path":"src/test/java/seedu/address/logic/commands/UpdateContactDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand.UpdateContactDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.UpdateContactDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class UpdateContactDescriptorTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor descriptorWithSameValues \u003d new UpdateContactDescriptor(DESC_AMY);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor editedAmy \u003d new UpdateContactDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"                .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        editedAmy \u003d new UpdateContactDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        editedAmy \u003d new UpdateContactDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        editedAmy \u003d new UpdateContactDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        editedAmy \u003d new UpdateContactDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"lirc572":10,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/ViewContactsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showContactAtIndex;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowContactsUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ViewContactsCommand.","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class ViewContactsCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel \u003d new ModelManager(model.getColabFolder(), new UserPrefs());","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewContactsCommand(), model, ViewContactsCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        showContactAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewContactsCommand(), model, ViewContactsCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                new ShowContactsUiCommand(), expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lirc572":3,"-":28,"samuelfangjw":11}},{"path":"src/test/java/seedu/address/logic/commands/ViewOverviewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowOverviewTabUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ViewOverviewCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ViewOverviewCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_newModelManager_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewOverviewCommand(), model, ViewOverviewCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                new ShowOverviewTabUiCommand(), expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/test/java/seedu/address/logic/commands/ViewProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ViewProjectAndOverviewUiCommand;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ViewProjectCommand}.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        model.addProject(validProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel.addProject(validProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewProjectCommand(INDEX_FIRST), model,","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                String.format(ViewProjectCommand.MESSAGE_SUCCESS, validProject),","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                new ViewProjectAndOverviewUiCommand(INDEX_FIRST), expectedModel);","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        ViewProjectCommand viewProjectCommand \u003d new ViewProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(viewProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/test/java/seedu/address/logic/commands/ViewTodayCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ViewTodayCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ViewTodayCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_newModelManager_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewTodayCommand(), model, ViewTodayCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodayUiCommand(), expectedModel);","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/test/java/seedu/address/logic/commands/ViewTodosCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodosTabUiCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ViewTodosCommand}.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ViewTodosCommandTest {","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_newModelManager_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewTodosCommand(), model, ViewTodosCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                new ShowTodosTabUiCommand(), expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/test/java/seedu/address/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.AMY;","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        Contact expectedContact \u003d new ContactBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        Contact expectedContactMultipleTags \u003d new ContactBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddContactCommand(expectedContactMultipleTags));","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        Contact expectedContact \u003d new ContactBuilder(AMY).withTags().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"                new AddContactCommand(expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"lirc572":23,"-":118}},{"path":"src/test/java/seedu/address/logic/parser/AddDeadlineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    private AddDeadlineCommandParser parser \u003d new AddDeadlineCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        Deadline expectedDeadline \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        // all field appear","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION + VALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"                new AddDeadlineCommand(expectedProjectIndex, expectedDeadline)","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION + VALID_DEADLINE_DATE, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DEADLINE_DATE, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        // missing date","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + VALID_DESCRIPTION + VALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_DESCRIPTION + VALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        // invalid date","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION + INVALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":66,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EVENT_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"        Event expectedEvent \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"                .withDate(LocalDate.of(2020, 1, 1)).withTime(LocalTime.of(17, 30))","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"                .withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"        // all field appear","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"                        + VALID_EVENT_DATE + VALID_EVENT_TIME + VALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"                new AddEventCommand(expectedProjectIndex, expectedEvent)","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        // missing project index","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"                        + VALID_EVENT_DATE + VALID_EVENT_TIME + VALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"                        + VALID_EVENT_DATE + VALID_EVENT_TIME + VALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // missing date","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"                        + VALID_EVENT_TIME + VALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        // missing time","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                        + VALID_EVENT_DATE + VALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        // missing isWeekly","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"                        + VALID_EVENT_DATE + VALID_EVENT_TIME,","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"        // invalid project index","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"                + VALID_EVENT_DATE + VALID_EVENT_TIME + VALID_EVENT_WEEKLY, MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"        // invalid description","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"                + VALID_EVENT_DATE + VALID_EVENT_TIME + VALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        // invalid date","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"                + INVALID_EVENT_DATE + VALID_EVENT_TIME + VALID_EVENT_WEEKLY, Messages.MESSAGE_PARSER_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"        // invalid time","lastModifiedDate":"2021-03-29"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-29"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"                + VALID_EVENT_DATE + INVALID_EVENT_TIME + VALID_EVENT_WEEKLY, Messages.MESSAGE_PARSER_TIME_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"        // invalid weekly","lastModifiedDate":"2021-03-29"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"                + VALID_EVENT_DATE + VALID_EVENT_TIME + INVALID_EVENT_WEEKLY,","lastModifiedDate":"2021-03-30"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_WEEKLY_CONSTRAINTS);","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":30,"Eriksen2411":67,"samuelfangjw":4}},{"path":"src/test/java/seedu/address/logic/parser/AddGroupmateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_ROXY;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_SYLPH;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_LEADER;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_MAGICIAN;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_LEADER;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_MAGICIAN;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalGroupmates.SYLPH;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.GroupmateBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"public class AddGroupmateCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    private AddGroupmateCommandParser parser \u003d new AddGroupmateCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        Groupmate expectedContact \u003d new GroupmateBuilder(SYLPH).withRoles(VALID_ROLE_LEADER).build();","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        // all field appear once","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_SYLPH + ROLE_DESC_LEADER,","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"                new AddGroupmateCommand(expectedProjectIndex, expectedContact)","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_ROXY + NAME_DESC_SYLPH + ROLE_DESC_LEADER,","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"                new AddGroupmateCommand(expectedProjectIndex, expectedContact));","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        // multiple roles - all accepted","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        Groupmate expectedGroupmateMultipleTags \u003d new GroupmateBuilder(SYLPH)","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"                .withRoles(VALID_ROLE_MAGICIAN, VALID_ROLE_LEADER)","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"                .build();","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_SYLPH + ROLE_DESC_LEADER","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                        + ROLE_DESC_MAGICIAN,","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                new AddGroupmateCommand(expectedProjectIndex, expectedGroupmateMultipleTags));","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddGroupmateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        // missing project index","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, NAME_DESC_SYLPH + ROLE_DESC_LEADER,","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + ROLE_DESC_LEADER + ROLE_DESC_MAGICIAN,","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        // invalid project index","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + NAME_DESC_SYLPH + ROLE_DESC_LEADER,","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        // invalid name","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_NAME_DESC + ROLE_DESC_LEADER,","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        // invalid role","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_SYLPH + INVALID_ROLE_DESC","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                + ROLE_DESC_MAGICIAN, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_NAME_DESC + INVALID_ROLE_DESC,","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":83,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/logic/parser/AddTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"public class AddTodoCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    private AddTodoCommandParser parser \u003d new AddTodoCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        Todo expectedTodo \u003d new TodoBuilder().withDescription(\"CS2106 Tutorial\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        // all field appear","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION,","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"                new AddTodoCommand(expectedProjectIndex, expectedTodo)","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + VALID_DESCRIPTION,","lastModifiedDate":"2021-04-01"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_DESCRIPTION,","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":54,"samuelfangjw":3}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_DATE;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_WEEKLY;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand.UpdateContactDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewContactsCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewOverviewCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodayCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodosCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactUtil;","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.GroupmateBuilder;","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.GroupmateUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.UpdateContactDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(ContactUtil.getAddCommand(contact));","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        assertEquals(new AddContactCommand(contact), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    public void parseCommand_addCto() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        Groupmate contact \u003d new GroupmateBuilder().build();","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        AddGroupmateCommand command \u003d (AddGroupmateCommand) parser.parseCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                GroupmateUtil.getAddGroupmateCommand(projectIndex, contact)","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        assertEquals(new AddGroupmateCommand(projectIndex, contact), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    public void parseCommand_addDto_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        String addDToCommand \u003d AddDeadlineCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"                + PREFIX_DESCRIPTION + \"CS2106 Tutorial\" + \" \" + PREFIX_DEADLINE_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand command \u003d (AddDeadlineCommand) parser.parseCommand(addDToCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        assertEquals(new AddDeadlineCommand(projectIndex, deadline), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"    public void parseCommand_addEto_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"        Event event \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"                .withDate(LocalDate.of(2020, 01, 01)).withTime(LocalTime.of(17, 30)).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"        String addEToCommand \u003d AddEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"                + PREFIX_DESCRIPTION + \"CS2106 Tutorial\" + \" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"                + PREFIX_EVENT_DATE + \"01-01-2020\" + \" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"                + PREFIX_EVENT_TIME + \"17:30\" + \" \"","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"                + PREFIX_EVENT_WEEKLY + \"n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand command \u003d (AddEventCommand) parser.parseCommand(addEToCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(new AddEventCommand(projectIndex, event), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"    public void parseCommand_addTto_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new TodoBuilder().withDescription(\"CS2106 Tutorial\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        String inputCommand \u003d AddTodoCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"                + PREFIX_DESCRIPTION + \"CS2106 Tutorial\";","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"        AddTodoCommand command \u003d (AddTodoCommand) parser.parseCommand(inputCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"        assertEquals(new AddTodoCommand(projectIndex, todo), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"Eriksen2411"},"content":"    public void parseCommand_deleteP() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"Eriksen2411"},"content":"        String deleteProjectCommandLine \u003d DeleteProjectCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased();","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand command \u003d (DeleteProjectCommand) parser.parseCommand(deleteProjectCommandLine);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(new DeleteProjectCommand(projectIndex), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"    public void parseCommand_deleteCfrom() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"        DeleteGroupmateCommand command \u003d (DeleteGroupmateCommand) parser.parseCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"                DeleteGroupmateCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"                + PREFIX_INDEX + \" \" + projectIndex.getOneBased()","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        assertEquals(new DeleteGroupmateCommand(INDEX_FIRST, INDEX_FIRST), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"    public void parseCommand_deleteD() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"        Index deadlineIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand command \u003d (DeleteDeadlineCommand) parser.parseCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"                DeleteDeadlineCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-25"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"                        + PREFIX_INDEX + \" \" + deadlineIndex.getOneBased()","lastModifiedDate":"2021-03-31"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"        assertEquals(new DeleteDeadlineCommand(projectIndex, deadlineIndex), command);","lastModifiedDate":"2021-03-25"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"    public void parseCommand_deleteT() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"        Index todoIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":161,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand command \u003d (DeleteTodoCommand) parser.parseCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"vevek"},"content":"                DeleteTodoCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"                        + PREFIX_INDEX + \" \" + todoIndex.getOneBased()","lastModifiedDate":"2021-03-31"},{"lineNumber":164,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":166,"author":{"gitId":"vevek"},"content":"        assertEquals(new DeleteTodoCommand(projectIndex, todoIndex), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":170,"author":{"gitId":"vevek"},"content":"    public void parseCommand_deleteE() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":171,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":172,"author":{"gitId":"vevek"},"content":"        Index eventIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":173,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":174,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand command \u003d (DeleteEventCommand) parser.parseCommand(","lastModifiedDate":"2021-03-25"},{"lineNumber":175,"author":{"gitId":"vevek"},"content":"                DeleteEventCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-25"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"                        + PREFIX_INDEX + \" \" + eventIndex.getOneBased()","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-25"},{"lineNumber":178,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":179,"author":{"gitId":"vevek"},"content":"        assertEquals(new DeleteEventCommand(projectIndex, eventIndex), command);","lastModifiedDate":"2021-03-25"},{"lineNumber":180,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":181,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"vevek"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"vevek"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":185,"author":{"gitId":"vevek"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder(contact).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand command \u003d (UpdateContactCommand) parser.parseCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"                UpdateContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + ContactUtil.getUpdateContactDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        assertEquals(new UpdateContactCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":207,"author":{"gitId":"lirc572"},"content":"        FindContactCommand command \u003d (FindContactCommand) parser.parseCommand(","lastModifiedDate":"2021-03-29"},{"lineNumber":208,"author":{"gitId":"lirc572"},"content":"                FindContactCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-03-29"},{"lineNumber":209,"author":{"gitId":"lirc572"},"content":"        assertEquals(new FindContactCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-03-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewContactsCommand.COMMAND_WORD) instanceof ViewContactsCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewContactsCommand.COMMAND_WORD + \" 3\") instanceof ViewContactsCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"    public void parseCommand_today() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewTodayCommand.COMMAND_WORD) instanceof ViewTodayCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewTodayCommand.COMMAND_WORD + \" 3\") instanceof ViewTodayCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"    public void parseCommand_tabO() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewOverviewCommand.COMMAND_WORD) instanceof ViewOverviewCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewOverviewCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-03-30"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"                instanceof ViewOverviewCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"    public void parseCommand_tabT() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewTodosCommand.COMMAND_WORD) instanceof ViewTodosCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ViewTodosCommand.COMMAND_WORD + \" 3\")","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"                instanceof ViewTodosCommand);","lastModifiedDate":"2021-03-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"lirc572":48,"vevek":80,"Eriksen2411":20,"-":76,"samuelfangjw":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST));","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"lirc572":7,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/DeleteDeadlineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class DeleteDeadlineCommandParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    private DeleteDeadlineCommandParser parser \u003d new DeleteDeadlineCommandParser();","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        Index expectedDeadlineIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        String userInput \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        DeleteDeadlineCommand command \u003d new DeleteDeadlineCommand(expectedProjectIndex, expectedDeadlineIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        // all field appear once","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String userInputMissingProject \u003d PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingProject, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        String userInputMissingPrefix \u003d INDEX_FIRST.getOneBased() + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingPrefix, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        String userInputMissingDeadline \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputMissingDeadline, MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        String validProjectIndex \u003d \"1\";","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String validDeadlineIndex \u003d \"1\";","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        String userInputInvalidProjectIndex \u003d \"0 \" + PREFIX_INDEX + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"                + validDeadlineIndex;","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputInvalidProjectIndex, MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        String userInputInvalidDeadlineIndex \u003d validProjectIndex + \" \" + PREFIX_INDEX + \" 0\";","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        // invalid remove deadline index","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputInvalidDeadlineIndex, MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"vevek":57,"samuelfangjw":13}},{"path":"src/test/java/seedu/address/logic/parser/DeleteEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class DeleteEventCommandParserTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    private DeleteEventCommandParser parser \u003d new DeleteEventCommandParser();","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        Index expectedEventIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        String userInput \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        DeleteEventCommand command \u003d new DeleteEventCommand(expectedProjectIndex, expectedEventIndex);","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        // all field appear once","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String userInputMissingProject \u003d PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingProject, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        String userInputMissingPrefix \u003d INDEX_FIRST.getOneBased() + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingPrefix, expectedMessage);","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        String userInputMissingEvent \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputMissingEvent, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        String validProjectIndex \u003d \"1\";","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String validEventIndex \u003d \"1\";","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        String userInputInvalidProjectIndex \u003d \"0 \" + PREFIX_INDEX + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"                + validEventIndex;","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputInvalidProjectIndex, MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        String userInputInvalidEventIndex \u003d validProjectIndex + \" \" + PREFIX_INDEX + \" 0\";","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        // invalid remove event index","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputInvalidEventIndex,","lastModifiedDate":"2021-03-25"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"vevek":58,"samuelfangjw":13}},{"path":"src/test/java/seedu/address/logic/parser/DeleteGroupmateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"public class DeleteGroupmateCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"    private DeleteGroupmateCommandParser parser \u003d new DeleteGroupmateCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"        Index expectedContactIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        // all field appear once","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertParseSuccess(parser, INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"                        + INDEX_FIRST.getOneBased(),","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"                new DeleteGroupmateCommand(expectedProjectIndex, expectedContactIndex)","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteGroupmateCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        // missing project index","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased(),","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, \"\" + INDEX_FIRST.getOneBased(), expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        // invalid project index","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"0 \" + PREFIX_INDEX + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"                + INDEX_FIRST.getOneBased(), MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        // invalid remove","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX + \" 0\",","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                MESSAGE_INVALID_GROUPMATE_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":44,"samuelfangjw":9}},{"path":"src/test/java/seedu/address/logic/parser/DeleteProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"    private DeleteProjectCommandParser parser \u003d new DeleteProjectCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"        assertParseSuccess(parser, \"1\", new DeleteProjectCommand(INDEX_FIRST));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"a\", MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Eriksen2411":23,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    private DeleteTodoCommandParser parser \u003d new DeleteTodoCommandParser();","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        Index expectedTodoIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        String userInput \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand command \u003d new DeleteTodoCommand(expectedProjectIndex, expectedTodoIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        // all field appear once","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        String userInputMissingProject \u003d PREFIX_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingProject, expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        String userInputMissingPrefix \u003d INDEX_FIRST.getOneBased() + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingPrefix, expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        String userInputMissingTodo \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_INDEX;","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputMissingTodo, MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        String validProjectIndex \u003d \"1\";","lastModifiedDate":"2021-04-01"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String validTodoIndex \u003d \"1\";","lastModifiedDate":"2021-04-01"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        String userInputInvalidProjectIndex \u003d \"0 \" + PREFIX_INDEX + \" \"","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"                + validTodoIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputInvalidProjectIndex, MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        String userInputInvalidTodoIndex \u003d validProjectIndex + \" \" + PREFIX_INDEX + \" 0\";","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        // invalid remove todo index","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, userInputInvalidTodoIndex, MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"vevek":57,"samuelfangjw":13}},{"path":"src/test/java/seedu/address/logic/parser/FindContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.FindContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class FindContactCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private FindContactCommandParser parser \u003d new FindContactCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"                FindContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        FindContactCommand expectedFindContactCommand \u003d","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"                new FindContactCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindContactCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindContactCommand);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"lirc572":10,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DATE \u003d \"01/01-2021\";","lastModifiedDate":"2021-03-26"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    private static final String INVALID_TIME \u003d \"17-30\";","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    private static final String INVALID_IS_WEEKLY \u003d \"Maybe\";","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"    private static final String VALID_DESCRIPTION \u003d \" Tutorial \";","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"    private static final String VALID_DATE \u003d \"01-01-2021\";","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    private static final String VALID_TIME \u003d \"1730\";","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    private static final String VALID_IS_WEEKLY_1 \u003d \"y\";","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    private static final String VALID_IS_WEEKLY_2 \u003d \"n\";","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseContactName((String) null));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactName(INVALID_NAME));","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedName, ParserUtil.parseContactName(VALID_NAME));","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedName, ParserUtil.parseContactName(nameWithWhitespace));","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":207,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDescription_validValue_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(\"Tutorial\", ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"vevek"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":225,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":226,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"vevek"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":230,"author":{"gitId":"vevek"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-03-30"},{"lineNumber":231,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"vevek"},"content":"    public void parseDate_validValue_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":235,"author":{"gitId":"vevek"},"content":"        assertEquals(LocalDate.of(2021, 1, 1), ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-03-30"},{"lineNumber":236,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"vevek"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":240,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":241,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"vevek"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":245,"author":{"gitId":"vevek"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_TIME));","lastModifiedDate":"2021-03-30"},{"lineNumber":246,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"vevek"},"content":"    public void parseTime_validValue_returnsTrimmedTime() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":250,"author":{"gitId":"vevek"},"content":"        assertEquals(LocalTime.of(17, 30), ParserUtil.parseTime(VALID_TIME));","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":252,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":253,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":254,"author":{"gitId":"vevek"},"content":"    public void parseIsWeekly_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":255,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseIsWeekly(null));","lastModifiedDate":"2021-03-30"},{"lineNumber":256,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":257,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":258,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":259,"author":{"gitId":"vevek"},"content":"    public void parseIsWeekly_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":260,"author":{"gitId":"vevek"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIsWeekly(INVALID_IS_WEEKLY));","lastModifiedDate":"2021-03-30"},{"lineNumber":261,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":262,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":264,"author":{"gitId":"vevek"},"content":"    public void parseIsWeekly_validValue_returnsTrue() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":265,"author":{"gitId":"vevek"},"content":"        assertEquals(true, ParserUtil.parseIsWeekly(VALID_IS_WEEKLY_1));","lastModifiedDate":"2021-03-30"},{"lineNumber":266,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":267,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":268,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":269,"author":{"gitId":"vevek"},"content":"    public void parseIsWeekly_validValue_returnsFalse() throws Exception {","lastModifiedDate":"2021-03-30"},{"lineNumber":270,"author":{"gitId":"vevek"},"content":"        assertEquals(false, ParserUtil.parseIsWeekly(VALID_IS_WEEKLY_2));","lastModifiedDate":"2021-03-30"},{"lineNumber":271,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"lirc572":11,"vevek":38,"Eriksen2411":38,"-":185,"samuelfangjw":1}},{"path":"src/test/java/seedu/address/logic/parser/UpdateContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX;","lastModifiedDate":"2021-04-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand.UpdateContactDescriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.UpdateContactDescriptorBuilder;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"public class UpdateContactCommandParserTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, UpdateContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    private UpdateContactCommandParser parser \u003d new UpdateContactCommandParser();","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, \"1\", UpdateContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-04-01"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                UpdateContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-04-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_CONTACT_DISPLAYED_INDEX);","lastModifiedDate":"2021-04-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Contact} being edited,","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"                .withName(VALID_NAME_AMY)","lastModifiedDate":"2021-03-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"                .withName(VALID_NAME_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"        expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"        expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"        expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"        UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"        expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand.UpdateContactDescriptor descriptor \u003d new UpdateContactDescriptorBuilder()","lastModifiedDate":"2021-03-30"},{"lineNumber":213,"author":{"gitId":"lirc572"},"content":"                .withTags().build();","lastModifiedDate":"2021-03-30"},{"lineNumber":214,"author":{"gitId":"lirc572"},"content":"        UpdateContactCommand expectedCommand \u003d new UpdateContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-03-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lirc572":48,"-":162,"samuelfangjw":8}},{"path":"src/test/java/seedu/address/model/ColabFolderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"public class ColabFolderTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private final ColabFolder colabFolder \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_listsAreEmpty_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        assertEquals(Collections.emptyList(), colabFolder.getContactList());","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Collections.emptyList(), colabFolder.getProjectsList());","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e colabFolder.resetData(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData_withValidReadOnlyColabFolder_replacesData() {","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder newData \u003d getTypicalColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.resetData(newData);","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(newData, colabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    public void resetData_withDuplicateContact_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        // Two contacts with the same identity fields","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        List\u003cContact\u003e newContacts \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        ColabFolderStub newData \u003d new ColabFolderStub(newContacts, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e colabFolder.resetData(newData));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData_withDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e newProjects \u003d Arrays.asList(TEST_PROJECT, TEST_PROJECT);","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderStub newData \u003d new ColabFolderStub(new ArrayList\u003c\u003e(), newProjects);","lastModifiedDate":"2021-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e colabFolder.resetData(newData));","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e colabFolder.hasContact(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e colabFolder.hasProject(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    public void hasContact_contactNotInColabFolder_returnsFalse() {","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        assertFalse(colabFolder.hasContact(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public void hasProject_projectNotInColabFolder_returnsFalse() {","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(colabFolder.hasProject(TEST_PROJECT));","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"    public void hasContact_contactInColabFolder_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        colabFolder.addContact(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        assertTrue(colabFolder.hasContact(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    public void hasProject_projectInColabFolder_returnsTrue() {","lastModifiedDate":"2021-03-25"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.addProject(TEST_PROJECT);","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(colabFolder.hasProject(TEST_PROJECT));","lastModifiedDate":"2021-03-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"    public void hasContact_contactWithSameIdentityFieldsInColabFolder_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        colabFolder.addContact(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        assertTrue(colabFolder.hasContact(editedAlice));","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    public void getContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e colabFolder.getContactList().remove(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    public void getProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e colabFolder.getProjectsList().remove(0));","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"     * A stub ReadOnlyColabFolder whose lists can violate interface constraints.","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    private static class ColabFolderStub implements ReadOnlyColabFolder {","lastModifiedDate":"2021-03-25"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        private final ObservableList\u003cContact\u003e contacts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        private final ObservableList\u003cProject\u003e projects \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        ColabFolderStub(Collection\u003cContact\u003e contacts, Collection\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"            this.contacts.setAll(contacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"            this.projects.setAll(projects);","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"        public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"            return contacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-25"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        public ObservableList\u003cProject\u003e getProjectsList() {","lastModifiedDate":"2021-03-25"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"            return projects;","lastModifiedDate":"2021-03-25"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder1 \u003d getTypicalColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        int hashcode1 \u003d colabFolder1.hashCode();","lastModifiedDate":"2021-03-25"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(hashcode1, colabFolder1.hashCode());","lastModifiedDate":"2021-03-25"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder2 \u003d getTypicalColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(hashcode1, colabFolder2.hashCode());","lastModifiedDate":"2021-03-25"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        colabFolder1.removeContact(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        int hashcode3 \u003d colabFolder1.hashCode();","lastModifiedDate":"2021-03-25"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"lirc572":44,"-":61,"samuelfangjw":59}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_CONTACTS;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ColabFolderBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(new ColabFolder(), new ColabFolder(modelManager.getColabFolder()));","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        userPrefs.setColabFolderFilePath(Paths.get(\"colab/folder/file/path\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        userPrefs.setColabFolderFilePath(Paths.get(\"new/colab/folder/file/path\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void setColabFolderFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setColabFolderFilePath(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public void setColabFolderFilePath_validPath_setsColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        Path path \u003d Paths.get(\"colab/folder/file/path\");","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        modelManager.setColabFolderFilePath(path);","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(path, modelManager.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasContact(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    public void hasContact_contactNotInColabFolder_returnsFalse() {","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        assertFalse(modelManager.hasContact(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    public void hasContact_contactInColabFolder_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        modelManager.addContact(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        assertTrue(modelManager.hasContact(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredContactList().remove(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        ColabFolder colabFolder \u003d new ColabFolderBuilder().withContact(ALICE).withContact(BENSON).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder differentColabFolder \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        modelManager \u003d new ModelManager(colabFolder, userPrefs);","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(colabFolder, userPrefs);","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        // different colabFolder -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentColabFolder, userPrefs)));","lastModifiedDate":"2021-03-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        modelManager.updateFilteredContactList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(modelManager.equals(new ModelManager(colabFolder, userPrefs)));","lastModifiedDate":"2021-03-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        modelManager.updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        differentUserPrefs.setColabFolderFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(modelManager.equals(new ModelManager(colabFolder, differentUserPrefs)));","lastModifiedDate":"2021-03-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lirc572":16,"-":98,"samuelfangjw":18}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void setColabFolderFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setColabFolderFilePath(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        UserPrefs testUserPref \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPrefsCopy \u003d new UserPrefs(testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        assertEquals(testUserPref, userPrefsCopy);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        assertEquals(testUserPref, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testUserPref, null);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testUserPref, 5);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        // different guiSettings -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        UserPrefs differentUserPrefs1 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        differentUserPrefs1.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentUserPrefs1, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // different colabFolderFilePath -\u003e returns false","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        UserPrefs differentUserPrefs2 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        differentUserPrefs2.setColabFolderFilePath(Paths.get(\"data\" , \"test.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentUserPrefs2, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref1 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref2 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref3 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        userPref3.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref4 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        userPref4.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref5 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        userPref5.setColabFolderFilePath(Paths.get(\"data\" , \"test.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d userPref1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        int hashcode2 \u003d userPref2.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d userPref3.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d userPref4.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        int hashcode5 \u003d userPref5.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, userPref1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode3, userPref3.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode5, userPref5.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, hashcode2);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode5);","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"lirc572":61,"-":21,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/model/colabfolderhistory/ColabFolderHistoryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.colabfolderhistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewTodayCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoRedoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.colabfolderhistory.exceptions.NoUndoableStateException;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TypicalColabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"class ColabFolderHistoryTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void undoAndRedo() {","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder \u003d TypicalColabFolder.getTypicalColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderHistory history \u003d new ColabFolderHistory(colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        // Nothing to undo or redo","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NoUndoableStateException.class, history::undo);","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NoRedoableStateException.class, history::redo);","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        // One Commit","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d new CommandResult(\"Feedback\", new ShowTodayUiCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        history.commit(new ColabFolder(), commandResult);","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        // Redo throws error","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NoRedoableStateException.class, history::redo);","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        // Undo success","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(history.undo().getColabFolder(), colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        // Undo throws error","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NoUndoableStateException.class, history::undo);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        // Redo success","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(history.redo(), new SavedState(new ColabFolder(), commandResult));","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() throws CommandException {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder \u003d TypicalColabFolder.getTypicalColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderHistory history \u003d new ColabFolderHistory(colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderHistory historyCopy \u003d new ColabFolderHistory(colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        history.equals(historyCopy);","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(history, historyCopy);","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(history, history);","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(history, null);","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(history, 5);","lastModifiedDate":"2021-03-29"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        // different ColabFolder -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderHistory differentColabFolder \u003d new ColabFolderHistory(new ColabFolder());","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(history, differentColabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        // different pointer -\u003e returns false","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolderHistory differentPointer \u003d new ColabFolderHistory(colabFolder);","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        differentPointer.commit(colabFolder, new ViewTodayCommand().execute(new ModelManager()));","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(history, differentPointer);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":76}},{"path":"src/test/java/seedu/address/model/colabfolderhistory/SavedStateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.colabfolderhistory;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.uicommands.ShowTodayUiCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TypicalColabFolder;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"class SavedStateTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder \u003d TypicalColabFolder.getTypicalColabFolder();","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        // Constructor with colab folder and command result","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d new CommandResult(\"Feedback\", new ShowTodayUiCommand());","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        SavedState savedStateWithCommandResult \u003d new SavedState(colabFolder, commandResult);","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(savedStateWithCommandResult.getColabFolder(), colabFolder);","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(savedStateWithCommandResult.getCommandResult(), commandResult);","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        // Constructor with only colab folder","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        SavedState savedStateWithoutCommandResult \u003d new SavedState(colabFolder);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(savedStateWithoutCommandResult.getColabFolder(), colabFolder);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertNull(savedStateWithoutCommandResult.getCommandResult());","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"samuelfangjw":32}},{"path":"src/test/java/seedu/address/model/contact/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"lirc572":1,"-":35}},{"path":"src/test/java/seedu/address/model/contact/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class ContactTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contact.getTags().remove(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public void isSameContact() {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        assertTrue(ALICE.isSameContact(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        assertFalse(ALICE.isSameContact(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        assertFalse(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        Contact editedBob \u003d new ContactBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        editedBob \u003d new ContactBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        Contact aliceCopy \u003d new ContactBuilder(ALICE).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lirc572":25,"-":66}},{"path":"src/test/java/seedu/address/model/contact/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\"));","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"!#$%\u0026\u0027*+/\u003d?`{|}~^.-@example.org\")); // special characters local part","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be!@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"lirc572":1,"-":60}},{"path":"src/test/java/seedu/address/model/contact/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        // different contact -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        assertTrue(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        assertFalse(predicate.test(new ContactBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2021-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lirc572":10,"-":65}},{"path":"src/test/java/seedu/address/model/contact/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"lirc572":1,"-":39}},{"path":"src/test/java/seedu/address/model/contact/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"lirc572":1,"-":39}},{"path":"src/test/java/seedu/address/model/contact/UniqueContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.BOB;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"public class UniqueContactListTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    private final UniqueContactList uniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    public void contains_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.contains(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"    public void contains_contactNotInList_returnsFalse() {","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        assertFalse(uniqueContactList.contains(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    public void contains_contactInList_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        assertTrue(uniqueContactList.contains(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    public void contains_contactWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        assertTrue(uniqueContactList.contains(editedAlice));","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    public void add_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.add(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    public void add_duplicateContact_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.add(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    public void setContact_nullTargetContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(null, ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public void setContact_nullEditedContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(ALICE, null));","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    public void setContact_targetContactNotInList_throwsContactNotFoundException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.setContact(ALICE, ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"    public void setContact_editedContactIsSameContact_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.setContact(ALICE, ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        expectedUniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"    public void setContact_editedContactHasSameIdentity_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.setContact(ALICE, editedAlice);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        expectedUniqueContactList.add(editedAlice);","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"    public void setContact_editedContactHasDifferentIdentity_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.setContact(ALICE, BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    public void setContact_editedContactHasNonUniqueIdentity_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContact(ALICE, BOB));","lastModifiedDate":"2021-03-28"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"    public void remove_nullContact_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.remove(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"    public void remove_contactDoesNotExist_throwsContactNotFoundException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.remove(ALICE));","lastModifiedDate":"2021-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"    public void remove_existingContact_removesContact() {","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.remove(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"    public void setContacts_nullUniqueContactList_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((UniqueContactList) null));","lastModifiedDate":"2021-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"    public void setContacts_uniqueContactList_replacesOwnListWithProvidedUniqueContactList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.setContacts(expectedUniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"    public void setContacts_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((List\u003cContact\u003e) null));","lastModifiedDate":"2021-03-28"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"    public void setContacts_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-28"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"        List\u003cContact\u003e contactList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.setContacts(contactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2021-03-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"    public void setContacts_listWithDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"        List\u003cContact\u003e listWithDuplicateContacts \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContacts(listWithDuplicateContacts));","lastModifiedDate":"2021-03-28"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"            -\u003e uniqueContactList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"    public void iterator_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"        Iterator\u003cContact\u003e iterator \u003d uniqueContactList.iterator();","lastModifiedDate":"2021-03-28"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        assertTrue(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"        assertEquals(iterator.next(), ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d uniqueContactList.hashCode();","lastModifiedDate":"2021-03-28"},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniqueContactList.hashCode());","lastModifiedDate":"2021-03-28"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"        UniqueContactList uniqueContactList2 \u003d new UniqueContactList();","lastModifiedDate":"2021-03-28"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniqueContactList2.hashCode());","lastModifiedDate":"2021-03-28"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d uniqueContactList.hashCode();","lastModifiedDate":"2021-03-28"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"        uniqueContactList.add(BOB);","lastModifiedDate":"2021-03-28"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d uniqueContactList.hashCode();","lastModifiedDate":"2021-03-28"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lirc572":120,"-":84}},{"path":"src/test/java/seedu/address/model/project/DeadlineListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class DeadlineListTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public void constructor_empty_createEmptyDeadlineList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        DeadlineList emptyDeadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyDeadlineList.getSortedDeadlineList().isEmpty());","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeadlineList(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void constructor_singleCompletableTask_valid() {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(\"Test Description\", validDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        assertDoesNotThrow(() -\u003e new DeadlineList(deadlines));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public void getCompletableTasks_validCompletableTaskList_equalsOriginalList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(\"Test Description\", validDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        DeadlineList deadlineList \u003d new DeadlineList(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(deadlines, deadlineList.getSortedDeadlineList());","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validDeadlineList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineListCopy \u003d deadlineList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(deadlineList, deadlineListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineList \u003d\u003d deadlineListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":45,"samuelfangjw":11}},{"path":"src/test/java/seedu/address/model/project/EventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class EventListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_empty_createEmptyEventList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        EventList emptyEventList \u003d new EventList();","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyEventList.getSortedEventList().isEmpty());","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventList(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_singleEvent_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        Event event \u003d new Event(\"Test Event\", LocalDate.of(2020, 1, 1), LocalTime.of(17, 30), false);","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new EventList(events));","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void getEvent_validEvent_equalsOriginalList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        Event event \u003d new Event(\"Test Event\", LocalDate.of(2020, 1, 1), LocalTime.of(17, 30), false);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList(events);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(events, eventList.getSortedEventList());","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validEventList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventListCopy \u003d eventList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(eventList, eventListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventList \u003d\u003d eventListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":3,"samuelfangjw":51}},{"path":"src/test/java/seedu/address/model/project/GroupmateListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalGroupmates.ROXY;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalGroupmates.SYLPH;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"public class GroupmateListTest {","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public void constructor_empty_createEmptyGroupmateList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        GroupmateList emptyGroupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyGroupmateList.getSortedGroupmates().isEmpty());","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupmateList(null));","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public void constructor_singleGroupmate_success() {","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cGroupmate\u003e groupmates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        groupmates.add(SYLPH);","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        assertDoesNotThrow(() -\u003e new GroupmateList(groupmates));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    public void getGroupmates_validGroupmateList_equalsOriginalList() {","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cGroupmate\u003e groupmates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        groupmates.add(SYLPH);","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(groupmates, groupmateList.getSortedGroupmates());","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public void size_validGroupmateList_correct() {","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cGroupmate\u003e groupmates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        groupmates.add(SYLPH);","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        assertEquals(groupmates.size(), groupmateList.size());","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        groupmates.add(ROXY);","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertEquals(groupmates.size(), groupmateList.size());","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public void get_validGroupmateList_correct() {","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cGroupmate\u003e groupmates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        groupmates.add(ROXY);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        assertEquals(groupmates.get(0), groupmateList.get(0));","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        groupmates.add(SYLPH);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        assertEquals(groupmates.get(0), groupmateList.get(0));","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertEquals(groupmates.get(1), groupmateList.get(1));","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public void delete_validGroupmateList_correct() {","lastModifiedDate":"2021-03-29"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cGroupmate\u003e groupmates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        groupmates.add(ROXY);","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        groupmates.add(SYLPH);","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        assertEquals(2, groupmateList.size());","lastModifiedDate":"2021-03-29"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        groupmateList.delete(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, groupmateList.size());","lastModifiedDate":"2021-03-29"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(groupmateList.get(0), SYLPH);","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        groupmateList.delete(0);","lastModifiedDate":"2021-03-29"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, groupmateList.size());","lastModifiedDate":"2021-03-29"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-29"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"    public void getCopyOf_validGroupmateList_copyOfOriginal() {","lastModifiedDate":"2021-03-29"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateListCopy \u003d groupmateList.getCopy();","lastModifiedDate":"2021-03-29"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        assertEquals(groupmateList, groupmateListCopy);","lastModifiedDate":"2021-03-29"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        assertNotSame(groupmateList, groupmateListCopy);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":84,"samuelfangjw":6}},{"path":"src/test/java/seedu/address/model/project/ProjectNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        ProjectNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/test/java/seedu/address/model/project/ProjectNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectName(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_invalidProjectName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        String invalidProjectName \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectName(invalidProjectName));","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void isValidProjectName() {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // null name","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectName.isValidProjectName(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // invalid name","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"cs1101s*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // valid name","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"school project\")); // alphabets only","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"12345\")); // numbers only","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"cs2103t project\")); // alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"CS2103T Project\")); // with capital letters","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"School summer orbital project with long name\")); // long names","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":40}},{"path":"src/test/java/seedu/address/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalGroupmates.ROXY;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalGroupmates.SYLPH;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalProjects.CS1101S_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_ONE \u003d new ProjectBuilder().withName(\"Test One\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_TWO \u003d new ProjectBuilder().withName(\"Test Two\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void isSameProject() {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(TEST_PROJECT_ONE.isSameProject(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.isSameProject(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        // equal project name -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        assertTrue(TEST_PROJECT_ONE.isSameProject(new ProjectBuilder().withName(\"Test One\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_emptyProjectWithName_isValid() {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName name \u003d new ProjectName(\"Test Project\");","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new Project(name));","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_projectWithParameters_isValid() {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName name \u003d new ProjectName(\"Test Project\");","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        Event event \u003d new Event(\"Test Event\", LocalDate.of(2020, 1, 1),","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"                LocalTime.of(17, 30), false);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList(events);","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(\"Test Description\", validDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        DeadlineList deadlineList \u003d new DeadlineList(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cGroupmate\u003e groupmates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        groupmates.add(ROXY);","lastModifiedDate":"2021-03-29"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList(groupmates);","lastModifiedDate":"2021-03-29"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        assertDoesNotThrow(() -\u003e new Project(name, eventList, todoList, deadlineList, groupmateList));","lastModifiedDate":"2021-03-29"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(TEST_PROJECT_ONE.equals(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        // same project name, default for other fields -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        assertTrue(TEST_PROJECT_ONE.equals(new ProjectBuilder().withName(\"Test One\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.equals(TEST_PROJECT_TWO));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"    public void getProjectName_validProject_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        assertEquals(new ProjectBuilder().withName(CS1101S_NAME.toString()).build().getProjectName(), CS1101S_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"    public void getGroupmate_validProject_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(ROXY);","lastModifiedDate":"2021-03-29"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"                .withGroupmateList(groupmateList).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getGroupmates().get(0), project.getGroupmate(0));","lastModifiedDate":"2021-03-29"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    public void addGroupmate_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getGroupmates().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        project.addGroupmate(SYLPH);","lastModifiedDate":"2021-03-29"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getGroupmates().size());","lastModifiedDate":"2021-03-29"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(SYLPH, project.getGroupmates().getSortedGroupmates().get(0));","lastModifiedDate":"2021-03-31"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"    public void hasGroupmate_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(SYLPH);","lastModifiedDate":"2021-03-29"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"                .withGroupmateList(groupmateList).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        assertTrue(project.hasGroupmate(SYLPH));","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        assertFalse(project.hasGroupmate(ROXY));","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        assertFalse(new ProjectBuilder().withName(CS1101S_NAME.toString()).build().hasGroupmate(SYLPH));","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"    public void deleteGroupmate_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(ROXY);","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"        groupmateList.addGroupmate(SYLPH);","lastModifiedDate":"2021-03-31"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"                .withGroupmateList(groupmateList).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        int size \u003d project.getGroupmates().size();","lastModifiedDate":"2021-03-29"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(project.getGroupmate(size - 1), SYLPH);","lastModifiedDate":"2021-03-31"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(project.getGroupmate(size - 2), ROXY);","lastModifiedDate":"2021-03-31"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        project.deleteGroupmate(size - 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getGroupmates().size(), size - 1);","lastModifiedDate":"2021-03-29"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(project.getGroupmate(size - 2), ROXY);","lastModifiedDate":"2021-03-31"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        project.deleteGroupmate(size - 2);","lastModifiedDate":"2021-03-29"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getGroupmates().size(), size - 2);","lastModifiedDate":"2021-03-29"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"    @Test void addDeadline_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, project.getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", LocalDate.now());","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"        project.addDeadline(deadline);","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(deadline, project.getDeadlines().getSortedDeadlineList().get(INDEX_FIRST.getZeroBased()));","lastModifiedDate":"2021-03-31"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"    @Test void addEvent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, project.getEvents().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"        Event event \u003d new Event(\"event\", LocalDate.now(), LocalTime.now(), false);","lastModifiedDate":"2021-03-30"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"        project.addEvent(event);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getEvents().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(event, project.getEvents().getSortedEventList().get(INDEX_FIRST.getZeroBased()));","lastModifiedDate":"2021-03-31"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"    @Test void addTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, project.getTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new Todo(\"deadline\");","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"        project.addTodo(todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todo, project.getTodos().getSortedTodos().get(INDEX_FIRST.getZeroBased()));","lastModifiedDate":"2021-03-31"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"    @Test void deleteDeadline_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"        deadlineList.addDeadline(new Deadline(\"deadline\", LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withDeadlineList(deadlineList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"        project.deleteDeadline(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, project.getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"    @Test void deleteEvent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"vevek"},"content":"        eventList.addEvent(new Event(\"event\", LocalDate.now(), LocalTime.now(), false));","lastModifiedDate":"2021-03-30"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withEventList(eventList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getEvents().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"        project.deleteEvent(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, project.getEvents().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"    @Test void deleteTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"        todoList.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withTodoList(todoList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"        project.deleteTodo(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(0, project.getTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"    @Test void markDeadline_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"        deadlineList.addDeadline(new Deadline(\"deadline\", LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withDeadlineList(deadlineList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getDeadlines().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(false, project.getDeadlines().getSortedDeadlineList().get(0).getIsDone());","lastModifiedDate":"2021-03-31"},{"lineNumber":207,"author":{"gitId":"lirc572"},"content":"        project.markDeadline(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(true, project.getDeadlines().getSortedDeadlineList().get(0).getIsDone());","lastModifiedDate":"2021-03-31"},{"lineNumber":209,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"lirc572"},"content":"    @Test void markTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"lirc572"},"content":"        todoList.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withTodoList(todoList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, project.getTodos().size());","lastModifiedDate":"2021-03-31"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(false, project.getTodos().getSortedTodos().get(0).getIsDone());","lastModifiedDate":"2021-03-31"},{"lineNumber":217,"author":{"gitId":"lirc572"},"content":"        project.markTodo(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(true, project.getTodos().getSortedTodos().get(0).getIsDone());","lastModifiedDate":"2021-03-31"},{"lineNumber":219,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"lirc572"},"content":"        Project project1 \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":224,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d project1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":225,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":226,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, project1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":228,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":229,"author":{"gitId":"lirc572"},"content":"        Project project2 \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":230,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":231,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":232,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, project2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"lirc572"},"content":"        project1.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d project1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"lirc572"},"content":"        project1.addGroupmate(SYLPH);","lastModifiedDate":"2021-03-29"},{"lineNumber":237,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d project1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"lirc572"},"content":"    @Test void toString_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"lirc572"},"content":"        Project project1 \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"lirc572"},"content":"        String project1String \u003d CS1101S_NAME.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"lirc572"},"content":"        assertEquals(project1String, project1.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"lirc572"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"vevek"},"content":"        eventList.addEvent(new Event(\"event\", LocalDate.now(), LocalTime.now(), false));","lastModifiedDate":"2021-03-30"},{"lineNumber":251,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"lirc572"},"content":"        todoList.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"lirc572"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"lirc572"},"content":"        deadlineList.addDeadline(new Deadline(\"deadline\", LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":256,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(SYLPH);","lastModifiedDate":"2021-03-29"},{"lineNumber":257,"author":{"gitId":"lirc572"},"content":"        Project project2 \u003d new ProjectBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"lirc572"},"content":"                .withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"lirc572"},"content":"                .withEventList(eventList)","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"lirc572"},"content":"                .withTodoList(todoList)","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"lirc572"},"content":"                .withDeadlineList(deadlineList)","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"lirc572"},"content":"                .withGroupmateList(groupmateList)","lastModifiedDate":"2021-03-30"},{"lineNumber":263,"author":{"gitId":"lirc572"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"lirc572"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"lirc572"},"content":"        builder.append(CS1101S_NAME.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Events: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"        builder.append(eventList.getSortedEventList().get(0).toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":268,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Todos: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        builder.append(todoList.getSortedTodos().get(0).toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":270,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Deadlines: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"        builder.append(deadlineList.getSortedDeadlineList().get(0).toString());","lastModifiedDate":"2021-03-31"},{"lineNumber":272,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Groupmates: \");","lastModifiedDate":"2021-03-29"},{"lineNumber":273,"author":{"gitId":"lirc572"},"content":"        builder.append(groupmateList.get(0).toString());","lastModifiedDate":"2021-03-29"},{"lineNumber":274,"author":{"gitId":"lirc572"},"content":"        String project2String \u003d builder.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"lirc572"},"content":"        assertEquals(project2String, project2.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":167,"vevek":20,"samuelfangjw":90}},{"path":"src/test/java/seedu/address/model/project/TodoListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class TodoListTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public void constructor_empty_createEmptyTodoList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        TodoList emptyTodoList \u003d new TodoList();","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyTodoList.getSortedTodos().isEmpty());","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TodoList(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public void constructor_singleTodo_valid() {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        assertDoesNotThrow(() -\u003e new TodoList(todos));","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public void getCompletableTasks_validCompletableTaskList_equalsOriginalList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todos, todoList.getSortedTodos());","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validTodoList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoListCopy \u003d todoList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList, todoListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoList \u003d\u003d todoListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public void deleteTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList.getSortedTodos().size(), 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        todoList.deleteTodo(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList.getSortedTodos().size(), 0);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    @Test void markAsDone_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList.getSortedTodos().size(), 1);","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList.getSortedTodos().get(0).getIsDone(), false);","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        todoList.markAsDone(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList.getSortedTodos().get(0).getIsDone(), true);","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":17,"vevek":43,"samuelfangjw":16}},{"path":"src/test/java/seedu/address/model/project/UniqueProjectListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"public class UniqueProjectListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_ONE \u003d new ProjectBuilder().withName(\"Test One\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_TWO \u003d new ProjectBuilder().withName(\"Test Two\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final UniqueProjectList uniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.contains(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_projectNotInList_returnsFalse() {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(uniqueProjectList.contains(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_projectInList_returnsTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(uniqueProjectList.contains(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public void add_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.add(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void add_duplicateProject_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.add(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_nullTargetProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(null, TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_nullEditedProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(TEST_PROJECT_ONE, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_targetProjectNotInList_throwsProjectNotFoundException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                uniqueProjectList.setProject(TEST_PROJECT_ONE, TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    public void setProject_setExistingProject_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                uniqueProjectList.setProject(TEST_PROJECT_ONE, TEST_PROJECT_TWO));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_editedProjectIsSameProject_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProject(TEST_PROJECT_ONE, TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.remove(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_projectDoesNotExist_throwsProjectNotFoundException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.remove(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_existingProject_removesProject() {","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.remove(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_nullUniqueProjectList_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((UniqueProjectList) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_uniqueProjectList_replacesOwnListWithProvidedUniqueProjectList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProjects(expectedUniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((List\u003cProject\u003e) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e projectList \u003d Collections.singletonList(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProjects(projectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_listWithDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e listWithDuplicateProjects \u003d Arrays.asList(TEST_PROJECT_ONE, TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProjects(listWithDuplicateProjects));","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"            -\u003e uniqueProjectList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"    public void iterator_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        Iterator\u003cProject\u003e iterator \u003d uniqueProjectList.iterator();","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"        assertTrue(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"        assertEquals(iterator.next(), TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d uniqueProjectList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniqueProjectList.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"        UniqueProjectList uniqueProjectList2 \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniqueProjectList2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d uniqueProjectList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d uniqueProjectList.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":45,"samuelfangjw":131}},{"path":"src/test/java/seedu/address/model/task/deadline/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final Deadline TEST_DEADLINE \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Deadline DIFFERENT_DEADLINE \u003d new DeadlineBuilder().withDescription(\"DIFFERENT\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", null));","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null, validDate, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", validDate, null));","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", null, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription, validDate, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription2, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription2, validDate, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        Deadline tutorialCopy \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TEST_DEADLINE, tutorialCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TEST_DEADLINE, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TEST_DEADLINE, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TEST_DEADLINE, 5);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(DIFFERENT_DEADLINE, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        Deadline editedTutorial \u003d new DeadlineBuilder(TEST_DEADLINE).withDescription(\"NOT TEST_DEADLINE\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // different by date -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        editedTutorial \u003d new DeadlineBuilder(TEST_DEADLINE)","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(LocalDate.of(2019, 2, 21)).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        Deadline deadline1 \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d deadline1.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, deadline1.hashCode());","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        Deadline deadline2 \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, deadline2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        Deadline deadline3 \u003d new DeadlineBuilder(DIFFERENT_DEADLINE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d deadline3.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"    public void setDescription_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        Deadline deadline \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        String description \u003d \"this is a test description.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        deadline.setDescription(description);","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        assertEquals(description, deadline.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":28,"vevek":48,"samuelfangjw":36}},{"path":"src/test/java/seedu/address/model/task/repeatable/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.repeatable;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class EventTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final Event TUTORIAL \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"            .withDate(LocalDate.of(2020, 01, 01)).withTime(LocalTime.of(13, 00))","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"            .withIsWeekly(true).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final Event LAB \u003d new EventBuilder().withDescription(\"CS2030S Lab\")","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            .withDate(LocalDate.of(2021, 01, 03)).withTime(LocalTime.of(15, 00))","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            .withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        LocalTime validTime \u003d LocalTime.of(17, 30);","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        Boolean validIsWeekly \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, validDate, validTime, validIsWeekly));","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", null,","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"                validTime, validIsWeekly));","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", validDate,","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"                null, validIsWeekly));","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", validDate,","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"                validTime, null));","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        LocalTime validTime \u003d LocalTime.of(17, 30);","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        Boolean validIsWeekly \u003d false;","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription, validDate,","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"                validTime, validIsWeekly));","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription2, validDate,","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"                validTime, validIsWeekly));","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(Deadline.isValidDescription(\"Tutorial, CS2106, #01-355\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(Deadline.isValidDescription(\"Lab; Com1; 123456; SINGAPORE\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    public void getIsWeekly_success() {","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        assertEquals(true, TUTORIAL.getIsWeekly());","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assertEquals(false, LAB.getIsWeekly());","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        Event tutorialCopy \u003d new EventBuilder(TUTORIAL).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TUTORIAL, tutorialCopy);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TUTORIAL, TUTORIAL);","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TUTORIAL, null);","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TUTORIAL, 5);","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(LAB, TUTORIAL);","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        Event editedTutorial \u003d new EventBuilder(TUTORIAL).withDescription(\"NOT TUTORIAL\").build();","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"        editedTutorial \u003d new EventBuilder(TUTORIAL).withDate(LocalDate.of(2019, 01, 01)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        // different time -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"        editedTutorial \u003d new EventBuilder(TUTORIAL).withTime(LocalTime.of(19, 00)).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"        // different isWeekly -\u003e returns false","lastModifiedDate":"2021-03-30"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"        editedTutorial \u003d new EventBuilder(TUTORIAL).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-30"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        Event event1 \u003d new EventBuilder(TUTORIAL).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d event1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, event1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        Event event2 \u003d new EventBuilder(TUTORIAL).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, event2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        Event event3 \u003d new EventBuilder(LAB).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d event3.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":23,"vevek":72,"samuelfangjw":36}},{"path":"src/test/java/seedu/address/model/task/todo/TodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"public class TodoTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(null, null));","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(\"test\", null));","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription));","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription, false));","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription2));","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription2, false));","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Todo.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        assertFalse(Todo.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assertFalse(Todo.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        Todo testTodo \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        Todo differentTodo \u003d new Todo(\"different todo\");","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        Todo todoCopy \u003d new TodoBuilder(testTodo).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertEquals(testTodo, todoCopy);","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        assertEquals(testTodo, testTodo);","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testTodo, null);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testTodo, 5);","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentTodo, testTodo);","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        Todo editedTodo \u003d new TodoBuilder().withDescription(\"editted todo\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(editedTodo, testTodo);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    public void setDescription_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new TodoBuilder().withDescription(\"todo\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"todo\", todo.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        String description \u003d \"this is a test description.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        todo.setDescription(description);","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        assertEquals(description, todo.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":39,"vevek":42}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public void getSampleColabFolder_success() {","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(SampleDataUtil::getSampleColabFolder);","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public void getSampleContacts_contactsValid_success() {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        assertDoesNotThrow(SampleDataUtil::getSampleContacts);","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow((ThrowingSupplier\u003cSet\u003cTag\u003e\u003e) SampleDataUtil::getTagSet);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void getSampleProjects_projectsValid_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(SampleDataUtil::getSampleProjects);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":2,"samuelfangjw":28}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.storage.JsonAdaptedContact.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"public class JsonAdaptedContactTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public void toModelType_validContactDetails_returnsContact() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(BENSON);","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        assertEquals(BENSON, contact.toModelType());","lastModifiedDate":"2021-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"                new JsonAdaptedContact(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"                new JsonAdaptedContact(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        JsonAdaptedContact contact \u003d","lastModifiedDate":"2021-03-28"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"                new JsonAdaptedContact(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, contact::toModelType);","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lirc572":33,"-":77}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedDeadlineTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d DeadlineBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final Boolean VALID_IS_DONE \u003d DeadlineBuilder.DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DATE_STRING \u003d \"02-02-2020\";","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final LocalDate VALID_DATE \u003d DeadlineBuilder.DEFAULT_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final Deadline ASSIGNMENT \u003d new DeadlineBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            .withDescription(VALID_DESCRIPTION).withIsDone(VALID_IS_DONE).withByDate(VALID_DATE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validDeadlineDetails_returnsDeadline() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d new JsonAdaptedDeadline(ASSIGNMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(ASSIGNMENT, deadline.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedDeadline(INVALID_DESCRIPTION, VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d CompletableDeadline.MESSAGE_CONSTRAINTS_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, deadline::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedDeadline(INVALID_DESCRIPTION, VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, deadline::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d new JsonAdaptedDeadline(null, VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, deadline::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":52}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DATE_STRING \u003d \"2020-02-02\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    private static final String INVALID_TIME_STRING \u003d \"17-30\";","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    private static final Boolean INVALID_IS_WEEKLY \u003d null;","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d EventBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final LocalDate VALID_DATE \u003d EventBuilder.DEFAULT_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    private static final LocalTime VALID_TIME \u003d EventBuilder.DEFAULT_TIME;","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    private static final Boolean VALID_IS_WEEKLY \u003d EventBuilder.DEFAULT_IS_WEEKLY;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DATE_STRING \u003d \"02-02-2020\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    private static final String VALID_TIME_STRING \u003d \"17:30\";","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private static final Event TUTORIAL \u003d new EventBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"            .withDescription(VALID_DESCRIPTION).withDate(VALID_DATE).withTime(VALID_TIME).withIsWeekly(VALID_IS_WEEKLY)","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"            .build();","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(TUTORIAL);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TUTORIAL, event.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                new JsonAdaptedEvent(INVALID_DESCRIPTION, VALID_DATE_STRING, VALID_TIME_STRING, VALID_IS_WEEKLY);","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d Event.MESSAGE_CONSTRAINTS_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"                new JsonAdaptedEvent(VALID_DESCRIPTION, INVALID_DATE_STRING, VALID_TIME_STRING, VALID_IS_WEEKLY);","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    public void toModelType_invalidTime_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"                new JsonAdaptedEvent(VALID_DESCRIPTION, VALID_DATE_STRING, INVALID_TIME_STRING, VALID_IS_WEEKLY);","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    public void toModelType_invalidIsWeekly_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"                new JsonAdaptedEvent(VALID_DESCRIPTION, VALID_DATE_STRING, VALID_TIME_STRING, INVALID_IS_WEEKLY);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_DATE_STRING, VALID_TIME_STRING, VALID_IS_WEEKLY);","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public void toModelType_nullIsWeekly_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                new JsonAdaptedEvent(VALID_DESCRIPTION, VALID_DATE_STRING, VALID_TIME_STRING, null);","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":33,"samuelfangjw":47}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.storage.JsonAdaptedProject.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedProjectTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project VALID_PROJECT \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d VALID_PROJECT.getProjectName().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENT_LIST \u003d VALID_PROJECT.getEvents().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedDeadline\u003e VALID_DEADLINE_LIST \u003d VALID_PROJECT.getDeadlines().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedDeadline::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedTodo\u003e VALID_TODO_LIST \u003d VALID_PROJECT.getTodos().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedTodo::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    private static final List\u003cJsonAdaptedGroupmate\u003e VALID_GROUPMATE_LIST \u003d VALID_PROJECT.getGroupmates().stream()","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            .map(JsonAdaptedGroupmate::new)","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validProjectDetails_returnsProject() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_PROJECT);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(VALID_PROJECT, project.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validParameters_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedProject(VALID_DESCRIPTION, VALID_EVENT_LIST, VALID_TODO_LIST,","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"                        VALID_DEADLINE_LIST, VALID_GROUPMATE_LIST);","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(project::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedProject(INVALID_DESCRIPTION, VALID_EVENT_LIST, VALID_TODO_LIST,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"                        VALID_DEADLINE_LIST, VALID_GROUPMATE_LIST);","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d ProjectName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(null, VALID_EVENT_LIST, VALID_TODO_LIST,","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"                VALID_DEADLINE_LIST, VALID_GROUPMATE_LIST);","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectName.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":5,"samuelfangjw":62}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedTodoTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d TodoBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final Boolean VALID_IS_DONE \u003d TodoBuilder.DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final Todo ASSIGNMENT \u003d new TodoBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            .withDescription(VALID_DESCRIPTION).withIsDone(VALID_IS_DONE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validTodoDetails_returnsTodo() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedTodo todo \u003d new JsonAdaptedTodo(ASSIGNMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(ASSIGNMENT, todo.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedTodo todo \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedTodo(INVALID_DESCRIPTION, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d CompletableTodo.MESSAGE_CONSTRAINTS_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, todo::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedTodo todo \u003d new JsonAdaptedTodo(null, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, todo::toModelType);","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/test/java/seedu/address/storage/JsonColabFolderStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.HOON;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.IDA;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.getCS2103TProject;","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"public class JsonColabFolderStorageTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            \"JsonColabFolderStorageTest\");","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void readColabFolder_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e readColabFolder(null));","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private java.util.Optional\u003cReadOnlyColabFolder\u003e readColabFolder(String filePath) throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonColabFolderStorage(Paths.get(filePath)).readColabFolder(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(readColabFolder(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e readColabFolder(\"notJsonFormatColabFolder.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public void readColabFolder_invalidContactColabFolder_throwDataConversionException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        assertThrows(DataConversionException.class, () -\u003e readColabFolder(\"invalidContactColabFolder.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"    public void readColabFolder_invalidAndValidContactColabFolder_throwDataConversionException() {","lastModifiedDate":"2021-03-28"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"                readColabFolder(\"invalidAndValidContactColabFolder.json\"));","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public void readColabFolder_invalidProjectColabFolder_throwDataConversionException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                readColabFolder(\"invalidProjectColabFolder.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    public void readColabFolder_invalidAndValidProjectColabFolder_throwDataConversionException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                readColabFolder(\"invalidAndValidProjectColabFolder.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void readAndSaveColabFolder_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        Path filePath \u003d testFolder.resolve(\"TempColabFolder.json\");","lastModifiedDate":"2021-03-25"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder original \u003d getTypicalColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        JsonColabFolderStorage jsonColabFolderStorage \u003d new JsonColabFolderStorage(filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        jsonColabFolderStorage.saveColabFolder(original, filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyColabFolder readBack \u003d jsonColabFolderStorage.readColabFolder(filePath).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ColabFolder(readBack));","lastModifiedDate":"2021-03-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        original.addContact(HOON);","lastModifiedDate":"2021-03-28"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        original.removeContact(ALICE);","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        original.removeProject(getCS2103TProject());","lastModifiedDate":"2021-03-25"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        original.addProject(new ProjectBuilder().build());","lastModifiedDate":"2021-03-25"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        jsonColabFolderStorage.saveColabFolder(original, filePath);","lastModifiedDate":"2021-03-25"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        readBack \u003d jsonColabFolderStorage.readColabFolder(filePath).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ColabFolder(readBack));","lastModifiedDate":"2021-03-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        original.addContact(IDA);","lastModifiedDate":"2021-03-28"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        original.addProject(new ProjectBuilder().withName(\"Test Name\").build());","lastModifiedDate":"2021-03-25"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        jsonColabFolderStorage.saveColabFolder(original); // file path not specified","lastModifiedDate":"2021-03-25"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        readBack \u003d jsonColabFolderStorage.readColabFolder().get(); // file path not specified","lastModifiedDate":"2021-03-25"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ColabFolder(readBack));","lastModifiedDate":"2021-03-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    public void saveColabFolder_nullColabFolder_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveColabFolder(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     * Saves {@code colabFolder} at the specified {@code filePath}.","lastModifiedDate":"2021-03-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    private void saveColabFolder(ReadOnlyColabFolder colabFolder, String filePath) {","lastModifiedDate":"2021-03-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"            new JsonColabFolderStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-25"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"                    .saveColabFolder(colabFolder, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    public void saveColabFolder_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-25"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveColabFolder(new ColabFolder(), null));","lastModifiedDate":"2021-03-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lirc572":10,"-":68,"samuelfangjw":51}},{"path":"src/test/java/seedu/address/storage/JsonSerializableColabFolderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class JsonSerializableColabFolderTest {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            \"JsonSerializableColabFolderTest\");","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path TYPICAL_DATA_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalColabFolder.json\");","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    private static final Path INVALID_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidContactColabFolder.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    private static final Path DUPLICATE_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateContactColabFolder.json\");","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path INVALID_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidProjectColabFolder.json\");","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path DUPLICATE_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateProjectColabFolder.json\");","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_typicalDataFile_success() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        JsonSerializableColabFolder dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_DATA_FILE,","lastModifiedDate":"2021-03-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableColabFolder.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolderFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        ColabFolder typicalContactsColabFolder \u003d getTypicalColabFolder();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        assertEquals(colabFolderFromFile, typicalContactsColabFolder);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"    public void toModelType_invalidContactFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        JsonSerializableColabFolder dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CONTACT_FILE,","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableColabFolder.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public void toModelType_duplicateContacts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        JsonSerializableColabFolder dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CONTACT_FILE,","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableColabFolder.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableColabFolder.MESSAGE_DUPLICATE_CONTACTS,","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidProject_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        JsonSerializableColabFolder dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PROJECT_FILE,","lastModifiedDate":"2021-03-25"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableColabFolder.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_duplicateProjects_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        JsonSerializableColabFolder dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PROJECT_FILE,","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableColabFolder.class).get();","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableColabFolder.MESSAGE_DUPLICATE_PROJECTS,","lastModifiedDate":"2021-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"lirc572":9,"-":27,"samuelfangjw":29}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        userPrefs.setColabFolderFilePath(Paths.get(\"colab.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"samuelfangjw":1}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        JsonColabFolderStorage colabFolderStorage \u003d new JsonColabFolderStorage(getTempFilePath(\"colab\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        storageManager \u003d new StorageManager(colabFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void colabFolderReadSave() throws Exception {","lastModifiedDate":"2021-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"         * {@link JsonColabFolderStorage} class.","lastModifiedDate":"2021-03-25"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonColabFolderStorageTest} class.","lastModifiedDate":"2021-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder original \u003d getTypicalColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        storageManager.saveColabFolder(original);","lastModifiedDate":"2021-03-25"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyColabFolder retrieved \u003d storageManager.readColabFolder().get();","lastModifiedDate":"2021-03-25"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ColabFolder(retrieved));","lastModifiedDate":"2021-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void getColabFolderFilePath() {","lastModifiedDate":"2021-03-25"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertNotNull(storageManager.getColabFolderFilePath());","lastModifiedDate":"2021-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":54,"samuelfangjw":14}},{"path":"src/test/java/seedu/address/testutil/ColabFolderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building {@code ColabFolder} objects.","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":" *     {@code ColabFolder ab \u003d new ColabFolderBuilder().withContact(\"John\", \"Doe\").build();}","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ColabFolderBuilder {","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private ColabFolder colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolderBuilder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolderBuilder(ColabFolder colabFolder) {","lastModifiedDate":"2021-03-25"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        this.colabFolder \u003d colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     * Adds a new {@code Contact} to the {@code ColabFolder} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public ColabFolderBuilder withContact(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        colabFolder.addContact(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a new {@code Project} to the {@code ColabFolder} that we are building.","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    public ColabFolderBuilder withContact(Project project) {","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        colabFolder.addProject(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code ColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public ColabFolder build() {","lastModifiedDate":"2021-03-25"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":6,"samuelfangjw":42}},{"path":"src/test/java/seedu/address/testutil/ContactBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-28"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-28"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":" * A utility class to help with building Contact objects.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"public class ContactBuilder {","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Creates a {@code ContactBuilder} with the default details.","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder() {","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     * Initializes the ContactBuilder with the data of {@code contactToCopy}.","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder(Contact contactToCopy) {","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        name \u003d contactToCopy.getName();","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        phone \u003d contactToCopy.getPhone();","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        email \u003d contactToCopy.getEmail();","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        address \u003d contactToCopy.getAddress();","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        tags \u003d new HashSet\u003c\u003e(contactToCopy.getTags());","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Name} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder withName(String name) {","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Contact} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder withTags(String ... tags) {","lastModifiedDate":"2021-03-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Address} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder withAddress(String address) {","lastModifiedDate":"2021-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Phone} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Email} of the {@code Contact} that we are building.","lastModifiedDate":"2021-03-28"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"    public ContactBuilder withEmail(String email) {","lastModifiedDate":"2021-03-28"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"     * Builds the {@code Contact} object.","lastModifiedDate":"2021-03-28"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"     * @return {@code Contact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"    public Contact build() {","lastModifiedDate":"2021-03-28"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"        return new Contact(name, phone, email, address, tags);","lastModifiedDate":"2021-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"lirc572":30,"-":67,"samuelfangjw":3}},{"path":"src/test/java/seedu/address/testutil/ContactUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":" * A utility class for Contact.","lastModifiedDate":"2021-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"public class ContactUtil {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Returns an add command string for adding the {@code Contact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    public static String getAddCommand(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getContactDetails(contact);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * Returns the part of command string for the given {@code Contact}\u0027s details.","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public static String getContactDetails(Contact contact) {","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        sb.append(PREFIX_NAME + contact.getName().fullName + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        sb.append(PREFIX_PHONE + contact.getPhone().value + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        sb.append(PREFIX_EMAIL + contact.getEmail().value + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        sb.append(PREFIX_ADDRESS + contact.getAddress().value + \" \");","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        contact.getTags().stream().forEach(","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * Returns the part of command string for the given {@code UpdateContactDescriptor}\u0027s details.","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public static String getUpdateContactDescriptorDetails(UpdateContactCommand.UpdateContactDescriptor descriptor) {","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"lirc572":17,"-":45}},{"path":"src/test/java/seedu/address/testutil/DeadlineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Deadline objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class DeadlineBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Deadline Description\";","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private LocalDate by;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code DeadlineBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        by \u003d DEFAULT_DATE;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the DeadlineBuilder with the data of {@code deadlineToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder(Deadline deadlineToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d deadlineToCopy.getDescription();","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        by \u003d deadlineToCopy.getBy();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d deadlineToCopy.getIsDone();","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Description} of the {@code Deadline} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder withDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code at} date of the {@code Deadline} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder withByDate(LocalDate date) {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d date;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code isDone} status of the {@code Deadline} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder withIsDone(Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Deadline} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Deadline}.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    public Deadline build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        return new Deadline(description, by, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":71}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class EventBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Event Description\";","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    public static final LocalTime DEFAULT_TIME \u003d LocalTime.of(17, 30);","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final Boolean DEFAULT_IS_WEEKLY \u003d false;","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    private LocalDate date;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    private LocalTime time;","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    private Boolean isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        date \u003d DEFAULT_DATE;","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        time \u003d DEFAULT_TIME;","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        isWeekly \u003d DEFAULT_IS_WEEKLY;","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d eventToCopy.getDescription();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        date \u003d eventToCopy.getDate();","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        time \u003d eventToCopy.getTime();","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        isWeekly \u003d eventToCopy.getIsWeekly();","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Description} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder withDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Sets the {@code date} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    public EventBuilder withDate(LocalDate date) {","lastModifiedDate":"2021-03-29"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"     * Sets the {@code time} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    public EventBuilder withTime(LocalTime time) {","lastModifiedDate":"2021-03-29"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        this.time \u003d time;","lastModifiedDate":"2021-03-29"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"     * Sets the {@code isWeekly} status of the {@code Event} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    public EventBuilder withIsWeekly(Boolean isWeekly) {","lastModifiedDate":"2021-03-29"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        this.isWeekly \u003d isWeekly;","lastModifiedDate":"2021-03-29"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Event} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Event}.","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public Event build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        return new Event(description, date, time, isWeekly);","lastModifiedDate":"2021-03-29"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":22,"samuelfangjw":62}},{"path":"src/test/java/seedu/address/testutil/GroupmateBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Name;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Role;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":" * A utility class to help with building Groupmate objects.","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"public class GroupmateBuilder {","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    private seedu.address.model.groupmate.Name name;","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    private Set\u003cRole\u003e roles;","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     * Creates a {@code GroupmateBuilder} with the default details.","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    public GroupmateBuilder() {","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"        roles \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     * Initializes the GroupmateBuilder with the data of {@code groupmateToCopy}.","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    public GroupmateBuilder(Groupmate groupmateToCopy) {","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        name \u003d groupmateToCopy.getName();","lastModifiedDate":"2021-03-29"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        roles \u003d new HashSet\u003c\u003e(groupmateToCopy.getRoles());","lastModifiedDate":"2021-03-29"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Name} of the {@code Groupmate} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    public GroupmateBuilder withName(String name) {","lastModifiedDate":"2021-03-29"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2021-03-29"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"     * Parses the {@code roles} into a {@code Set\u003cRole\u003e} and set it to the {@code Groupmate} that we are building.","lastModifiedDate":"2021-03-29"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public GroupmateBuilder withRoles(String ... roles) {","lastModifiedDate":"2021-03-29"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        this.roles \u003d SampleDataUtil.getRoleSet(roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-29"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     * Builds the {@code Groupmate} object.","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-29"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     * @return {@code Groupmate}.","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    public Groupmate build() {","lastModifiedDate":"2021-03-29"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        return new Groupmate(name, roles);","lastModifiedDate":"2021-03-29"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":62}},{"path":"src/test/java/seedu/address/testutil/GroupmateUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddGroupmateCommand;","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":" * A utility class for Contact.","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"public class GroupmateUtil {","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"     * Returns an addGroupmate command string for adding the {@code Groupmate}.","lastModifiedDate":"2021-03-29"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    public static String getAddGroupmateCommand(Index projectIndex, Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        return AddGroupmateCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-29"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"                + getGroupmateDetails(groupmate);","lastModifiedDate":"2021-03-29"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-29"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"     * Returns the part of command string for the given {@code Contact}\u0027s details.","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-29"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public static String getGroupmateDetails(Groupmate groupmate) {","lastModifiedDate":"2021-03-29"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        sb.append(PREFIX_NAME + groupmate.getName().fullName + \" \");","lastModifiedDate":"2021-03-29"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        groupmate.getRoles().stream().forEach(s -\u003e sb.append(PREFIX_ROLE + s.roleName + \" \")","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-29"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        return sb.toString();","lastModifiedDate":"2021-03-29"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-29"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":33}},{"path":"src/test/java/seedu/address/testutil/ProjectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.GroupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Project objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_PROJECT_NAME \u003d \"Test Project Name\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectName projectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"    private GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d new ProjectName(DEFAULT_PROJECT_NAME);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the ProjectBuilder with the data of {@code projectToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectBuilder(Project projectToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d projectToCopy.getProjectName();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        eventList \u003d projectToCopy.getEvents().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        todoList \u003d projectToCopy.getTodos().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList \u003d projectToCopy.getDeadlines().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        groupmateList \u003d projectToCopy.getGroupmates().getCopy();","lastModifiedDate":"2021-03-29"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code ProjectName} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectBuilder withName(String projectName) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d new ProjectName(projectName);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code EventList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withEventList(EventList eventList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        this.eventList \u003d eventList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code TodoList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withTodoList(TodoList todoList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        this.todoList \u003d todoList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code DeadlineList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withDeadlineList(DeadlineList deadlineList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        this.deadlineList \u003d deadlineList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code GroupmateList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withGroupmateList(GroupmateList groupmateList) {","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        this.groupmateList \u003d groupmateList.getCopy();","lastModifiedDate":"2021-03-29"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Project} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    public Project build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        return new Project(projectName, eventList, todoList, deadlineList, groupmateList);","lastModifiedDate":"2021-03-29"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":10,"samuelfangjw":80}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"     * Returns the middle index of the {@code Contact} in the {@code model}\u0027s contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        return Index.fromOneBased(model.getFilteredContactList().size() / 2);","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     * Returns the last index of the {@code Contact} in the {@code model}\u0027s contact list.","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        return Index.fromOneBased(model.getFilteredContactList().size());","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     * Returns the {@code Contact} in the {@code model}\u0027s contact list at {@code index}.","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public static Contact getContact(Model model, Index index) {","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        return model.getFilteredContactList().get(index.getZeroBased());","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lirc572":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TodoBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Todo objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"public class TodoBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Todo Description\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code TodoBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public TodoBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the TodoBuilder with the data of {@code todoToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public TodoBuilder(Todo todoToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        description \u003d todoToCopy.getDescription();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        isDone \u003d todoToCopy.getIsDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Description} of the {@code Todo} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public TodoBuilder withDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code isDone} status of the {@code Todo} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public TodoBuilder withIsDone(Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Todo} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Todo}.","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public Todo build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":3,"samuelfangjw":55}},{"path":"src/test/java/seedu/address/testutil/TypicalColabFolder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-25"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContacts;","lastModifiedDate":"2021-03-28"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjects;","lastModifiedDate":"2021-03-25"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * A utility class containing typical {@code ColabFolder} to use in tests.","lastModifiedDate":"2021-03-25"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class TypicalColabFolder {","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-25"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"     * Returns a {@code ColabFolder} with all the typical {@code Contact}s and {@code Project}s.","lastModifiedDate":"2021-03-28"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static ColabFolder getTypicalColabFolder() {","lastModifiedDate":"2021-03-25"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        ColabFolder colabFolder \u003d new ColabFolder();","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"        for (Contact contact : getTypicalContacts()) {","lastModifiedDate":"2021-03-28"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"            colabFolder.addContact(contact);","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : getTypicalProjects()) {","lastModifiedDate":"2021-03-25"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            colabFolder.addProject(project);","lastModifiedDate":"2021-03-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        return colabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-25"}],"authorContributionMap":{"lirc572":5,"samuelfangjw":22}},{"path":"src/test/java/seedu/address/testutil/TypicalContacts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":" * A utility class containing a list of {@code Contact} objects to be used in tests.","lastModifiedDate":"2021-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"public class TypicalContacts {","lastModifiedDate":"2021-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    public static final Contact ALICE \u003d new ContactBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    public static final Contact BENSON \u003d new ContactBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2021-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public static final Contact CARL \u003d new ContactBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    public static final Contact DANIEL \u003d new ContactBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2021-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"    public static final Contact ELLE \u003d new ContactBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2021-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    public static final Contact FIONA \u003d new ContactBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    public static final Contact GEORGE \u003d new ContactBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2021-03-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    public static final Contact HOON \u003d new ContactBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-03-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    public static final Contact IDA \u003d new ContactBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    // Manually added - {@code Contact}\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public static final Contact AMY \u003d new ContactBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    public static final Contact BOB \u003d new ContactBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    private TypicalContacts() {} // prevents instantiation","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    public static List\u003cContact\u003e getTypicalContacts() {","lastModifiedDate":"2021-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"lirc572":17,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalGroupmates.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-29"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"public class TypicalGroupmates {","lastModifiedDate":"2021-03-29"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"    public static final Groupmate SYLPH \u003d new GroupmateBuilder().withName(\"Sylphiette Greyrat\")","lastModifiedDate":"2021-03-29"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"            .withRoles(\"leader\", \"magician\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"    public static final Groupmate ROXY \u003d new GroupmateBuilder().withName(\"Roxy Migurdia\")","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"            .withRoles(\"magician\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"    public static final Groupmate ERIS \u003d new GroupmateBuilder().withName(\"Eris Boreas Greyrat\")","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"            .withRoles(\"member\", \"swordsman\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-29"}],"authorContributionMap":{"lirc572":16}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"lirc572":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalProjects.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.TimeUtil.encodeTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.groupmate.Groupmate;","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.GroupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" * A utility class containing a list of {@code Project} objects to be used in tests.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"public class TypicalProjects {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final ProjectName CS1101S_NAME \u003d new ProjectName(\"CS1101S\");","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DONE \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private TypicalProjects() {} // prevents instantiation","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a list of typical projects.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code List\u003cProject\u003e} containing typical projects.","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public static List\u003cProject\u003e getTypicalProjects() {","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"            return new ArrayList\u003c\u003e(Arrays.asList(getCS2103TProject(), getCS2101Project()));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        } catch (DateConversionException | TimeConversionException e) {","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"Unreachable statement executed\");","lastModifiedDate":"2021-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-25"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    // Typical Projects","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2103T project.","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    public static Project getCS2103TProject() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return new ProjectBuilder().withName(\"CS2103T Team Project\")","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                .withEventList(getCS2103TEventList())","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                .withDeadlineList(getCS2103TDeadlineList())","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                .withTodoList(getCS2103TTodosList())","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"                .withGroupmateList(getCS2103TGroupmateList())","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2101 project.","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public static Project getCS2101Project() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        return new ProjectBuilder().withName(\"CS2101 OP2\")","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                .withEventList(getCS2101EventList())","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                .withDeadlineList(getCS2101DeadlineList())","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                .withTodoList(getCS2101TodosList())","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                .withGroupmateList(getCS2101GroupmateList())","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    private static EventList getCS2103TEventList() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        Event eventWeeklyMeeting \u003d new EventBuilder().withDescription(\"Weekly Project Meeting\")","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"31-01-2021\")).withTime(encodeTime(\"2000\")).withIsWeekly(true).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventWeeklyMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2103TDeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone1 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.1\")","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"01-03-2021\")).withIsDone(DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone2 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.2\")","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"15-03-2021\")).withIsDone(DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone3 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.3\")","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"31-03-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone4 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.4\")","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"12-04-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone1);","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone2);","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone3);","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone4);","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getCS2103TTodosList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoTests \u003d new TodoBuilder().withDescription(\"Add unit tests\")","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoBrainstormNewIdea \u003d new TodoBuilder().withDescription(\"Brainstorm new feature\")","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoAddCommand \u003d new TodoBuilder().withDescription(\"Finish add command\")","lastModifiedDate":"2021-03-31"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(DONE).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoUpdateDocs \u003d new TodoBuilder().withDescription(\"Update documentation\")","lastModifiedDate":"2021-03-31"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoTests);","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoBrainstormNewIdea);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoAddCommand);","lastModifiedDate":"2021-03-31"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoUpdateDocs);","lastModifiedDate":"2021-03-31"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"    private static GroupmateList getCS2103TGroupmateList() {","lastModifiedDate":"2021-03-30"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"        Groupmate danh \u003d new GroupmateBuilder().withName(\"Danh\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        Groupmate ruochen \u003d new GroupmateBuilder().withName(\"Ruochen\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        Groupmate samuel \u003d new GroupmateBuilder().withName(\"Samuel\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        Groupmate vevek \u003d new GroupmateBuilder().withName(\"Vevek\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(danh);","lastModifiedDate":"2021-03-29"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(ruochen);","lastModifiedDate":"2021-03-29"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(samuel);","lastModifiedDate":"2021-03-29"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(vevek);","lastModifiedDate":"2021-03-29"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"        return groupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"    private static EventList getCS2101EventList() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-30"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        Event eventPlanningMeeting \u003d new EventBuilder().withDescription(\"OP2 Planning Meeting\")","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"17-03-2021\")).withTime(encodeTime(\"17:30\")).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Consultation \u003d new EventBuilder().withDescription(\"OP2 Consultation\")","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"23-03-2021\")).withTime(encodeTime(\"1000\")).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2ProductDemo \u003d new EventBuilder().withDescription(\"OP2 Product Demo\")","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"06-04-2021\")).withTime(encodeTime(\"1000\")).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Pitch \u003d new EventBuilder().withDescription(\"OP2 Pitch\")","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"09-04-2021\")).withTime(encodeTime(\"1000\")).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventPlanningMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Consultation);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2ProductDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Pitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2101DeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineDemo \u003d new DeadlineBuilder().withDescription(\"Product Demo Internal Deadline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"05-04-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlinePitch \u003d new DeadlineBuilder().withDescription(\"Product Pitch Internal Deadline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"08-04-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlinePitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getCS2101TodosList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSlidesForPitch \u003d new TodoBuilder().withDescription(\"Do up slides for pitch\")","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoVideoForDemo \u003d new TodoBuilder().withDescription(\"Do up video for demo\")","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSplitWorkload \u003d new TodoBuilder().withDescription(\"Split Workload\")","lastModifiedDate":"2021-03-31"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(DONE).build();","lastModifiedDate":"2021-03-31"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSlidesForPitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoVideoForDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSplitWorkload);","lastModifiedDate":"2021-03-31"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"    private static GroupmateList getCS2101GroupmateList() {","lastModifiedDate":"2021-03-31"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"        Groupmate danh \u003d new GroupmateBuilder().withName(\"Danh\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"        Groupmate ruochen \u003d new GroupmateBuilder().withName(\"Ruochen\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"        Groupmate samuel \u003d new GroupmateBuilder().withName(\"Samuel\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"        Groupmate vevek \u003d new GroupmateBuilder().withName(\"Vevek\").build();","lastModifiedDate":"2021-03-29"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"        GroupmateList groupmateList \u003d new GroupmateList();","lastModifiedDate":"2021-03-29"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(danh);","lastModifiedDate":"2021-03-29"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(ruochen);","lastModifiedDate":"2021-03-29"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(samuel);","lastModifiedDate":"2021-03-29"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"        groupmateList.addGroupmate(vevek);","lastModifiedDate":"2021-03-29"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-29"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"        return groupmateList;","lastModifiedDate":"2021-03-29"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":29,"vevek":13,"samuelfangjw":158}},{"path":"src/test/java/seedu/address/testutil/UpdateContactDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-30"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-30"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.UpdateContactCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-30"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-30"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-30"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-30"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-30"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":" * A utility class to help with building UpdateContactDescriptor objects.","lastModifiedDate":"2021-03-30"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-30"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class UpdateContactDescriptorBuilder {","lastModifiedDate":"2021-03-30"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    private UpdateContactCommand.UpdateContactDescriptor descriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder() {","lastModifiedDate":"2021-03-30"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactCommand.UpdateContactDescriptor();","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder(UpdateContactCommand.UpdateContactDescriptor descriptor) {","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        this.descriptor \u003d new UpdateContactCommand.UpdateContactDescriptor(descriptor);","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Returns an {@code UpdateContactDescriptorBuilder} with fields containing {@code Contact}\u0027s details","lastModifiedDate":"2021-03-30"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder(Contact contact) {","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        descriptor \u003d new UpdateContactCommand.UpdateContactDescriptor();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        descriptor.setName(contact.getName());","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        descriptor.setPhone(contact.getPhone());","lastModifiedDate":"2021-03-30"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        descriptor.setEmail(contact.getEmail());","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        descriptor.setAddress(contact.getAddress());","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        descriptor.setTags(contact.getTags());","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Name} of the {@code UpdateContactDescriptorBuilder} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder withName(String name) {","lastModifiedDate":"2021-03-30"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2021-03-30"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Phone} of the {@code UpdateContactDescriptorBuilder} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2021-03-30"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2021-03-30"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Email} of the {@code UpdateContactDescriptorBuilder} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2021-03-30"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2021-03-30"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"     * Sets the {@code Address} of the {@code UpdateContactDescriptorBuilder} that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2021-03-30"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2021-03-30"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-30"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code UpdateContactDescriptorBuilder}","lastModifiedDate":"2021-03-30"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"     * that we are building.","lastModifiedDate":"2021-03-30"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-30"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"    public UpdateContactDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2021-03-30"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2021-03-30"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2021-03-30"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        return this;","lastModifiedDate":"2021-03-30"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"    public UpdateContactCommand.UpdateContactDescriptor build() {","lastModifiedDate":"2021-03-30"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        return descriptor;","lastModifiedDate":"2021-03-30"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-30"}],"authorContributionMap":{"lirc572":87}},{"path":"src/test/java/seedu/address/ui/CommandBoxTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CommandBoxHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewContactsCommand;","lastModifiedDate":"2021-03-30"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains tests for the {@code CommandBox}.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class CommandBoxTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String COMMAND_THAT_SUCCEEDS \u003d ViewContactsCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String COMMAND_THAT_FAILS \u003d \"invalid command\";","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfCommandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString\u003e errorStyleOfCommandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private CommandBoxHandle commandBoxHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(commandText -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            if (commandText.equals(COMMAND_THAT_SUCCEEDS)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                return new CommandResult(\"Command successful\");","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Command failed\");","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        commandBoxHandle \u003d new CommandBoxHandle(getChildNode(commandBox.getRoot(),","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(commandBox);","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        defaultStyleOfCommandBox \u003d new ArrayList\u003c\u003e(commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        errorStyleOfCommandBox \u003d new ArrayList\u003c\u003e(defaultStyleOfCommandBox);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        errorStyleOfCommandBox.add(CommandBox.ERROR_STYLE_CLASS);","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void commandBox_startingWithSuccessfulCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void commandBox_startingWithFailedCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // verify that style is changed correctly even after multiple consecutive failed commands","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void commandBox_handleKeyPress() {","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.ESCAPE);","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.A);","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Runs a command that fails, then verifies that \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *      - the text remains \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *      - the command box\u0027s style is the same as {@code errorStyleOfCommandBox}.","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void assertBehaviorForFailedCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_THAT_FAILS, commandBoxHandle.getInput());","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Runs a command that succeeds, then verifies that \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *      - the text is cleared \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *      - the command box\u0027s style is the same as {@code defaultStyleOfCommandBox}.","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void assertBehaviorForSuccessfulCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(\"\", commandBoxHandle.getInput());","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":83,"samuelfangjw":16}},{"path":"src/test/java/seedu/address/ui/CompletableDeadlineCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysCompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableDeadlineCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableDeadlineCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean DONE \u003d true;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() throws DateConversionException {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        // deadline is done","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadlineIsDone \u003d new DeadlineBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"18-03-2021\")).withIsDone(DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard deadlineCard \u003d new CompletableDeadlineCard(deadlineIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(deadlineCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(deadlineCard, deadlineIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // deadline is not done","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadlineIsNotDone \u003d new DeadlineBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"18-03-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        deadlineCard \u003d new CompletableDeadlineCard(deadlineIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(deadlineCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(deadlineCard, deadlineIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadline \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard deadlineCard \u003d new CompletableDeadlineCard(deadline, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        // same deadline, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard copy \u003d new CompletableDeadlineCard(deadline, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(deadlineCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(deadlineCard.equals(deadlineCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        // different deadline, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline differentDeadline \u003d new DeadlineBuilder().withDescription(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(new CompletableDeadlineCard(differentDeadline, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        // same deadline, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(new CompletableDeadlineCard(deadline, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code deadlineCard} displays the details of {@code expectedDeadline}","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            CompletableDeadlineCard deadlineCard, CompletableDeadline expectedDeadline, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCardHandle deadlineCardHandle \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                new CompletableDeadlineCardHandle(deadlineCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", deadlineCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        // verify contact details are displayed correctly","lastModifiedDate":"2021-03-28"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysCompletableDeadline(expectedDeadline, deadlineCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"lirc572":1,"samuelfangjw":83}},{"path":"src/test/java/seedu/address/ui/CompletableTodoCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysCompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableTodoCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTodoCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean DONE \u003d true;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // todo is done","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todoIsDone \u003d new TodoBuilder().withDescription(\"Display Test\").withIsDone(DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard todoCard \u003d new CompletableTodoCard(todoIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(todoCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(todoCard, todoIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        // todo is not done","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todoIsNotDone \u003d new TodoBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        todoCard \u003d new CompletableTodoCard(todoIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(todoCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(todoCard, todoIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard todoCard \u003d new CompletableTodoCard(todo, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        // same todo, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard copy \u003d new CompletableTodoCard(todo, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(todoCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(todoCard.equals(todoCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // different todo, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo differentTodo \u003d new TodoBuilder().withDescription(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(new CompletableTodoCard(differentTodo, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        // same todo, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(new CompletableTodoCard(todo, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code todoCard} displays the details of {@code expectedTodo}","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"            CompletableTodoCard todoCard, CompletableTodo expectedTodo, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCardHandle todoCardHandle \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                new CompletableTodoCardHandle(todoCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", todoCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        // verify contact details are displayed correctly","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysCompletableTodo(expectedTodo, todoCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"lirc572":1,"samuelfangjw":80}},{"path":"src/test/java/seedu/address/ui/ContactCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysContact;","lastModifiedDate":"2021-03-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import guitests.guihandles.ContactCardHandle;","lastModifiedDate":"2021-03-28"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2021-03-28"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains tests for the {@code ContactCard}.","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ContactCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // no tags","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Contact contactWithNoTags \u003d new ContactBuilder().withTags(new String[0]).build();","lastModifiedDate":"2021-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        ContactCard contactCard \u003d new ContactCard(contactWithNoTags, 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(contactCard);","lastModifiedDate":"2021-03-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertCardDisplay(contactCard, contactWithNoTags, 1);","lastModifiedDate":"2021-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // with tags","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Contact contactWithTags \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        contactCard \u003d new ContactCard(contactWithTags, 2);","lastModifiedDate":"2021-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(contactCard);","lastModifiedDate":"2021-03-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCardDisplay(contactCard, contactWithTags, 2);","lastModifiedDate":"2021-03-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2021-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ContactCard contactCard \u003d new ContactCard(contact, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same contact, same index -\u003e returns true","lastModifiedDate":"2021-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ContactCard copy \u003d new ContactCard(contact, 0);","lastModifiedDate":"2021-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(contactCard.equals(copy));","lastModifiedDate":"2021-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(contactCard.equals(contactCard));","lastModifiedDate":"2021-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(contactCard.equals(null));","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(contactCard.equals(0));","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different contact, same index -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Contact differentContact \u003d new ContactBuilder().withName(\"differentName\").build();","lastModifiedDate":"2021-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(contactCard.equals(new ContactCard(differentContact, 0)));","lastModifiedDate":"2021-03-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same contact, different index -\u003e returns false","lastModifiedDate":"2021-03-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(contactCard.equals(new ContactCard(contact, 1)));","lastModifiedDate":"2021-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Asserts that {@code contactCard} displays the details of {@code expectedContact} correctly and matches","lastModifiedDate":"2021-03-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code expectedId}.","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void assertCardDisplay(ContactCard contactCard, Contact expectedContact, int expectedId) {","lastModifiedDate":"2021-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ContactCardHandle contactCardHandle \u003d new ContactCardHandle(contactCard.getRoot());","lastModifiedDate":"2021-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", contactCardHandle.getId());","lastModifiedDate":"2021-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // verify contact details are displayed correctly","lastModifiedDate":"2021-03-28"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCardDisplaysContact(expectedContact, contactCardHandle);","lastModifiedDate":"2021-03-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"lirc572":4,"-":64,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/ui/ContactListPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"//package seedu.address.ui;","lastModifiedDate":"2021-03-31"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"//import static java.time.Duration.ofMillis;","lastModifiedDate":"2021-03-31"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-31"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"//import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;","lastModifiedDate":"2021-03-31"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"//import static seedu.address.testutil.TypicalContacts.getTypicalContacts;","lastModifiedDate":"2021-03-31"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"//import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysContact;","lastModifiedDate":"2021-03-31"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"//import java.util.Collections;","lastModifiedDate":"2021-03-31"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-31"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"//import guitests.guihandles.ContactCardHandle;","lastModifiedDate":"2021-03-31"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"//import guitests.guihandles.ContactListPanelHandle;","lastModifiedDate":"2021-03-31"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"//import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2021-03-31"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"//import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-31"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"//import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-31"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"//import seedu.address.model.contact.Address;","lastModifiedDate":"2021-03-31"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"//import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-31"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"//import seedu.address.model.contact.Email;","lastModifiedDate":"2021-03-31"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"//import seedu.address.model.contact.Name;","lastModifiedDate":"2021-03-31"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"//import seedu.address.model.contact.Phone;","lastModifiedDate":"2021-03-31"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"///**","lastModifiedDate":"2021-03-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// * @@author {se-edu}-reused","lastModifiedDate":"2021-03-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// *","lastModifiedDate":"2021-03-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"// * Contains tests for the {@code ContactListPanel}.","lastModifiedDate":"2021-03-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"// */","lastModifiedDate":"2021-03-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//public class ContactListPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-03-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"//    private static final ObservableList\u003cContact\u003e TYPICAL_CONTACTS \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"//            FXCollections.observableList(getTypicalContacts());","lastModifiedDate":"2021-03-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"//    private static final long CARD_CREATION_AND_DELETION_TIMEOUT \u003d 2500;","lastModifiedDate":"2021-03-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"//    private final SimpleObjectProperty\u003cContact\u003e selectedContact \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2021-03-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"//    private ContactListPanelHandle contactListPanelHandle;","lastModifiedDate":"2021-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"//    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"//    public void display() {","lastModifiedDate":"2021-03-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"//        initUi(TYPICAL_CONTACTS);","lastModifiedDate":"2021-03-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"//        for (int i \u003d 0; i \u003c TYPICAL_CONTACTS.size(); i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"//            contactListPanelHandle.navigateToCard(TYPICAL_CONTACTS.get(i));","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"//            Contact expectedContact \u003d TYPICAL_CONTACTS.get(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"//            ContactCardHandle actualCard \u003d contactListPanelHandle.getContactCardHandle(i);","lastModifiedDate":"2021-03-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"//            assertCardDisplaysContact(expectedContact, actualCard);","lastModifiedDate":"2021-03-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"//            assertEquals(Integer.toString(i + 1) + \". \", actualCard.getId());","lastModifiedDate":"2021-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"//        }","lastModifiedDate":"2021-03-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"//    }","lastModifiedDate":"2021-03-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"//    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"//     * Verifies that creating and deleting large number of contacts in {@code ContactListPanel} requires lesser than","lastModifiedDate":"2021-03-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"//     * {@code CARD_CREATION_AND_DELETION_TIMEOUT} milliseconds to execute.","lastModifiedDate":"2021-03-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"//     */","lastModifiedDate":"2021-03-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"//    @Test","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"//    public void performanceTest() {","lastModifiedDate":"2021-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"//        ObservableList\u003cContact\u003e backingList \u003d createBackingList(10000);","lastModifiedDate":"2021-03-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"//        assertTimeoutPreemptively(ofMillis(CARD_CREATION_AND_DELETION_TIMEOUT), () -\u003e {","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"//            initUi(backingList);","lastModifiedDate":"2021-03-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"//            guiRobot.interact(backingList::clear);","lastModifiedDate":"2021-03-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"//        }, \"Creation and deletion of contact cards exceeded time limit\");","lastModifiedDate":"2021-03-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"//    }","lastModifiedDate":"2021-03-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"//    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"//     * Returns a list of contacts containing {@code contactCount} contacts that is used to populate the","lastModifiedDate":"2021-03-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"//     * {@code ContactListPanel}.","lastModifiedDate":"2021-03-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"//     */","lastModifiedDate":"2021-03-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"//    private ObservableList\u003cContact\u003e createBackingList(int contactCount) {","lastModifiedDate":"2021-03-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"//        ObservableList\u003cContact\u003e backingList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"//        for (int i \u003d 0; i \u003c contactCount; i++) {","lastModifiedDate":"2021-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"//            Name name \u003d new Name(i + \"a\");","lastModifiedDate":"2021-03-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"//            Phone phone \u003d new Phone(\"000\");","lastModifiedDate":"2021-03-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"//            Email email \u003d new Email(\"a@aa\");","lastModifiedDate":"2021-03-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"//            Address address \u003d new Address(\"a\");","lastModifiedDate":"2021-03-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"//            Contact contact \u003d new Contact(name, phone, email, address, Collections.emptySet());","lastModifiedDate":"2021-03-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"//            backingList.add(contact);","lastModifiedDate":"2021-03-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"//        }","lastModifiedDate":"2021-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"//        return backingList;","lastModifiedDate":"2021-03-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"//    }","lastModifiedDate":"2021-03-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"//    /**","lastModifiedDate":"2021-03-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"//     * Initializes {@code contactListPanelHandle} with a {@code ContactListPanel} backed by {@code backingList}.","lastModifiedDate":"2021-03-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"//     * Also shows the {@code Stage} that displays only {@code ContactListPanel}.","lastModifiedDate":"2021-03-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"//     */","lastModifiedDate":"2021-03-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"//    private void initUi(ObservableList\u003cContact\u003e backingList) {","lastModifiedDate":"2021-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"//        ContactListPanel contactListPanel \u003d","lastModifiedDate":"2021-03-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"//                new ContactListPanel(backingList);","lastModifiedDate":"2021-03-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"//        uiPartExtension.setUiPart(contactListPanel);","lastModifiedDate":"2021-03-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"//","lastModifiedDate":"2021-03-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"//        contactListPanelHandle \u003d new ContactListPanelHandle(getChildNode(contactListPanel.getRoot(),","lastModifiedDate":"2021-03-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"//                ContactListPanelHandle.CONTACT_LIST_VIEW_ID));","lastModifiedDate":"2021-03-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//    }","lastModifiedDate":"2021-03-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"//}","lastModifiedDate":"2021-03-31"}],"authorContributionMap":{"-":72,"samuelfangjw":24}},{"path":"src/test/java/seedu/address/ui/EventCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.TimeUtil.encodeTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysEvent;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.EventCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-30"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code EventCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"public class EventCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public void display_success() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        // event has no weekly repetition","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        Event eventNoWeekly \u003d new EventBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-30"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"12-12-2021\")).withTime(encodeTime(\"1000\")).withIsWeekly(false).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        EventCard eventCard \u003d new EventCard(eventNoWeekly, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(eventCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertCardDisplay(eventCard, eventNoWeekly, 1);","lastModifiedDate":"2021-03-30"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        // event has weekly repetition","lastModifiedDate":"2021-03-30"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Event eventHasWeekly \u003d new EventBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-30"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"                .withDate(encodeDate(\"12-12-2021\")).withTime(encodeTime(\"1000\")).withIsWeekly(true).build();","lastModifiedDate":"2021-03-30"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        eventCard \u003d new EventCard(eventHasWeekly, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(eventCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        assertCardDisplay(eventCard, eventHasWeekly, 2);","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        EventCard eventCard \u003d new EventCard(event, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        // same event, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        EventCard copy \u003d new EventCard(event, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(eventCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(eventCard.equals(eventCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        // different event, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        Event differentEvent \u003d new EventBuilder().withDescription(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(new EventCard(differentEvent, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // same event, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(new EventCard(event, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code eventCard} displays the details of {@code expectedEvent}","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(EventCard eventCard, Event expectedEvent, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        EventCardHandle eventCardHandle \u003d new EventCardHandle(eventCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", eventCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        // verify contact details are displayed correctly","lastModifiedDate":"2021-03-28"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysEvent(expectedEvent, eventCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"lirc572":1,"vevek":13,"samuelfangjw":67}},{"path":"src/test/java/seedu/address/ui/GuiUnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.RegisterExtension;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.testutil.UiPartExtension;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A GUI unit test class for CoLAB.","lastModifiedDate":"2021-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public abstract class GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // TODO: Remove this workaround after using JavaFX version 13 or above","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // This is a workaround to solve headless test failure on Windows OS","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Refer to https://github.com/javafxports/openjdk-jfx/issues/66 for more details.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"win\")) {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            System.loadLibrary(\"WindowsCodecs\");","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @RegisterExtension","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final UiPartExtension uiPartExtension \u003d new UiPartExtension();","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector of the node to retrieve.","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected \u003cT extends Node\u003e T getChildNode(Node rootNode, String query) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":31,"samuelfangjw":12}},{"path":"src/test/java/seedu/address/ui/MainWindowCloseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.StageHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonColabFolderStorage;","lastModifiedDate":"2021-03-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains tests for closing of the {@code MainWindow}.","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindowCloseTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private EmptyMainWindowHandle mainWindowHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonColabFolderStorage jsonColabFolderStorage \u003d","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new JsonColabFolderStorage(temporaryFolder.resolve(\"colab.json\"));","lastModifiedDate":"2021-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StorageManager storageManager \u003d new StorageManager(jsonColabFolderStorage, jsonUserPrefsStorage);","lastModifiedDate":"2021-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        FxToolkit.setupStage(stage -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(stage, new LogicManager(new ModelManager(), storageManager));","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindowHandle \u003d new EmptyMainWindowHandle(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindowHandle.focus();","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FxToolkit.showStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void close_menuBarExitButton_allWindowsClosed() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        mainWindowHandle.clickOnMenuExitButton();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // The application will exit when all windows are closed.","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), guiRobot.listWindows());","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void close_externalRequest_exitAppRequestEventPosted() {","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        mainWindowHandle.closeMainWindowExternally();","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // The application will exit when all windows are closed.","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), guiRobot.listWindows());","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * A handle for an empty {@code MainWindow}. The components in {@code MainWindow} are not initialized.","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private class EmptyMainWindowHandle extends StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        private EmptyMainWindowHandle(Stage stage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            super(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"         * Closes the {@code MainWindow} by clicking on the menu bar\u0027s exit button.","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        private void clickOnMenuExitButton() {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            guiRobot.clickOn(\"File\");","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            guiRobot.clickOn(\"Exit\");","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * Closes the {@code MainWindow} through an external request {@code MainWindow} (e.g pressing the \u0027X\u0027 button on","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         * the {@code MainWindow} or closing the app through the taskbar).","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        private void closeMainWindowExternally() {","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            guiRobot.interact(() -\u003e stage.fireEvent(new WindowEvent(stage, WindowEvent.WINDOW_CLOSE_REQUEST)));","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":68,"samuelfangjw":22}},{"path":"src/test/java/seedu/address/ui/ProjectCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysProject;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ProjectCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code ProjectCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d new ProjectBuilder().withName(\"Display Test\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard projectCard \u003d new ProjectCard(project, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(projectCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(projectCard, project, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard projectCard \u003d new ProjectCard(project, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        // same project, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard copy \u003d new ProjectCard(project, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(projectCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(projectCard.equals(projectCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        // different project, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        Project differentProject \u003d new ProjectBuilder().withName(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(new ProjectCard(differentProject, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // same project, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(new ProjectCard(project, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code projectCard} displays the details of {@code expectedProject}","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(ProjectCard projectCard, Project expectedProject, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCardHandle projectCardHandle \u003d new ProjectCardHandle(projectCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", projectCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        // verify contact details are displayed correctly","lastModifiedDate":"2021-03-28"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysProject(expectedProject, projectCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"lirc572":1,"samuelfangjw":67}},{"path":"src/test/java/seedu/address/ui/ProjectDisplayPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.ProjectDisplayPanel.OVERVIEW_TAB;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.ProjectDisplayPanel.TODOS_TAB;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ProjectDisplayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.TimeConversionException;","lastModifiedDate":"2021-03-30"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TypicalProjects;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectDisplayPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectDisplayPanelHandle projectDisplayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    void changeTab_success() throws DateConversionException, TimeConversionException {","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // Init UI","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        ProjectDisplayPanel projectDisplayPanel \u003d new ProjectDisplayPanel();","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d TypicalProjects.getCS2103TProject();","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.displayProject(project);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(projectDisplayPanel);","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanelHandle \u003d new ProjectDisplayPanelHandle(projectDisplayPanel.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        // Switch to todos tab","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanelHandle.setTabInFocus(TODOS_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.showOverviewTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(projectDisplayPanelHandle.getTabInFocus(), OVERVIEW_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        // Switch to overview tab","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanelHandle.setTabInFocus(OVERVIEW_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.showTodosTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(projectDisplayPanelHandle.getTabInFocus(), TODOS_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"vevek":2,"samuelfangjw":40}},{"path":"src/test/java/seedu/address/ui/ResultDisplayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ResultDisplayHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains tests for the {@code ResultDisplay}.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ResultDisplayTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private ResultDisplayHandle resultDisplayHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(resultDisplay);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        resultDisplayHandle \u003d new ResultDisplayHandle(getChildNode(resultDisplay.getRoot(),","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                ResultDisplayHandle.RESULT_DISPLAY_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // default result text","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(\"\", resultDisplayHandle.getText());","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // new result received","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e resultDisplay.setFeedbackToUser(\"Dummy feedback to user\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(\"Dummy feedback to user\", resultDisplayHandle.getText());","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":31,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/ui/StatusBarFooterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.StatusBarFooterHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains tests for the {@code StatusBarFooter}.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StatusBarFooterTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path STUB_SAVE_LOCATION \u003d Paths.get(\"Stub\");","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path RELATIVE_PATH \u003d Paths.get(\".\");","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StatusBarFooterHandle statusBarFooterHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(STUB_SAVE_LOCATION);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(statusBarFooter);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        statusBarFooterHandle \u003d new StatusBarFooterHandle(statusBarFooter.getRoot());","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH.resolve(STUB_SAVE_LOCATION).toString());","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Asserts that the save location matches that of {@code expectedSaveLocation}.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void assertStatusBarContent(String expectedSaveLocation) {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedSaveLocation, statusBarFooterHandle.getSaveLocation());","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":33,"samuelfangjw":13}},{"path":"src/test/java/seedu/address/ui/TodayPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDateWithDay;","lastModifiedDate":"2021-03-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalColabFolder.getTypicalColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.TodayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyColabFolder;","lastModifiedDate":"2021-03-25"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code TodayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class TodayPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private TodayPanelHandle todayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void displayDate_success() throws DateConversionException {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate date \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        initUi(getTypicalColabFolder(), date);","lastModifiedDate":"2021-03-25"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todayPanelHandle.getDisplayedDate(), decodeDateWithDay(date));","lastModifiedDate":"2021-03-26"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes {@code todayPanelHandle} with a {@code TodayPanel} backed by a {@code ReadOnlyColabFolder}.","lastModifiedDate":"2021-03-25"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * @param colabFolder {@code ReadOnlyColabFolder} that backs the {@code TodayPanel} to be created.","lastModifiedDate":"2021-03-25"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * @param date {@code LocalDate} to be displayed in the UI.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private void initUi(ReadOnlyColabFolder colabFolder, LocalDate date) {","lastModifiedDate":"2021-03-25"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        TodayPanel todayPanel \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                new TodayPanel(colabFolder, date);","lastModifiedDate":"2021-03-25"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(todayPanel);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        todayPanelHandle \u003d new TodayPanelHandle(todayPanel.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":43}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-30"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDateIntoDay;","lastModifiedDate":"2021-03-30"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.TimeUtil.decodeTime;","lastModifiedDate":"2021-03-30"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableDeadlineCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableTodoCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import guitests.guihandles.ContactCardHandle;","lastModifiedDate":"2021-03-28"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import guitests.guihandles.ContactListPanelHandle;","lastModifiedDate":"2021-03-28"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.EventCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ProjectCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ResultDisplayHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2021-03-28"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableDeadlineCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableTodoCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing GUI tests.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class GuiTestAssert {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static void assertCardEquals(ContactCardHandle expectedCard, ContactCardHandle actualCard) {","lastModifiedDate":"2021-03-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getAddress(), actualCard.getAddress());","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getEmail(), actualCard.getEmail());","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getPhone(), actualCard.getPhone());","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(expectedCard.getTags(), actualCard.getTags());","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedContact}.","lastModifiedDate":"2021-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysContact(Contact expectedContact, ContactCardHandle actualCard) {","lastModifiedDate":"2021-03-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(expectedContact.getName().fullName, actualCard.getName());","lastModifiedDate":"2021-03-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(expectedContact.getPhone().value, actualCard.getPhone());","lastModifiedDate":"2021-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(expectedContact.getEmail().value, actualCard.getEmail());","lastModifiedDate":"2021-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(expectedContact.getAddress().value, actualCard.getAddress());","lastModifiedDate":"2021-03-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(expectedContact.getTags().stream().map(tag -\u003e tag.tagName).sorted().collect(Collectors.toList()),","lastModifiedDate":"2021-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                actualCard.getTags());","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedCompletableDeadline}.","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysCompletableDeadline(","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            CompletableDeadline expectedDeadline, CompletableDeadlineCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(expectedDeadline.getDescription(), actualCard.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(decodeDate(expectedDeadline.getBy()), actualCard.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(decodeDateIntoDay(expectedDeadline.getBy()), actualCard.getDay());","lastModifiedDate":"2021-03-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String expectedCompletedText \u003d CompletableDeadlineCard","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .getTextToDisplay(expectedDeadline.getIsDone());","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(expectedCompletedText, actualCard.getCompleted());","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedCompletableTodo}.","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysCompletableTodo(","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            CompletableTodo expectedTodo, CompletableTodoCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(expectedTodo.getDescription(), actualCard.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        String expectedCompletedText \u003d CompletableTodoCard","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .getTextToDisplay(expectedTodo.getIsDone());","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertEquals(expectedCompletedText, actualCard.getCompleted());","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedEvent}.","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysEvent(Event expectedEvent, EventCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedEvent.getDescription(), actualCard.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(decodeTime(expectedEvent.getTime()), actualCard.getTime());","lastModifiedDate":"2021-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(decodeDateIntoDay(expectedEvent.getDate()), actualCard.getDay());","lastModifiedDate":"2021-03-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (expectedEvent.getIsWeekly()) {","lastModifiedDate":"2021-03-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            assertEquals(\"every\", actualCard.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(decodeDate(expectedEvent.getDate()), actualCard.getDate());","lastModifiedDate":"2021-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedProject}.","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCardDisplaysProject(Project expectedProject, ProjectCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertEquals(expectedProject.getProjectName().toString(), actualCard.getName());","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code contactListPanelHandle} displays the details of {@code contacts} correctly and","lastModifiedDate":"2021-03-28"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * in the correct order.","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertListMatching(ContactListPanelHandle contactListPanelHandle, Contact... contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c contacts.length; i++) {","lastModifiedDate":"2021-03-28"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            contactListPanelHandle.navigateToCard(i);","lastModifiedDate":"2021-03-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertCardDisplaysContact(contacts[i], contactListPanelHandle.getContactCardHandle(i));","lastModifiedDate":"2021-03-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Asserts that the list in {@code contactListPanelHandle} displays the details of {@code contacts} correctly and","lastModifiedDate":"2021-03-28"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * in the correct order.","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static void assertListMatching(ContactListPanelHandle contactListPanelHandle, List\u003cContact\u003e contacts) {","lastModifiedDate":"2021-03-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertListMatching(contactListPanelHandle, contacts.toArray(new Contact[0]));","lastModifiedDate":"2021-03-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Asserts the size of the list in {@code contactListPanelHandle} equals to {@code size}.","lastModifiedDate":"2021-03-28"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void assertListSize(ContactListPanelHandle contactListPanelHandle, int size) {","lastModifiedDate":"2021-03-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        int numberOfPeople \u003d contactListPanelHandle.getListSize();","lastModifiedDate":"2021-03-28"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(size, numberOfPeople);","lastModifiedDate":"2021-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}.","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expected, resultDisplayHandle.getText());","lastModifiedDate":"2021-03-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"lirc572":3,"vevek":1,"-":109,"samuelfangjw":22}},{"path":"src/test/java/seedu/address/ui/testutil/StageExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.AfterEachCallback;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.BeforeEachCallback;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.ExtensionContext;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Properly sets up and tears down a JavaFx stage for our testing purposes.","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class StageExtension implements BeforeEachCallback, AfterEachCallback {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void beforeEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        FxToolkit.registerPrimaryStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void afterEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        FxToolkit.cleanupStages();","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":16,"samuelfangjw":8}},{"path":"src/test/java/seedu/address/ui/testutil/UiPartExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.concurrent.TimeoutException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides an isolated stage to test an individual {@code UiPart}.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class UiPartExtension extends StageExtension {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String[] CSS_FILES \u003d {\"view/DarkTheme.css\", \"view/Extensions.css\"};","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void setUiPart(final UiPart\u003c? extends Parent\u003e uiPart) {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            FxToolkit.setupScene(() -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                Scene scene \u003d new Scene(uiPart.getRoot());","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                scene.getStylesheets().setAll(CSS_FILES);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                return scene;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            });","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            FxToolkit.showStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (TimeoutException te) {","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Timeout should not happen.\", te);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":21,"samuelfangjw":11}}]
