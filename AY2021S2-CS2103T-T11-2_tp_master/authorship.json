[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"# CoLAB"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml)"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d2NR2SMZ01E)](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"docs/images/logo.png\"\u003e"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to keep track of people they have crossed paths with.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your contact management tasks done faster than traditional GUI apps."},{"lineNumber":11,"author":{"gitId":"vevek"},"content":""},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"What are you waiting for? Start tracking your university life now!"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"## Site Map"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"- **[User Guide](https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html)**"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"- **[Developer Guide](https://ay2021s2-cs2103t-t11-2.github.io/tp/DeveloperGuide.html)**"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"- **[About Us](https://ay2021s2-cs2103t-t11-2.github.io/tp/AboutUs.html)**"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":""},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"## Acknowledgements"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":""},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"- Libraries used:"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"  - [JavaFX](https://openjfx.io/)"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"  - [Jackson](https://github.com/FasterXML/jackson)"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"  - [JUnit5](https://github.com/junit-team/junit5)"}],"authorContributionMap":{"vevek":15,"Eriksen2411":1,"-":5,"samuelfangjw":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.enabled \u003d true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    archiveName \u003d \u0027CoLAB.jar\u0027"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027"}],"authorContributionMap":{"-":71,"samuelfangjw":1}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg)."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"## CoLAB Project team"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"### Fang Junwei, Samuel"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/samuelfangjw.png\" width\u003d\"200px\"\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/samuelfangjw)]"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/samuelfangjw.md)]"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Deliverables and Deadlines"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"### Vevek Selvam"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/vevek.png\" width\u003d\"200px\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/vevek)]"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/vevek.md)]"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Integration"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Model, Logic"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"### Nguyen Duc Danh"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/eriksen2411.png\" width\u003d\"200px\"\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/Eriksen2411)]"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/eriksen2411.md)]"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Documentation"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Storage"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"### Li Ruochen"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/lirc572.png\" width\u003d\"200px\"\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/lirc572)]"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/lirc572.md)]"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Code quality"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Tests"},{"lineNumber":51,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"Eriksen2411":25,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md)."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other."},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary."},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App."},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor."},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory."},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk."},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component."},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point."},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component."},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class."},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component."},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data."},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command."},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`."},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person)."},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`."},{"lineNumber":87,"author":{"gitId":"-"},"content":"1. In addition, the `CommandResult` object can also instruct the `Ui` to perform certain actions, such as displaying help to the user."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences."},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change."},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component"},{"lineNumber":117,"author":{"gitId":"-"},"content":""},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)"},{"lineNumber":119,"author":{"gitId":"-"},"content":""},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back."},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented."},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"#### Proposed Implementation"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history."},{"lineNumber":144,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history."},{"lineNumber":145,"author":{"gitId":"-"},"content":""},{"lineNumber":146,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively."},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step."},{"lineNumber":149,"author":{"gitId":"-"},"content":""},{"lineNumber":150,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state."},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state."},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`."},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`."},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state."},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather"},{"lineNumber":171,"author":{"gitId":"-"},"content":"than attempting to perform the undo."},{"lineNumber":172,"author":{"gitId":"-"},"content":""},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:"},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram."},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state."},{"lineNumber":184,"author":{"gitId":"-"},"content":""},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo."},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged."},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow."},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)"},{"lineNumber":196,"author":{"gitId":"-"},"content":""},{"lineNumber":197,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:"},{"lineNumber":198,"author":{"gitId":"-"},"content":""},{"lineNumber":199,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)"},{"lineNumber":200,"author":{"gitId":"-"},"content":""},{"lineNumber":201,"author":{"gitId":"-"},"content":"#### Design consideration:"},{"lineNumber":202,"author":{"gitId":"-"},"content":""},{"lineNumber":203,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book."},{"lineNumber":206,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement."},{"lineNumber":207,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by"},{"lineNumber":210,"author":{"gitId":"-"},"content":"  itself."},{"lineNumber":211,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted)."},{"lineNumber":212,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct."},{"lineNumber":213,"author":{"gitId":"-"},"content":""},{"lineNumber":214,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_"},{"lineNumber":215,"author":{"gitId":"-"},"content":""},{"lineNumber":216,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving"},{"lineNumber":217,"author":{"gitId":"-"},"content":""},{"lineNumber":218,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":""},{"lineNumber":221,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":222,"author":{"gitId":"-"},"content":""},{"lineNumber":223,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**"},{"lineNumber":224,"author":{"gitId":"-"},"content":""},{"lineNumber":225,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)"},{"lineNumber":229,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":232,"author":{"gitId":"-"},"content":""},{"lineNumber":233,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**"},{"lineNumber":234,"author":{"gitId":"-"},"content":""},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Product scope"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":"**Target user profile**:"},{"lineNumber":238,"author":{"gitId":"-"},"content":""},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"* student currently enrolled in a university"},{"lineNumber":240,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts"},{"lineNumber":241,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types"},{"lineNumber":242,"author":{"gitId":"-"},"content":"* can type fast"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions"},{"lineNumber":244,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps"},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"**Value proposition**:"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"* supports only features a university student needs without additional clutter"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"* information organised by categories relevant to university students (e.g. tag by modules)"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"* manage contacts faster than a typical mouse/GUI driven app"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":"### User stories"},{"lineNumber":254,"author":{"gitId":"-"},"content":""},{"lineNumber":255,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`"},{"lineNumber":256,"author":{"gitId":"-"},"content":""},{"lineNumber":257,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |"},{"lineNumber":258,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |"},{"lineNumber":259,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"| `* * *`  | user                                       | add a new person               | keep track of details from peers I have crossed paths with             |"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"| `* * *`  | user                                       | edit a person\u0027s details        | update their details when there is change                              |"},{"lineNumber":262,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |"},{"lineNumber":263,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"| `* * *`  | user                                       | tag a person with tags         | easily keep track of who the contact is                                |"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | University Student                         | find contacts by modules taken | easily find contacts who take the same module as me                    |"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | Student Teaching Assistant                 | find contacts by tutorial group| easily find contacts of students in my class                           |"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | user                                       | purge all data in the app      | start my address book from fresh                                       |"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"| `*`      | long time user                             | archive data files             | refer to old address books when needed                                 |"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":""},{"lineNumber":271,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":272,"author":{"gitId":"-"},"content":""},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Use cases"},{"lineNumber":274,"author":{"gitId":"-"},"content":""},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"(For all use cases below, the **System** is `CoLAB` and the **Actor** is the `user`, unless specified otherwise)"},{"lineNumber":276,"author":{"gitId":"-"},"content":""},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"#### UC1 - Add a person"},{"lineNumber":278,"author":{"gitId":"-"},"content":""},{"lineNumber":279,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":280,"author":{"gitId":"-"},"content":""},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to add a person"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB adds the person"},{"lineNumber":283,"author":{"gitId":"-"},"content":""},{"lineNumber":284,"author":{"gitId":"-"},"content":"   Use case ends."},{"lineNumber":285,"author":{"gitId":"-"},"content":""},{"lineNumber":286,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given arguments are invalid."},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message."},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1."},{"lineNumber":293,"author":{"gitId":"-"},"content":""},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"#### UC2 - Find details of a specific person"},{"lineNumber":295,"author":{"gitId":"-"},"content":""},{"lineNumber":296,"author":{"gitId":"-"},"content":"**MSS**"},{"lineNumber":297,"author":{"gitId":"-"},"content":""},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to find a person."},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB shows a list of persons that match user\u0027s query."},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"3. User requests to view more details about a specific person in the list."},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB shows more information about the person in the list."},{"lineNumber":302,"author":{"gitId":"-"},"content":""},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends."},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":"**Extensions**"},{"lineNumber":306,"author":{"gitId":"-"},"content":""},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"* 2a. The list of persons is empty."},{"lineNumber":308,"author":{"gitId":"-"},"content":""},{"lineNumber":309,"author":{"gitId":"-"},"content":"  Use case ends."},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid."},{"lineNumber":312,"author":{"gitId":"-"},"content":""},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"    * 3a1. CoLAB shows an error message."},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"-"},"content":"      Use case resumes at step 2."},{"lineNumber":316,"author":{"gitId":"-"},"content":""},{"lineNumber":317,"author":{"gitId":"-"},"content":""},{"lineNumber":318,"author":{"gitId":"samuelfangjw"},"content":"#### UC3 - Delete a person"},{"lineNumber":319,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":320,"author":{"gitId":"samuelfangjw"},"content":"**MSS**"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":322,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to list persons."},{"lineNumber":323,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB shows a list of persons."},{"lineNumber":324,"author":{"gitId":"samuelfangjw"},"content":"3. User requests to delete a specific person in the list."},{"lineNumber":325,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB deletes the person."},{"lineNumber":326,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":327,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends."},{"lineNumber":328,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":329,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**"},{"lineNumber":330,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":331,"author":{"gitId":"samuelfangjw"},"content":"* 2a. The list of persons is empty."},{"lineNumber":332,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":333,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends."},{"lineNumber":334,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":335,"author":{"gitId":"samuelfangjw"},"content":"* 3a. The given index is invalid."},{"lineNumber":336,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":337,"author":{"gitId":"samuelfangjw"},"content":"    * 3a1. CoLAB shows an error message."},{"lineNumber":338,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":339,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 2."},{"lineNumber":340,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":341,"author":{"gitId":"samuelfangjw"},"content":"#### UC4 - Purge all entries from the app"},{"lineNumber":342,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":343,"author":{"gitId":"samuelfangjw"},"content":"**MSS**"},{"lineNumber":344,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":345,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to delete all entries from the app."},{"lineNumber":346,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB asks user to confirm request."},{"lineNumber":347,"author":{"gitId":"samuelfangjw"},"content":"3. User confirms that they want to delete all entries."},{"lineNumber":348,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB deletes all data from the app."},{"lineNumber":349,"author":{"gitId":"-"},"content":""},{"lineNumber":350,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends."},{"lineNumber":351,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":352,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**"},{"lineNumber":353,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":354,"author":{"gitId":"samuelfangjw"},"content":"* 3a. User decides not to delete all entries."},{"lineNumber":355,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":356,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends."},{"lineNumber":357,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":358,"author":{"gitId":"samuelfangjw"},"content":"#### UC5 - Find all persons that take a certain module"},{"lineNumber":359,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":360,"author":{"gitId":"samuelfangjw"},"content":"**MSS**"},{"lineNumber":361,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":362,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to list all persons by modules taken."},{"lineNumber":363,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB lists all entries who have taken the modules."},{"lineNumber":364,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":365,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends."},{"lineNumber":366,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":367,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**"},{"lineNumber":368,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":369,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given modules are invalid"},{"lineNumber":370,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":371,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message."},{"lineNumber":372,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1."},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":375,"author":{"gitId":"samuelfangjw"},"content":"* 2a. The list of persons is empty."},{"lineNumber":376,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":377,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends."},{"lineNumber":378,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":379,"author":{"gitId":"samuelfangjw"},"content":"#### UC6 - Adding or Modifying information about a person"},{"lineNumber":380,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":381,"author":{"gitId":"samuelfangjw"},"content":"**MSS**"},{"lineNumber":382,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":383,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to edit information about a person."},{"lineNumber":384,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB updates entry with new information."},{"lineNumber":385,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":386,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends."},{"lineNumber":387,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":388,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**"},{"lineNumber":389,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":390,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given arguments are invalid."},{"lineNumber":391,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":392,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message."},{"lineNumber":393,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":394,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1."},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"-"},"content":"*{More to be added}*"},{"lineNumber":397,"author":{"gitId":"-"},"content":""},{"lineNumber":398,"author":{"gitId":"-"},"content":"### Non-Functional Requirements"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"lirc572"},"content":"* Technical requirements:"},{"lineNumber":401,"author":{"gitId":"lirc572"},"content":"    * CoLAB should work on any _mainstream OS_ on both 32-bit and 64-bit architectures as long as it has Java `11` or above installed."},{"lineNumber":402,"author":{"gitId":"lirc572"},"content":"    * CoLAB should work under _common screen resolutions_. (i.e. the window should not be out of boundary)"},{"lineNumber":403,"author":{"gitId":"lirc572"},"content":"* Performance requirements:"},{"lineNumber":404,"author":{"gitId":"lirc572"},"content":"    * CoLAB should be able to hold _up to 1000 persons_ without a noticeable sluggishness in performance for typical usage."},{"lineNumber":405,"author":{"gitId":"lirc572"},"content":"    * The response to any command should be shown _within 1 second_."},{"lineNumber":406,"author":{"gitId":"lirc572"},"content":"* Constraints:"},{"lineNumber":407,"author":{"gitId":"lirc572"},"content":"    * CoLAB should be _backward compatible_ with data files produced by earlier versions as much as possible. If one release is not compatible with earlier versions, a migration guide should be provided."},{"lineNumber":408,"author":{"gitId":"lirc572"},"content":"    * CoLAB must be open source under [the MIT License](https://raw.githubusercontent.com/AY2021S2-CS2103T-T11-2/tp/master/LICENSE)."},{"lineNumber":409,"author":{"gitId":"lirc572"},"content":"* Quality requirements:"},{"lineNumber":410,"author":{"gitId":"lirc572"},"content":"    * A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse."},{"lineNumber":411,"author":{"gitId":"lirc572"},"content":"    * A user familiar with CLI tools should find CoLAB commands very intuitive."},{"lineNumber":412,"author":{"gitId":"lirc572"},"content":"    * A user who has no experience with CLI tools should be able to find CoLAB easy to use with the help of the [_User Guide_](UserGuide.md)."},{"lineNumber":413,"author":{"gitId":"lirc572"},"content":"* Process requirements:"},{"lineNumber":414,"author":{"gitId":"lirc572"},"content":"    * the project is expected to adhere to a schedule that delivers a feature set every two weeks."},{"lineNumber":415,"author":{"gitId":"-"},"content":""},{"lineNumber":416,"author":{"gitId":"-"},"content":"### Glossary"},{"lineNumber":417,"author":{"gitId":"-"},"content":""},{"lineNumber":418,"author":{"gitId":"lirc572"},"content":"* **Common screen resolutions**: minimum _640×480_, maximum _3840×2160_"},{"lineNumber":419,"author":{"gitId":"samuelfangjw"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS"},{"lineNumber":420,"author":{"gitId":"samuelfangjw"},"content":"* **MSS**: Main Success Scenario"},{"lineNumber":421,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others"},{"lineNumber":422,"author":{"gitId":"-"},"content":""},{"lineNumber":423,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":424,"author":{"gitId":"-"},"content":""},{"lineNumber":425,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**"},{"lineNumber":426,"author":{"gitId":"-"},"content":""},{"lineNumber":427,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually."},{"lineNumber":428,"author":{"gitId":"-"},"content":""},{"lineNumber":429,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;"},{"lineNumber":430,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing."},{"lineNumber":431,"author":{"gitId":"-"},"content":""},{"lineNumber":432,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":433,"author":{"gitId":"-"},"content":""},{"lineNumber":434,"author":{"gitId":"-"},"content":"### Launch and shutdown"},{"lineNumber":435,"author":{"gitId":"-"},"content":""},{"lineNumber":436,"author":{"gitId":"-"},"content":"1. Initial launch"},{"lineNumber":437,"author":{"gitId":"-"},"content":""},{"lineNumber":438,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder"},{"lineNumber":439,"author":{"gitId":"-"},"content":""},{"lineNumber":440,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum."},{"lineNumber":441,"author":{"gitId":"-"},"content":""},{"lineNumber":442,"author":{"gitId":"-"},"content":"1. Saving window preferences"},{"lineNumber":443,"author":{"gitId":"-"},"content":""},{"lineNumber":444,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window."},{"lineNumber":445,"author":{"gitId":"-"},"content":""},{"lineNumber":446,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e"},{"lineNumber":447,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained."},{"lineNumber":448,"author":{"gitId":"-"},"content":""},{"lineNumber":449,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":450,"author":{"gitId":"-"},"content":""},{"lineNumber":451,"author":{"gitId":"-"},"content":"### Deleting a person"},{"lineNumber":452,"author":{"gitId":"-"},"content":""},{"lineNumber":453,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown"},{"lineNumber":454,"author":{"gitId":"-"},"content":""},{"lineNumber":455,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list."},{"lineNumber":456,"author":{"gitId":"-"},"content":""},{"lineNumber":457,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e"},{"lineNumber":458,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated."},{"lineNumber":459,"author":{"gitId":"-"},"content":""},{"lineNumber":460,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e"},{"lineNumber":461,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same."},{"lineNumber":462,"author":{"gitId":"-"},"content":""},{"lineNumber":463,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e"},{"lineNumber":464,"author":{"gitId":"-"},"content":"       Expected: Similar to previous."},{"lineNumber":465,"author":{"gitId":"-"},"content":""},{"lineNumber":466,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"},{"lineNumber":467,"author":{"gitId":"-"},"content":""},{"lineNumber":468,"author":{"gitId":"-"},"content":"### Saving data"},{"lineNumber":469,"author":{"gitId":"-"},"content":""},{"lineNumber":470,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files"},{"lineNumber":471,"author":{"gitId":"-"},"content":""},{"lineNumber":472,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_"},{"lineNumber":473,"author":{"gitId":"-"},"content":""},{"lineNumber":474,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_"}],"authorContributionMap":{"lirc572":16,"-":349,"samuelfangjw":109}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to keep track of people they have crossed paths with.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your contact management tasks done faster than traditional GUI apps."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"## **Quick start**"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"1. Download the latest `colab.jar` from [here](https://github.com/AY2021S2-CS2103T-T11-2/tp/releases)."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for CoLAB."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`list`** and pressing Enter will list all contacts.\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"   * **`list`** : Lists all contacts."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"   * **`add`**`n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to CoLAB."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * **`delete`**`3` : Deletes the 3rd contact shown in the current list."},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * **`clear`** : Deletes all contacts."},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"## **Features**"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`."},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`."},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc."},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"### Viewing help : `help`"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"Shows a message explaining how to access the help page."},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Format: `help`"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Adding a person: `add`"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"Adds a person to CoLAB."},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**"},{"lineNumber":83,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Listing all persons : `list`"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"Shows a list of all persons in CoLAB."},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"-"},"content":"Format: `list`"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"### Editing a person : `edit` `[coming soon]`"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"Edits an existing person in CoLAB."},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"-"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided."},{"lineNumber":104,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values."},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative."},{"lineNumber":106,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    specifying any tags after it."},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":110,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively."},{"lineNumber":111,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags."},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords."},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`"},{"lineNumber":121,"author":{"gitId":"-"},"content":"* Only the name is searched."},{"lineNumber":122,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search)."},{"lineNumber":124,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Deleting a person : `delete`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book."},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":"Format: `delete INDEX`"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`."},{"lineNumber":138,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list."},{"lineNumber":139,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"-"},"content":"Examples:"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book."},{"lineNumber":143,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command."},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"Clears all entries from CoLAB."},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"-"},"content":"Format: `clear`"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"Exits the program."},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":"Format: `exit`"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"-"},"content":"### Saving the data"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"CoLAB\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually."},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"### Editing the data file"},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"vevek"},"content":"CoLAB\u0027s data is saved as a JSON file `[JAR file location]/data/colab.json`. Advanced users are welcome to update data directly by editing that data file."},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**"},{"lineNumber":166,"author":{"gitId":"vevek"},"content":"If your changes to the data file makes its format invalid, CoLAB will discard all data and start with an empty data file at the next run."},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"### View more details about a person `[coming soon]`"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"Format: `view INDEX`"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"* Shows more details about the person at the specified `INDEX`."},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"* The index refers to the index number shown in the displayed person list."},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"Examples:"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"* `list` followed by `view 2` deletes the 2nd person in the address book."},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"* `find Betsy` followed by `view 1` deletes the 1st person in the results of the `find` command."},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"### Undo/Redo `[coming soon]`"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"_Details coming soon ..._"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"### Archiving data files `[coming soon]`"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"_Details coming soon ..._"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":190,"author":{"gitId":"-"},"content":""},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"## **FAQ**"},{"lineNumber":192,"author":{"gitId":"-"},"content":""},{"lineNumber":193,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":194,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder."},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":197,"author":{"gitId":"-"},"content":""},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"## **Command summary**"},{"lineNumber":199,"author":{"gitId":"-"},"content":""},{"lineNumber":200,"author":{"gitId":"-"},"content":"Action | Format, Examples"},{"lineNumber":201,"author":{"gitId":"-"},"content":"--------|------------------"},{"lineNumber":202,"author":{"gitId":"-"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`"},{"lineNumber":203,"author":{"gitId":"-"},"content":"**Clear** | `clear`"},{"lineNumber":204,"author":{"gitId":"-"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`"},{"lineNumber":205,"author":{"gitId":"-"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`"},{"lineNumber":206,"author":{"gitId":"-"},"content":"**Find** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`"},{"lineNumber":207,"author":{"gitId":"-"},"content":"**List** | `list`"},{"lineNumber":208,"author":{"gitId":"-"},"content":"**Help** | `help`"},{"lineNumber":209,"author":{"gitId":"vevek"},"content":""},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"## **Acknowledgements**"},{"lineNumber":211,"author":{"gitId":"vevek"},"content":""},{"lineNumber":212,"author":{"gitId":"vevek"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org)."}],"authorContributionMap":{"vevek":16,"-":170,"samuelfangjw":26}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"title: CoLAB"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml)"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d2NR2SMZ01E)](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"images/logo.png\"\u003e"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to keep track of people they have crossed paths with.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your contact management tasks done faster than traditional GUI apps."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"What are you waiting for? Start tracking your university life now!"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/Ui.png)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"## Site Map"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"- **[User Guide](UserGuide.md)**"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"- **[Developer Guide](DeveloperGuide.md)**"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"- **[About Us](AboutUs.md)**"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"## Acknowledgements"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"- This application was built upon the AddressBook-Level3 project that was created by the [SE-EDU initiative](https://se-education.org)."},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"- Libraries used:"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    - [JavaFX](https://openjfx.io/)"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    - [Jackson](https://github.com/FasterXML/jackson)"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    - [JUnit5](https://github.com/junit-team/junit5)"}],"authorContributionMap":{"-":12,"samuelfangjw":19}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings."},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable."},{"lineNumber":10,"author":{"gitId":"-"},"content":" */"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final double DEFAULT_HEIGHT \u003d 720;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final double DEFAULT_WIDTH \u003d 1280;"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position."},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position."},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well."},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":77,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/commons/exceptions/DateConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.exceptions;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Represents an error during conversion of date from one format to another."},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public class DateConversionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    public DateConversionException(String message) {"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":10}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":""},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":""},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" * A class for encoding and decoding of Dates."},{"lineNumber":13,"author":{"gitId":"vevek"},"content":" */"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"public class DateUtil {"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":""},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * Encodes a date passed as a String into a LocalDate."},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * @param date Date in the yyyy-mm-dd format."},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate object."},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * @throws DateConversionException Occurs when a date had been passed in with the wrong format."},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static LocalDate encodeDate(String date) throws DateConversionException {"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            return LocalDate.parse(date);"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"            throw new DateConversionException(\"An error occurred while encoding date,\""},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"                    + \" use the yyyy-mm-dd format.\");"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":""},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Decodes a date passed as a LocalDate into a String in the dd MMM yyyy format."},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param date A LocalDate object."},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @return A date String in the dd MMM yyyy format."},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public static String decodeDate(LocalDate date) {"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assert date !\u003d null : \"date should not be null!\";"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":""},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * Decodes a date passed as a LocalDate into a String in the yyyy-MM-dd format."},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * @param date A LocalDate object."},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * @return A date String in the yyyy-MM-dd format."},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    public static String decodeDateForStorage(LocalDate date) {"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        assert date !\u003d null : \"date should not be null!\";"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":53}},{"path":"src/main/java/seedu/address/model/project/CompletableTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Completable;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTaskList {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cCompletable\u003e completableTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a empty {@code CompletableTaskList}."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTaskList() {}"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CompletableTaskList}."},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param completableTasks A list of {@code Tasks}."},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTaskList(List\u003cCompletable\u003e completableTasks) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(completableTasks);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        this.completableTasks.addAll(completableTasks);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cCompletable\u003e getCompletableTasks() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return completableTasks;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof CompletableTaskList // instanceof handles nulls"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 completableTasks.equals(((CompletableTaskList) other).completableTasks)); // state check"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return completableTasks.hashCode();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":46}},{"path":"src/main/java/seedu/address/model/project/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class EventList {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code EventList}."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public EventList () {}"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code EventList}."},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param events A list of {@code Event}."},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public EventList (List\u003cEvent\u003e events) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(events);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        this.events.addAll(events);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cEvent\u003e getEvents() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return events;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof EventList // instanceof handles nulls"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 events.equals(((EventList) other).events)); // state check"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return events.hashCode();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":46}},{"path":"src/main/java/seedu/address/model/project/ParticipantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ParticipantList {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code ParticipantList}."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList() {}"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ParticipantList}."},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param participants A list of {@code Person}."},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList(List\u003cPerson\u003e participants) {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(participants);"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        this.participants.addAll(participants);"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public List\u003cPerson\u003e getParticipants() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return participants;"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ParticipantList // instanceof handles nulls"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 participants.equals(((ParticipantList) other).participants)); // state check"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return participants.hashCode();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":46}},{"path":"src/main/java/seedu/address/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Completable;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Project in the address book."},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Guarantees: details are present and not null, field values are validated, immutable."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class Project {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    // Identity fields"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectName projectName;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    // Data fields"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final EventList events;"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final CompletableTaskList completableTasks;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final ParticipantList participants;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code Project}."},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Every field must be present and not null."},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public Project(ProjectName projectName) {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projectName);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        this.events \u003d new EventList();"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        this.completableTasks \u003d new CompletableTaskList();"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        this.participants \u003d new ParticipantList();"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code Project}"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Every field must be present and not null."},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public Project(ProjectName projectName, EventList events, CompletableTaskList completableTasks,"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                   ParticipantList participants) {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projectName, events, completableTasks, participants);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this.events \u003d events;"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        this.completableTasks \u003d completableTasks;"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        this.participants \u003d participants;"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName getProjectName() {"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public EventList getEvents() {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return events;"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTaskList getCompletableTasks() {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return completableTasks;"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList getParticipants() {"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return participants;"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if both projects have the same name."},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * This defines a weaker notion of equality between two projects."},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public boolean isSameProject(Project otherProject) {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        if (otherProject \u003d\u003d this) {"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            return true;"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        return otherProject !\u003d null"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getProjectName().equals(getProjectName());"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if both projects have the same identity and data fields."},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     * This defines a stronger notion of equality between two projects."},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            return true;"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof Project)) {"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"            return false;"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        Project otherProject \u003d (Project) other;"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        return otherProject.getProjectName().equals(getProjectName())"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getEvents().equals(getEvents())"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getCompletableTasks().equals(getCompletableTasks())"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getParticipants().equals(getParticipants());"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(projectName, events, completableTasks, participants);"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        final StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        builder.append(getProjectName());"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cEvent\u003e events \u003d getEvents().getEvents();"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        if (!events.isEmpty()) {"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"            builder.append(\"; Events: \");"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"            events.forEach(builder::append);"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cCompletable\u003e completableTasks \u003d getCompletableTasks().getCompletableTasks();"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        if (!completableTasks.isEmpty()) {"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"            builder.append(\"; Completable Tasks: \");"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"            completableTasks.forEach(builder::append);"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cPerson\u003e participants \u003d getParticipants().getParticipants();"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        if (!participants.isEmpty()) {"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"            builder.append(\"; Participants: \");"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"            participants.forEach(builder::append);"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        return builder.toString();"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":133}},{"path":"src/main/java/seedu/address/model/project/ProjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Project\u0027s name in the address book."},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectName(String)}"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectName {"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"            \"Project name should only contain alphanumeric characters and spaces, and it should not be blank\";"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * The first character of the address must not be a whitespace,"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public final String projectName;"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectName}."},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @param name A valid project name."},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName(String name) {"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(name);"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        checkArgument(isValidProjectName(name), MESSAGE_CONSTRAINTS);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d name;"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if a given string is a valid project name."},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static boolean isValidProjectName(String test) {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return test.matches(VALIDATION_REGEX);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ProjectName // instanceof handles nulls"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projectName.equals(((ProjectName) other).projectName)); // state check"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return projectName.hashCode();"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/main/java/seedu/address/model/project/UniqueProjectList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Iterator;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.ProjectNotFoundException;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * A list of projects that enforces uniqueness between its elements and does not allow nulls."},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * A project is considered unique by comparing using {@code Project#isSameProject(Project)}. As such, adding and"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * updating of projects uses Project#isSameProject(Project) for equality so as to ensure that the project being added"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * or updated is unique in terms of identity in the UniqueProjectList. However, the removal of a project uses"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * Project#equals(Object) so as to ensure that the project with exactly the same fields will be removed."},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" *"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" * Supports a minimal set of list operations."},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":" *"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * @see Project#isSameProject(Project)"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"public class UniqueProjectList implements Iterable\u003cProject\u003e {"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e internalList \u003d FXCollections.observableArrayList();"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e internalUnmodifiableList \u003d"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            FXCollections.unmodifiableObservableList(internalList);"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if the list contains an equivalent project as the given argument."},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public boolean contains(Project toCheck) {"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toCheck);"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProject);"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a project to the list."},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * The project must not already exist in the list."},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public void add(Project toAdd) {"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toAdd);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        if (contains(toAdd)) {"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        internalList.add(toAdd);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the project {@code target} in the list with {@code editedProject}."},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the list."},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in the list."},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(target, editedProject);"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        int index \u003d internalList.indexOf(target);"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        if (index \u003d\u003d -1) {"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            throw new ProjectNotFoundException();"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        if (!target.isSameProject(editedProject) \u0026\u0026 contains(editedProject)) {"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        internalList.set(index, editedProject);"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * Removes the equivalent project from the list."},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * The project must exist in the list."},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    public void remove(Project toRemove) {"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toRemove);"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        if (!internalList.remove(toRemove)) {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            throw new ProjectNotFoundException();"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(UniqueProjectList replacement) {"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(replacement);"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        internalList.setAll(replacement.internalList);"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the contents of this list with {@code projects}."},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * {@code projects} must not contain duplicate projects."},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(List\u003cProject\u003e projects) {"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projects);"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        if (!projectsAreUnique(projects)) {"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        internalList.setAll(projects);"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}."},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e asUnmodifiableObservableList() {"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        return internalUnmodifiableList;"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    public Iterator\u003cProject\u003e iterator() {"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.iterator();"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof UniqueProjectList // instanceof handles nulls"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 internalList.equals(((UniqueProjectList) other).internalList));"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    @Override"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.hashCode();"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if {@code projects} contains only unique projects."},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    private boolean projectsAreUnique(List\u003cProject\u003e projects) {"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        for (int i \u003d 0; i \u003c projects.size() - 1; i++) {"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            for (int j \u003d i + 1; j \u003c projects.size(); j++) {"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                if (projects.get(i).isSameProject(projects.get(j))) {"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                    return false;"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        return true;"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":142}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateProjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation will result in duplicate Projects (Projects are considered duplicates if they have the"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" * same identity)."},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"public class DuplicateProjectException extends RuntimeException {"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    public DuplicateProjectException() {"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Operation would result in duplicate projects\");"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":11}},{"path":"src/main/java/seedu/address/model/project/exceptions/ProjectNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation is unable to find the specified project."},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNotFoundException extends RuntimeException {}"}],"authorContributionMap":{"samuelfangjw":6}},{"path":"src/main/java/seedu/address/model/task/Completable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":""},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"public abstract class Completable {"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":""},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \""},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":""},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    /*"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":""},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    protected String description;"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":""},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * Constructor for Completable."},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Completable."},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public Completable(String description) {"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":""},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Constructor for Completable."},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Completable."},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Completable is Done."},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public Completable(String description, Boolean isDone) {"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, isDone);"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":""},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * Returns a status icon dependent on the status of the Completable."},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * @return A string representing the Completable\u0027s status."},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    public String getStatusIcon() {"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        assert isDone !\u003d null;"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":""},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * Returns the Completable description."},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     * @return A String representing the Completable description."},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public String getDescription() {"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        return this.description;"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":""},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     * Returns the status of the Completable."},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the Completable\u0027s status."},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        return this.isDone;"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":""},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     * Marks the task as done."},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":""},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid email."},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":""},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Completable is equal to another Object."},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with."},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false."},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":""},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":""},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Completable."},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Completable."},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"    public abstract String toString();"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":102}},{"path":"src/main/java/seedu/address/model/task/Interval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Recognised Intervals of Interval."},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public enum Interval {"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    NONE,"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"    DAILY,"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    WEEKLY,"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"    FORTNIGHTLY,"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"    MONTHLY,"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    YEARLY,"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":13}},{"path":"src/main/java/seedu/address/model/task/Repeatable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":""},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":""},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"public abstract class Repeatable {"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":""},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":""},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input."},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":""},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    protected String description;"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    protected Interval interval;"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    protected LocalDate at;"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":""},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable."},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable."},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    public Repeatable(String description, Interval interval, LocalDate at) {"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, interval, at);"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        this.interval \u003d interval;"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        this.at \u003d at;"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":""},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable."},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable."},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Repeatable is Done."},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public Repeatable(String description, Interval interval, LocalDate at, Boolean isDone) {"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, interval, at, isDone);"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        this.interval \u003d interval;"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        this.at \u003d at;"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":""},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Returns a status icon dependent on the status of the Repeatable."},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * @return A string representing the Repeatable\u0027s status."},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public String getStatusIcon() {"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        assert isDone !\u003d null;"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":""},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"     * Returns the Repeatable description."},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"     * @return A String representing the Repeatable description."},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    public String getDescription() {"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return this.description;"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":""},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"     * Returns the status of the Repeatable."},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the Repeatable\u0027s status."},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        return this.isDone;"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":""},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     * Returns the date of the Repeatable."},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate representing the Repeatable\u0027s date."},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"    public LocalDate getAt() {"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        assert this.at !\u003d null : \"at should not be null!\";"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        return this.at;"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":""},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     * Marks the task as done."},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":""},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"     * Returns the Repeatable\u0027s interval."},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"     * @return Interval interval."},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"    public abstract Interval getRecurrence();"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":""},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"     * Sets the Repeatable\u0027s interval to specified level."},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"     * @param interval Level of Interval."},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"    public abstract void setRecurrence(Interval interval);"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":""},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid description."},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":""},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Repeatable is equal to another Object."},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with."},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false."},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":""},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":""},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Repeatable."},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Repeatable."},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"    public abstract String toString();"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":130}},{"path":"src/main/java/seedu/address/model/task/completable/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.completable;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":""},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":""},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Completable;"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" * Represents a Completable with a Deadline."},{"lineNumber":13,"author":{"gitId":"vevek"},"content":" */"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"public class Deadline extends Completable {"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    protected LocalDate by;"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":""},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * Constructor for Deadline."},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Completable."},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the Completable."},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        super(description);"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        requireNonNull(by);"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        this.by \u003d by;"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":""},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     * Constructor for Deadline."},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Completable."},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Completable is Done."},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the Completable."},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public Deadline(String description, Boolean isDone, LocalDate by) {"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        super(description, isDone);"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        requireNonNull(by);"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.by \u003d by;"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":""},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     * Returns the Deadline of the Completable."},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate representing the Completable Deadline."},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public LocalDate getBy() {"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assert this.by !\u003d null : \"by should not be null!\";"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        return this.by;"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":""},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Deadline is equal to another Object."},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with."},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false."},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"            return true;"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":""},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Deadline)) {"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":""},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        Deadline otherDeadline \u003d (Deadline) other;"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        return otherDeadline.getDescription().equals(getDescription())"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherDeadline.getIsDone().equals(getIsDone())"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherDeadline.getBy().equals(getBy());"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":""},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    public int hashCode() {"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone, by);"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":""},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Completable."},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Completable."},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"    public String toString() {"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"        return \"[D]\" + this.getStatusIcon() + \" \" + this.description + \" (by: \" + DateUtil.decodeDate(by) + \")\";"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":84}},{"path":"src/main/java/seedu/address/model/task/completable/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.completable;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":""},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Completable;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":""},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":" * Represents a Completable as a Todo."},{"lineNumber":9,"author":{"gitId":"vevek"},"content":" */"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"public class Todo extends Completable {"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":""},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"     * Constructor for Todo."},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Todo."},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public Todo(String description) {"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":""},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Constructor for Todo."},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Todo."},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Todo is Done."},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public Todo(String description, Boolean isDone) {"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        super(description, isDone);"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":""},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Todo is equal to another Object."},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with."},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false."},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            return true;"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":""},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Todo)) {"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"            return false;"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":""},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        Todo otherTodo \u003d (Todo) other;"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        return otherTodo.getDescription().equals(getDescription())"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherTodo.getIsDone().equals(getIsDone());"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":""},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    public int hashCode() {"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone);"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":""},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Completable."},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Completable."},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    public String toString() {"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + this.description;"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":63}},{"path":"src/main/java/seedu/address/model/task/repeatable/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.repeatable;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.util.Objects;"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":""},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Interval;"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Repeatable;"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":""},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" * Represents a Repeatable as an Event."},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" */"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"public class Event extends Repeatable {"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":""},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     * Constructor for Event."},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Event."},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * @param at Date of the Event."},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public Event(String description, Interval interval, LocalDate at) {"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        super(description, interval, at);"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":""},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * Constructor for Event."},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Event."},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Event is Done."},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * @param at Date of the Event."},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public Event(String description, Interval interval, Boolean isDone, LocalDate at) {"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        super(description, interval, at, isDone);"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":""},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * Returns the Event\u0027s interval."},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * @return Interval interval."},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public Interval getRecurrence() {"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        return this.interval;"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":""},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * Sets the Event\u0027s interval to specified level."},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * @param interval Level of Interval."},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    public void setRecurrence(Interval interval) {"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        assert interval !\u003d null;"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        this.interval \u003d interval;"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":""},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Event is equal to another Object."},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with."},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false."},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"            return true;"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":""},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Event)) {"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"            return false;"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":""},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Event otherEvent \u003d (Event) other;"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        return otherEvent.getDescription().equals(getDescription())"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherEvent.getIsDone().equals(getIsDone());"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":""},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    public int hashCode() {"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone, at);"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":""},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Event."},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Event."},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"    public String toString() {"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + this.description + \" (at: \" + DateUtil.decodeDate(at) + \")\";"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":85}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html\";"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow."},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow."},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow."},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window."},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread."},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing."},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage."},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing."},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown."},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window."},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"-"},"content":""},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard."},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":101,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.awt.Taskbar;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.awt.image.BufferedImage;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javax.imageio.ImageIO;"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The manager of the UI component."},{"lineNumber":21,"author":{"gitId":"-"},"content":" */"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/colab_icon_500.png\";"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Logic logic;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}."},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        // Set the application icon"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        // Set taskbar icon for macOS"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        if (Taskbar.isTaskbarSupported()) {"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            BufferedImage applicationIcon \u003d getBufferedImage(ICON_APPLICATION);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            Taskbar taskbar \u003d Taskbar.getTaskbar();"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            if (taskbar.isSupported(Taskbar.Feature.ICON_IMAGE) \u0026\u0026 applicationIcon !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                Taskbar.getTaskbar().setIconImage(applicationIcon);"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // Set up main window"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            mainWindow.show(); // This should be called before creating other UI parts"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":""},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    private BufferedImage getBufferedImage(String imagePath) {"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"            BufferedImage iconApplication \u003d ImageIO.read(getClass().getResource(imagePath));"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            return iconApplication;"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(StringUtil.getDetails(e));"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            return null;"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":81,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters."},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog."},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                                               String contentText) {"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        alert.setTitle(title);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        alert.showAndWait();"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog."},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Platform.exit();"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        System.exit(1);"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":86,"samuelfangjw":26}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".root {"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_PRIMARY: #161616;"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_PRIMARY_LIGHT: #252525;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_ACCENT: #3d187a;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL: derive(-COLOR_PRIMARY_LIGHT, 25%);"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL_ODD: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL_EVEN: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL_SELECTED: -COLOR_ACCENT;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":".background {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    background-color: -COLOR_PRIMARY_LIGHT; /* Used in the default.html file */"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":".label {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":".label-bright {"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":".label-header {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}"},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":".text-field {"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"-"},"content":".table-view {"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    -fx-base: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    -fx-control-inner-background: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    -fx-padding: 5;"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":".table-view .column-header-background {"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-size: 35;"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent transparent derive(-fx-base, 80%) transparent;"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"-"},"content":".table-view .column-header .label {"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":".split-pane:vertical .split-pane-divider {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}"},{"lineNumber":89,"author":{"gitId":"-"},"content":""},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5;"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}"},{"lineNumber":95,"author":{"gitId":"-"},"content":""},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 2 2 2 2;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}"},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL_EVEN;"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL_ODD;"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":".list-cell:filled:selected #cardPane {"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL_SELECTED;"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_CELL_SELECTED;"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 1;"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":".list-cell:filled:selected #tags .label {"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_CELL;"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}"},{"lineNumber":121,"author":{"gitId":"-"},"content":""},{"lineNumber":122,"author":{"gitId":"-"},"content":".list-cell .label {"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":".cell_big_label {"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}"},{"lineNumber":131,"author":{"gitId":"-"},"content":""},{"lineNumber":132,"author":{"gitId":"-"},"content":".cell_small_label {"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":".stack-pane {"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"},{"lineNumber":141,"author":{"gitId":"-"},"content":""},{"lineNumber":142,"author":{"gitId":"-"},"content":".pane-with-border {"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 15px;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":".pane-with-border-and-tab {"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 0px 15px 15px 15px;"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}"},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":".status-bar {"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":".tab {"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0.0 1.0;"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 5px 20px;"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 15px 15px 0 0;"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":".tab .tab-label {"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: CENTER;"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 16px;"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .focus-indicator {"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .tab-label {"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_ACCENT;"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 3px 0;"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-insets: -8px;"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":".tab:selected {"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 3px 0;"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab-header-background {"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0;"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area {"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 0 0;"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":".tab-pane {"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 10px 10px 10px 0;"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    -border-width: 0;"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":".result-display {"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}"},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"-"},"content":".result-display .label {"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"-"},"content":".status-bar .label {"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}"},{"lineNumber":219,"author":{"gitId":"-"},"content":""},{"lineNumber":220,"author":{"gitId":"-"},"content":".status-bar-with-border {"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_PRIMARY;"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0.8;"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}"},{"lineNumber":226,"author":{"gitId":"-"},"content":""},{"lineNumber":227,"author":{"gitId":"-"},"content":".status-bar-with-border .label {"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}"},{"lineNumber":230,"author":{"gitId":"-"},"content":""},{"lineNumber":231,"author":{"gitId":"-"},"content":".grid-pane {"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}"},{"lineNumber":236,"author":{"gitId":"-"},"content":""},{"lineNumber":237,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":239,"author":{"gitId":"-"},"content":"}"},{"lineNumber":240,"author":{"gitId":"-"},"content":""},{"lineNumber":241,"author":{"gitId":"-"},"content":".context-menu {"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":".context-menu .label {"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"-"},"content":".menu-bar {"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}"},{"lineNumber":252,"author":{"gitId":"-"},"content":""},{"lineNumber":253,"author":{"gitId":"-"},"content":".menu-bar .label {"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":".menu:hover,"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":".menu:showing,"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":".menu-item:focused {"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"}"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":266,"author":{"gitId":"-"},"content":".menu .left-container {"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: black;"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}"},{"lineNumber":269,"author":{"gitId":"-"},"content":""},{"lineNumber":270,"author":{"gitId":"-"},"content":"/*"},{"lineNumber":271,"author":{"gitId":"-"},"content":" * Metro style Push Button"},{"lineNumber":272,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira"},{"lineNumber":273,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/"},{"lineNumber":274,"author":{"gitId":"-"},"content":" */"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":276,"author":{"gitId":"-"},"content":".button {"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_ACCENT;"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}"},{"lineNumber":287,"author":{"gitId":"-"},"content":""},{"lineNumber":288,"author":{"gitId":"-"},"content":".button:hover {"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}"},{"lineNumber":291,"author":{"gitId":"-"},"content":""},{"lineNumber":292,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: white;"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}"},{"lineNumber":296,"author":{"gitId":"-"},"content":""},{"lineNumber":297,"author":{"gitId":"-"},"content":".button:focused {"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}"},{"lineNumber":304,"author":{"gitId":"-"},"content":""},{"lineNumber":305,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}"},{"lineNumber":310,"author":{"gitId":"-"},"content":""},{"lineNumber":311,"author":{"gitId":"-"},"content":".button:default {"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;"},{"lineNumber":314,"author":{"gitId":"-"},"content":"}"},{"lineNumber":315,"author":{"gitId":"-"},"content":""},{"lineNumber":316,"author":{"gitId":"-"},"content":".button:default:hover {"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}"},{"lineNumber":319,"author":{"gitId":"-"},"content":""},{"lineNumber":320,"author":{"gitId":"-"},"content":".dialog-pane {"},{"lineNumber":321,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}"},{"lineNumber":323,"author":{"gitId":"-"},"content":""},{"lineNumber":324,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {"},{"lineNumber":325,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":326,"author":{"gitId":"-"},"content":"}"},{"lineNumber":327,"author":{"gitId":"-"},"content":""},{"lineNumber":328,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}"},{"lineNumber":333,"author":{"gitId":"-"},"content":""},{"lineNumber":334,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {"},{"lineNumber":335,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY;"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}"},{"lineNumber":337,"author":{"gitId":"-"},"content":""},{"lineNumber":338,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-fill: white;"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}"},{"lineNumber":344,"author":{"gitId":"-"},"content":""},{"lineNumber":345,"author":{"gitId":"-"},"content":".scroll-bar {"},{"lineNumber":346,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: derive(-COLOR_PRIMARY_LIGHT, 20%);"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}"},{"lineNumber":348,"author":{"gitId":"-"},"content":""},{"lineNumber":349,"author":{"gitId":"-"},"content":".scroll-bar .thumb {"},{"lineNumber":350,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: derive(-COLOR_PRIMARY_LIGHT, 50%);"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}"},{"lineNumber":353,"author":{"gitId":"-"},"content":""},{"lineNumber":354,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;"},{"lineNumber":357,"author":{"gitId":"-"},"content":"}"},{"lineNumber":358,"author":{"gitId":"-"},"content":""},{"lineNumber":359,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}"},{"lineNumber":362,"author":{"gitId":"-"},"content":""},{"lineNumber":363,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}"},{"lineNumber":366,"author":{"gitId":"-"},"content":""},{"lineNumber":367,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;"},{"lineNumber":369,"author":{"gitId":"-"},"content":"}"},{"lineNumber":370,"author":{"gitId":"-"},"content":""},{"lineNumber":371,"author":{"gitId":"-"},"content":"#cardPane {"},{"lineNumber":372,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;"},{"lineNumber":374,"author":{"gitId":"-"},"content":"}"},{"lineNumber":375,"author":{"gitId":"-"},"content":""},{"lineNumber":376,"author":{"gitId":"-"},"content":"#commandTypeLabel {"},{"lineNumber":377,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;"},{"lineNumber":378,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: #f70d1a;"},{"lineNumber":379,"author":{"gitId":"-"},"content":"}"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"-"},"content":"#commandTextField {"},{"lineNumber":382,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":383,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;"},{"lineNumber":384,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_PRIMARY_LIGHT -COLOR_PRIMARY_LIGHT white -COLOR_PRIMARY_LIGHT;"},{"lineNumber":385,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";"},{"lineNumber":388,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;"},{"lineNumber":389,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":390,"author":{"gitId":"-"},"content":"}"},{"lineNumber":391,"author":{"gitId":"-"},"content":""},{"lineNumber":392,"author":{"gitId":"samuelfangjw"},"content":"#filterField, #personListPanel, #projectList #personWebpage {"},{"lineNumber":393,"author":{"gitId":"samuelfangjw"},"content":"    -fx-effect: innershadow(gaussian, -COLOR_PRIMARY, 10, 0, 0, 0);"},{"lineNumber":394,"author":{"gitId":"-"},"content":"}"},{"lineNumber":395,"author":{"gitId":"-"},"content":""},{"lineNumber":396,"author":{"gitId":"samuelfangjw"},"content":"#personListView, #projectListView {"},{"lineNumber":397,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_PRIMARY_LIGHT;"},{"lineNumber":398,"author":{"gitId":"-"},"content":"}"},{"lineNumber":399,"author":{"gitId":"-"},"content":""},{"lineNumber":400,"author":{"gitId":"-"},"content":"#resultDisplay .content {"},{"lineNumber":401,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent, -COLOR_PRIMARY_LIGHT, transparent, -COLOR_PRIMARY_LIGHT;"},{"lineNumber":402,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;"},{"lineNumber":403,"author":{"gitId":"-"},"content":"}"},{"lineNumber":404,"author":{"gitId":"-"},"content":""},{"lineNumber":405,"author":{"gitId":"-"},"content":"#tags {"},{"lineNumber":406,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;"},{"lineNumber":407,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;"},{"lineNumber":408,"author":{"gitId":"-"},"content":"}"},{"lineNumber":409,"author":{"gitId":"-"},"content":""},{"lineNumber":410,"author":{"gitId":"-"},"content":"#tags .label {"},{"lineNumber":411,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":412,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;"},{"lineNumber":413,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;"},{"lineNumber":414,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;"},{"lineNumber":415,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;"},{"lineNumber":416,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;"},{"lineNumber":417,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":296,"samuelfangjw":121}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".error {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":".list-cell:empty {"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background: transparent;"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":".tag-selector {"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-color: white;"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":".tooltip-text {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":".info-display {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-image: url(\"../images/logo_no_background.png\");"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-repeat: no-repeat;"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-size: contain;"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-position: center center;"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"-":18,"samuelfangjw":8}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.Scene?\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\"/\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\"/\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/children\u003e"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"-":37,"samuelfangjw":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.lang.String?\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Tab?\u003e"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.Scene?\u003e"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.stage.Stage?\u003e"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"\u003cfx:root maxHeight\u003d\"2160.0\" maxWidth\u003d\"3840.0\" minHeight\u003d\"480\" minWidth\u003d\"680\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CoLAB\""},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cicons\u003e"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \u003cImage url\u003d\"@/images/colab_icon_500.png\"/\u003e"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  \u003cscene\u003e"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \u003cScene\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\"/\u003e"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox minHeight\u003d\"480.0\" minWidth\u003d\"640.0\"\u003e"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        \u003cSplitPane dividerPositions\u003d\"0.5\" VBox.vgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"          \u003citems\u003e"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"            \u003cSplitPane dividerPositions\u003d\"0.15\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"200.0\" prefWidth\u003d\"160.0\"\u003e"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"              \u003citems\u003e"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\"\u003e"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u003c/StackPane\u003e"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                \u003cVBox fx:id\u003d\"infoDisplay\" minHeight\u003d\"100.0\"\u003e"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                  \u003cstyleClass\u003e"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cString fx:value\u003d\"pane-with-border\"/\u003e"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cString fx:value\u003d\"info-display\"/\u003e"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"                  \u003c/styleClass\u003e"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                  \u003cpadding\u003e"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                  \u003c/padding\u003e"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/VBox\u003e"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/items\u003e"},{"lineNumber":63,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" top\u003d\"10.0\"/\u003e"},{"lineNumber":65,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/SplitPane\u003e"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            \u003cTabPane tabClosingPolicy\u003d\"UNAVAILABLE\" minWidth\u003d\"200.0\"\u003e"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"              \u003ctabs\u003e"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                \u003cTab text\u003d\"Projects\"\u003e"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                  \u003ccontent\u003e"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cVBox fx:id\u003d\"projectList\" styleClass\u003d\"pane-with-border-and-tab\"\u003e"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                      \u003cStackPane fx:id\u003d\"projectListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"                      \u003cpadding\u003e"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\"/\u003e"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                      \u003c/padding\u003e"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"                    \u003c/VBox\u003e"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                  \u003c/content\u003e"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/Tab\u003e"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                \u003cTab text\u003d\"Contacts\"\u003e"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"                  \u003ccontent\u003e"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                    \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border-and-tab\"\u003e"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                      \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                      \u003cpadding\u003e"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                        \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"20.0\"/\u003e"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                      \u003c/padding\u003e"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                    \u003c/VBox\u003e"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"                  \u003c/content\u003e"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                \u003c/Tab\u003e"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/tabs\u003e"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/TabPane\u003e"},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/items\u003e"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/SplitPane\u003e"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        \u003cStackPane\u003e"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"          \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"            \u003cpadding\u003e"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"              \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/padding\u003e"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/StackPane\u003e"},{"lineNumber":102,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/StackPane\u003e"},{"lineNumber":106,"author":{"gitId":"-"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e"},{"lineNumber":108,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"-":52,"samuelfangjw":59}},{"path":"src/main/resources/view/ProjectListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"          \u003cminWidth\u003e"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/minWidth\u003e"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"/\u003e"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e"}],"authorContributionMap":{"samuelfangjw":36}},{"path":"src/main/resources/view/ProjectListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ListView?\u003e"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cListView fx:id\u003d\"projectListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e"}],"authorContributionMap":{"samuelfangjw":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e"}],"authorContributionMap":{"-":6,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/commons/util/DateUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":""},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":""},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":""},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"public class DateUtilTest {"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":""},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    public void encodeDate_invalidDate_throwsDateConversionException() {"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"        String invalidDate \u003d \"209-01-01\";"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"        String invalidDate1 \u003d \"20090101\";"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        String invalidDate2 \u003d \"01-01-2001\";"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"        String invalidDate3 \u003d \"a\";"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"        String invalidDate4 \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        String invalidDate5 \u003d \" \";"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":""},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate));"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate1));"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate2));"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate3));"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate4));"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate5));"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":""},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void decodeDate_invalidDate_throwsDateConversionException() {"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        LocalDate invalidDate \u003d null;"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.decodeDate(invalidDate));"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":""},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public void decodeDateForStorage_invalidDate_throwsDateConversionException() {"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        LocalDate invalidDate \u003d null;"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.decodeDateForStorage(invalidDate));"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":41}},{"path":"src/test/java/seedu/address/model/project/CompletableTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Completable;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.completable.Todo;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTaskListTest {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_empty_createEmptyCompletableTaskList() {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTaskList emptyCompletableTaskList \u003d new CompletableTaskList();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyCompletableTaskList.getCompletableTasks().isEmpty());"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CompletableTaskList(null));"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_singleCompletableTask_valid() {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        Completable completable \u003d new Todo(\"Test Description\");"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cCompletable\u003e completables \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        completables.add(completable);"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new CompletableTaskList(completables));"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public void getCompletableTasks_validCompletableTaskList_equalsOriginalList() {"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        Completable completable \u003d new Todo(\"Test Description\");"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cCompletable\u003e completables \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        completables.add(completable);"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTaskList completableTaskList \u003d new CompletableTaskList(completables);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(completables, completableTaskList.getCompletableTasks());"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":44}},{"path":"src/test/java/seedu/address/model/project/EventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class EventListTest {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_empty_createEmptyEventList() {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        EventList emptyEventList \u003d new EventList();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyEventList.getEvents().isEmpty());"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventList(null));"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_singleEvent_success() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new Event(\"Test Event\", Interval.NONE, LocalDate.of(2020, 1, 1));"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new EventList(events));"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public void getEvent_validEvent_equalsOriginalList() {"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new Event(\"Test Event\", Interval.NONE, LocalDate.of(2020, 1, 1));"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList(events);"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(events, eventList.getEvents());"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":45}},{"path":"src/test/java/seedu/address/model/project/ParticipantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class ParticipantListTest {"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_empty_createEmptyParticipantList() {"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList emptyParticipantList \u003d new ParticipantList();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyParticipantList.getParticipants().isEmpty());"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ParticipantList(null));"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_singleParticipant_success() {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        participants.add(ALICE);"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new ParticipantList(participants));"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public void getPaticipants_validParticipantsList_equalsOriginalList() {"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        participants.add(ALICE);"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(participants, participantList.getParticipants());"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":43}},{"path":"src/test/java/seedu/address/model/project/ProjectNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameTest {"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectName(null));"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_invalidProjectName_throwsIllegalArgumentException() {"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        String invalidProjectName \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectName(invalidProjectName));"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void isValidProjectName() {"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // null name"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectName.isValidProjectName(null));"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // invalid name"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"\")); // empty string"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\" \")); // spaces only"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"^\")); // only non-alphanumeric characters"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"cs1101s*\")); // contains non-alphanumeric characters"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // valid name"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"school project\")); // alphabets only"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"12345\")); // numbers only"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"cs2103t project\")); // alphanumeric characters"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"CS2103T Project\")); // with capital letters"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"School summer orbital project with long name\")); // long names"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":40}},{"path":"src/test/java/seedu/address/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.CS1101S;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.CS2103T_PROJECT;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Completable;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.completable.Todo;"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectTest {"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public void isSameProject() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(CS1101S.isSameProject(CS1101S));"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(CS1101S.isSameProject(null));"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_emptyProjectWithName_isValid() {"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName name \u003d new ProjectName(\"Test Project\");"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new Project(name));"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_projectWithParameters_isValid() {"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName name \u003d new ProjectName(\"Test Project\");"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new Event(\"Test Event\", Interval.NONE, LocalDate.of(2020, 1, 1));"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList(events);"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        Completable completable \u003d new Todo(\"Test Description\");"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cCompletable\u003e completables \u003d new ArrayList\u003c\u003e();"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        completables.add(completable);"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTaskList completableTaskList \u003d new CompletableTaskList(completables);"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        participants.add(ALICE);"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new Project(name, eventList, completableTaskList, participantList));"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(CS1101S.equals(CS1101S));"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(CS1101S.equals(null));"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(CS1101S.equals(5));"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        // different project -\u003e returns false"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(CS1101S.equals(CS2103T_PROJECT));"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":73}},{"path":"src/test/java/seedu/address/model/project/UniqueProjectListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.CS1101S;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.CS2103T_PROJECT;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.ProjectNotFoundException;"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class UniqueProjectListTest {"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final UniqueProjectList uniqueProjectList \u003d new UniqueProjectList();"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_nullProject_throwsNullPointerException() {"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.contains(null));"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_projectNotInList_returnsFalse() {"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(uniqueProjectList.contains(CS1101S));"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_projectInList_returnsTrue() {"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(CS1101S);"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(uniqueProjectList.contains(CS1101S));"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public void add_nullProject_throwsNullPointerException() {"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.add(null));"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public void add_duplicateProject_throwsDuplicateProjectException() {"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(CS1101S);"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.add(CS1101S));"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_nullTargetProject_throwsNullPointerException() {"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(null, CS1101S));"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_nullEditedProject_throwsNullPointerException() {"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(CS1101S, null));"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_targetProjectNotInList_throwsProjectNotFoundException() {"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.setProject(CS1101S, CS1101S));"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_editedProjectIsSameProject_success() {"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(CS1101S);"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProject(CS1101S, CS1101S);"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(CS1101S);"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_nullProject_throwsNullPointerException() {"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.remove(null));"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_projectDoesNotExist_throwsProjectNotFoundException() {"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.remove(CS1101S));"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_existingProject_removesProject() {"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(CS1101S);"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.remove(CS1101S);"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_nullUniqueProjectList_throwsNullPointerException() {"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((UniqueProjectList) null));"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_uniqueProjectList_replacesOwnListWithProvidedUniqueProjectList() {"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(CS1101S);"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(CS2103T_PROJECT);"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProjects(expectedUniqueProjectList);"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_nullList_throwsNullPointerException() {"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((List\u003cProject\u003e) null));"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_list_replacesOwnListWithProvidedList() {"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(CS1101S);"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e projectList \u003d Collections.singletonList(CS2103T_PROJECT);"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProjects(projectList);"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(CS2103T_PROJECT);"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_listWithDuplicateProjects_throwsDuplicateProjectException() {"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e listWithDuplicateProjects \u003d Arrays.asList(CS1101S, CS1101S);"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProjects(listWithDuplicateProjects));"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    @Test"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, ()"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"            -\u003e uniqueProjectList.asUnmodifiableObservableList().remove(0));"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":132}},{"path":"src/test/java/seedu/address/model/task/completable/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.completable;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":""},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":""},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"public class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":""},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null, validDate));"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", null));"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null, false, validDate));"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", null, validDate));"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", false, null));"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":""},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription, validDate));"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription, false, validDate));"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription2, validDate));"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription2, false, validDate));"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":""},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        // null description"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDescription(null));"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":""},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        // invalid description"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\"\")); // empty string"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\" \")); // spaces only"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":""},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        // valid description"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Blk 456, Den Road, #01-355\"));"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"-\")); // one character"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":48}},{"path":"src/test/java/seedu/address/model/task/completable/TodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.completable;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":""},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":""},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"public class TodoTest {"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(null));"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(null, null));"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(\"test\", null));"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":""},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription));"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription, false));"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription2));"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription2, false));"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":""},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        // null description"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Todo.isValidDescription(null));"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":""},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        // invalid description"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        assertFalse(Todo.isValidDescription(\"\")); // empty string"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertFalse(Todo.isValidDescription(\" \")); // spaces only"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":""},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        // valid description"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"Blk 456, Den Road, #01-355\"));"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"-\")); // one character"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":42}},{"path":"src/test/java/seedu/address/model/task/repeatable/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.repeatable;"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":""},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":""},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":""},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":""},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Interval;"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.completable.Deadline;"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":""},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"public class EventTest {"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":""},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"        Interval interval \u003d Interval.DAILY;"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, interval, validDate));"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", null, validDate));"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", interval, null));"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, interval, false, validDate));"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", null,"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"                false, validDate));"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", interval, null, validDate));"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", interval, false, null));"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":""},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Interval validInterval \u003d Interval.DAILY;"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription, validInterval, validDate));"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription, validInterval,"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"                false, validDate));"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription2, validInterval, validDate));"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription2, validInterval,"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                false, validDate));"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":""},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        // null description"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDescription(null));"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":""},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        // invalid description"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\"\")); // empty string"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\" \")); // spaces only"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":""},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        // valid description"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Blk 456, Den Road, #01-355\"));"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"-\")); // one character"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"}"}],"authorContributionMap":{"vevek":58}},{"path":"src/test/java/seedu/address/testutil/TypicalProjects.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.CompletableTaskList;"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ParticipantList;"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * A utility class containing a list of {@code Project} objects to be used in tests."},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class TypicalProjects {"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final EventList EMPTY_EVENT_LIST \u003d new EventList();"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final CompletableTaskList EMPTY_COMPLETABLE_TASK_LIST \u003d new CompletableTaskList();"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public static final ParticipantList EMPTY_PARTICIPANT_LIST \u003d new ParticipantList();"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public static final ProjectName CS2103T_PROJECT_NAME \u003d new ProjectName(\"CS2103T Project\");"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public static final Project CS2103T_PROJECT \u003d new Project(CS2103T_PROJECT_NAME);"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public static final ProjectName CS1101S_NAME \u003d new ProjectName(\"CS1101S\");"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public static final Project CS1101S \u003d new Project(CS1101S_NAME);"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private TypicalProjects() {} // prevents instantiation"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":""},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public static List\u003cProject\u003e getTypicalProjects() {"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(CS2103T_PROJECT, CS1101S));"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"}"}],"authorContributionMap":{"samuelfangjw":33}}]
