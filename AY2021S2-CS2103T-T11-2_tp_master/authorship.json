[{"path":".vscode/extensions.json","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"\t\"recommendations\": [","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"\t\t\"vscjava.vscode-java-pack\",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"    \"richardwillis.vscode-gradle-extension-pack\",","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"\t\t\"shengchen.vscode-checkstyle\"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"\t],","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"\t\"unwantedRecommendations\": [","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"\t]","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":9}},{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"# CoLAB","lastModifiedDate":"2021-02-24"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d2NR2SMZ01E)](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp)","lastModifiedDate":"2021-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"docs/images/logo.png\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to manage their school projects.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"What are you waiting for? Start tracking your university life now!","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2021-02-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"## Site Map","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"- **[User Guide](https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html)**","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"- **[Developer Guide](https://ay2021s2-cs2103t-t11-2.github.io/tp/DeveloperGuide.html)**","lastModifiedDate":"2021-02-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"- **[About Us](https://ay2021s2-cs2103t-t11-2.github.io/tp/AboutUs.html)**","lastModifiedDate":"2021-02-25"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"- Libraries used:","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"  - [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"  - [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"  - [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  - [TestFX](https://github.com/TestFX/TestFX)","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":14,"Eriksen2411":1,"-":5,"samuelfangjw":9}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"import org.gradle.api.tasks.testing.logging.TestLogEvent","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    String testFxVersion \u003d \u00274.0.16-alpha\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-core\u0027, version: testFxVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    testImplementation group: \u0027org.testfx\u0027, name: \u0027testfx-junit5\u0027, version: testFxVersion","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    testRuntimeOnly group: \u0027org.testfx\u0027, name: \u0027openjfx-monocle\u0027, version: \u0027jdk-11+26\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    archiveFileName \u003d \u0027CoLAB.jar\u0027","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"test {","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    useJUnitPlatform()","lastModifiedDate":"2021-03-04"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    systemProperty \u0027testfx.setup.timeout\u0027, \u002760000\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    testLogging {","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        events TestLogEvent.FAILED, TestLogEvent.SKIPPED","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        // Prints the currently running test\u0027s name in the CI\u0027s build log,","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        // so that we can check if tests are being silently skipped or","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        // stalling the build.","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        if (System.env.\u0027CI\u0027) {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            events \u003c\u003c TestLogEvent.STARTED","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-04"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2021-03-04"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"task headless {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    doFirst {","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        println \u0027Setting headless mode properties.\u0027","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        test {","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            systemProperties \u003d [","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027java.awt.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027testfx.robot\u0027: \u0027glass\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027testfx.headless\u0027: \u0027true\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027prism.order\u0027: \u0027sw\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                    \u0027prism.text\u0027: \u0027t2k\u0027,","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            ]","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"// Makes sure that headless properties are set before running tests","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"test.mustRunAfter headless","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"run {","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"defaultTasks \u0027clean\u0027, \u0027headless\u0027, \u0027test\u0027","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":64,"samuelfangjw":50}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"## CoLAB Project team","lastModifiedDate":"2021-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"### Fang Junwei, Samuel","lastModifiedDate":"2021-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/samuelfangjw.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/samuelfangjw)]","lastModifiedDate":"2021-02-24"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/samuelfangjw.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Deliverables and Deadlines","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"### Vevek Selvam","lastModifiedDate":"2021-02-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/vevek.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/vevek)]","lastModifiedDate":"2021-02-24"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/vevek.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Integration","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Model, Logic","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"### Nguyen Duc Danh","lastModifiedDate":"2021-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/eriksen2411.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/Eriksen2411)]","lastModifiedDate":"2021-02-24"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/eriksen2411.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Documentation","lastModifiedDate":"2021-02-24"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Storage","lastModifiedDate":"2021-02-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"### Li Ruochen","lastModifiedDate":"2021-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"\u003cimg src\u003d\"images/lirc572.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"[[github](https://github.com/lirc572)]","lastModifiedDate":"2021-02-24"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"[[portfolio](team/lirc572.md)]","lastModifiedDate":"2021-02-24"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"* Role: Developer, in charge of Code quality","lastModifiedDate":"2021-02-24"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"* Responsibilities: Tests","lastModifiedDate":"2021-02-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eriksen2411":25,"-":26}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App. Given below is a quick overview of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Each of the four components,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* exposes its functionality using a concrete `{Component Name}Manager` class (which implements the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"For example, the `Logic` component (see the class diagram given below) defines its API in the `Logic.java` interface and exposes its functionality using the `LogicManager.java` class which implements the `Logic` interface.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"![Class Diagram of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"[`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"The `UI` component uses JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"* Executes user commands using the `Logic` component.","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* Listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"![Structure of the Logic Component](images/LogicClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"**API** :","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"[`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"1. `Logic` uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"1. This results in a `Command` object which is executed by the `LogicManager`.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"1. The command execution can affect the `Model` (e.g. adding a person).","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is passed back to the `Ui`.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"1. In addition, the `CommandResult` object also contains a `UiCommand` object, which encapsulates information needed to instruct the `Ui` to perform certain actions, such as displaying help to the user.","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"Given below is the Sequence Diagram for interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"![Structure of the Model Component](images/ModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"The `Model`,","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"* stores the address book data.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* exposes an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique `Tag`, instead of each `Person` needing their own `Tag` object.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"![BetterModelClassDiagram](images/BetterModelClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"![Structure of the Storage Component](images/StorageClassDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"* can save `UserPref` objects in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* can save the address book data in json format and read it back.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"### Model for Tasks (Todos, Deadlines \u0026 Events)","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"The classes and implementations used to model various Tasks (e.g. Todos, Deadlines \u0026 Events) are facilitated by `CompletableTodo`, `CompletableDeadline` and \u0027`Repeatable` abstract classes. This design is similar to the Person model from AB3.","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"The client creates a concrete `Todo`, `Deadline` or `Event` that encapsulates all information related to these Tasks. Each concrete `Todo`, `Deadline` or `Event` implements the `CompletableTodo`, `CompletableDeadline` and \u0027`Repeatable` abstract classes respectively. Each `Completable` and `Repeatable` abstract class specifies specific behaviors.","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"Step 1. The user executes the command `addD`, which adds a Deadline to a project specified in the command.","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"Step 2. The `Deadline` object is created during  the parsing of a user\u0027s command. The `Deadline` object requires a description \u0026 LocalDate.","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"Step 3. The `Deadline` object is then passed as a parameter in a created `AddDeadlineCommand` that would be executed.","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"Step 4. During it\u0027s execution, the `Deadline` object would be added to a `DeadlineList` that is stored in a `Project`.","lastModifiedDate":"2021-03-24"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"##### Aspect: How to store and pass around UI related instructions","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"* **Alternative 1 (current choice):** Implement  `Todo`, `Deadline` or `Event` each with independent abstract classes (`CompletableTodo`, `CompletableDeadline` and `Repeatable` ).","lastModifiedDate":"2021-03-24"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"        * Design allows the behaviour of `CompletableTodo`, `CompletableDeadline` and `Repeatable` to be extended without (or with minimal) changes to `Todo`, `Deadline` or `Event`.","lastModifiedDate":"2021-03-24"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"        * Each `CompletableTodo`, `CompletableDeadline` and `Repeatable` encapsulates all information needed for that specific Task. For example, `Event` which implements `Repeatable` has a specific implementation that allows it to repeat in a specified interval. (Note: The intervals are defined in an `Interval` enumeration.)","lastModifiedDate":"2021-03-24"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"        * Design allows `TodoList`, `DeadlineList` and `EventList` to hold specifically and only `CompletableTodo`, `CompletableDeadline` and `Repeatable` respectively. This ensures that implementation errors with respect to how `CompletableTodo`, `CompletableDeadline` and `Repeatable` are stored, can be minimised.","lastModifiedDate":"2021-03-24"},{"lineNumber":161,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":162,"author":{"gitId":"vevek"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":163,"author":{"gitId":"vevek"},"content":"        * Many classes required.","lastModifiedDate":"2021-03-24"},{"lineNumber":164,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":165,"author":{"gitId":"vevek"},"content":"* **Alternative 2 (implementation used in AB3):** Implement  `Todo`, `Deadline` or `Event` with a common `Task` abstract class.","lastModifiedDate":"2021-03-24"},{"lineNumber":166,"author":{"gitId":"vevek"},"content":"    * Pros:","lastModifiedDate":"2021-03-24"},{"lineNumber":167,"author":{"gitId":"vevek"},"content":"        * Easy to implement.","lastModifiedDate":"2021-03-24"},{"lineNumber":168,"author":{"gitId":"vevek"},"content":"        * Minimal changes needed if a new implementation of `Task` needs to extend behaviors already defined in `Task`.","lastModifiedDate":"2021-03-24"},{"lineNumber":169,"author":{"gitId":"vevek"},"content":"        * Fewer classes required.","lastModifiedDate":"2021-03-24"},{"lineNumber":170,"author":{"gitId":"vevek"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":171,"author":{"gitId":"vevek"},"content":"        * `Task` is not closed to modification. A new implementation of `Task` might require the addition of fields to store additional behaviours and attributes.","lastModifiedDate":"2021-03-24"},{"lineNumber":172,"author":{"gitId":"vevek"},"content":"        * Risk of having a `Todo` added to a `DeadlineList` is heightened during implementation. This is in contrast to alternative 2, where each `TodoList`, `DeadlineList` and `EventList` holds only `CompletableTodo`, `CompletableDeadline` and `Repeatable` respectively.","lastModifiedDate":"2021-03-24"},{"lineNumber":173,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"### UI Commands [Coming soon in v1.3]","lastModifiedDate":"2021-03-24"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"The mechanism to issue commands to change some aspect of the `Ui` (e.g. displaying a new panel) is facilitated by `UiCommand` abstract class. This mechanism is similar to the command pattern. ","lastModifiedDate":"2021-03-24"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"The client creates a concrete `UiCommand` that encapsulates all information needed to make a change to the Ui. Each concrete `UiCommand` implements the `UiCommand#execute(MainWindow)` method, which calls the appropriate method(s) in `MainWindow` to make a change to the UI.","lastModifiedDate":"2021-03-24"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"Step 1. The user issues executes the command `viewP 1`, which displays a panel containing information about the first project in the project list. ","lastModifiedDate":"2021-03-24"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"Step 2. A `CommandResult` object is created (see section on [Logic Component](#logic-component)) containing a `ViewProjectUiCommand` object, a concrete implementation of `UiCommand`.","lastModifiedDate":"2021-03-24"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"Step 3. The `CommandResult` is passed to the `Ui`, which gets the `UiCommand` by calling `CommandResult#getUiCommand()`.","lastModifiedDate":"2021-03-24"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"Step 4. The `Ui` calls `UiCommand#execute(MainWindow)`, which will result in a call to the overridden method `ViewProjectUiCommand#execute(MainWindow)`. Execution of this method will result in calls to the relevant method(s) in `MainWindow` required to display the new project.","lastModifiedDate":"2021-03-24"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"##### Aspect: How to store and pass around UI related instructions","lastModifiedDate":"2021-03-24"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"* **Alternative 1 (current choice):** Encapsulate instructions using `UiCommand` Object.","lastModifiedDate":"2021-03-24"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    * Pros: ","lastModifiedDate":"2021-03-24"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        * Design allows behaviour of `Ui` to be extended without (or with minimal) changes to the `Ui` and `CommandResult`.","lastModifiedDate":"2021-03-24"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"        * `UiCommand` encapsulates all information needed to execute the instruction (e.g. index of project).","lastModifiedDate":"2021-03-24"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        ","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"        * Many classes required.","lastModifiedDate":"2021-03-24"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"* **Alternative 2 (implementation used in AB3):** Store instructions in `CommandResult` as boolean fields.","lastModifiedDate":"2021-03-24"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"    * Pros: ","lastModifiedDate":"2021-03-24"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        * Easy to implement.","lastModifiedDate":"2021-03-24"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        * Minimal changes needed if the new instruction is a combination of already existing instructions as the already existing boolean fields can be set to true.  ","lastModifiedDate":"2021-03-24"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"    * Cons: ","lastModifiedDate":"2021-03-24"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        * `Ui` and `CommandResult` are not closed to modification. A new instruction might require the addition of fields to `CommandResult` (to store instructions and related data) as well as a new conditional statement in `Ui` to handle the new instruction.","lastModifiedDate":"2021-03-24"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":209,"author":{"gitId":"Eriksen2411"},"content":"### Add Event to Project Command [Implemented in v1.2]","lastModifiedDate":"2021-03-24"},{"lineNumber":210,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":211,"author":{"gitId":"Eriksen2411"},"content":"The mechanism is used to add an event to the `EventList` of `Project` specified by the index in the project list shown.","lastModifiedDate":"2021-03-24"},{"lineNumber":212,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":213,"author":{"gitId":"Eriksen2411"},"content":"The client creates a concrete `AddEventCommand` that contains the specified index of project and a valid Event object. Each concrete `AddEventCommand` implements the `AddEventCommand#execute` method, which calls the appropriate method(s) in `Project` to update its `EventList` and appropriate method(s) in `Model` to update the Project List.","lastModifiedDate":"2021-03-24"},{"lineNumber":214,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":215,"author":{"gitId":"Eriksen2411"},"content":"Given below is an example usage scenario and how the mechanism behaves at each step.","lastModifiedDate":"2021-03-24"},{"lineNumber":216,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":217,"author":{"gitId":"Eriksen2411"},"content":"Step 1. The user executes the command `addEto 1 d/Tutorial i/WEEKLY at/25-03-2021`, which adds an `Event` with description, interval and date specified to `Project` 1 in Project List.","lastModifiedDate":"2021-03-24"},{"lineNumber":218,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":219,"author":{"gitId":"Eriksen2411"},"content":"Step 2: The input is parsed by `AddEventCommandParser`. It checks if `Event` provided is valid or not. If input is invalid, an exception will be throw and `Ui` will help print out the exception message. Otherwise, an `AddEventCommand` will be created.","lastModifiedDate":"2021-03-24"},{"lineNumber":220,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":221,"author":{"gitId":"Eriksen2411"},"content":"Step 3: The `AddEventCommand#execute` is called. It checks whether `Index` provided is valid or not and if `Event` provided is duplicated. If check fails, an exception will be thrown, `Ui` will help print out the exception message. Otherwise, the change will be made to `Project`and `Model` in the next step.","lastModifiedDate":"2021-03-24"},{"lineNumber":222,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":223,"author":{"gitId":"Eriksen2411"},"content":"Step 4: The `Project` specified by Index will call addEvent function to add the given `Event` to its `EventList`. `Model` updates its Project List based on the change.","lastModifiedDate":"2021-03-24"},{"lineNumber":224,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":225,"author":{"gitId":"Eriksen2411"},"content":"Step 5: A `CommandResult` object is created (see section on [Logic Component](#logic-component)) containing the Event added. The `Ui` will help print out the success message. ","lastModifiedDate":"2021-03-24"},{"lineNumber":226,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":227,"author":{"gitId":"Eriksen2411"},"content":"#### Design Considerations","lastModifiedDate":"2021-03-24"},{"lineNumber":228,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":229,"author":{"gitId":"Eriksen2411"},"content":"##### Aspect: How to add a new `Event` to a `Project`.","lastModifiedDate":"2021-03-24"},{"lineNumber":230,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":231,"author":{"gitId":"Eriksen2411"},"content":"* **Alternative 1 (current choice):** `Project` tells its `EventList` to update the list of Events stored.","lastModifiedDate":"2021-03-24"},{"lineNumber":232,"author":{"gitId":"Eriksen2411"},"content":"    * Pros: ","lastModifiedDate":"2021-03-24"},{"lineNumber":233,"author":{"gitId":"Eriksen2411"},"content":"        * This implementation requires no additional time and space (for creation of new \u0027Project` and `EventList` object).","lastModifiedDate":"2021-03-24"},{"lineNumber":234,"author":{"gitId":"Eriksen2411"},"content":"    * Cons:","lastModifiedDate":"2021-03-24"},{"lineNumber":235,"author":{"gitId":"Eriksen2411"},"content":"        * This implementation will not work with an immutable implementation of `EventList` ","lastModifiedDate":"2021-03-24"},{"lineNumber":236,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":237,"author":{"gitId":"Eriksen2411"},"content":"* **Alternative 2:** A new `Project` object is initialized with a new `EventList` oject containing the added `Event`.","lastModifiedDate":"2021-03-24"},{"lineNumber":238,"author":{"gitId":"Eriksen2411"},"content":"    * Pros: ","lastModifiedDate":"2021-03-24"},{"lineNumber":239,"author":{"gitId":"Eriksen2411"},"content":"        * If the implementation of `EventList` becomes immutable. This implementaion still works.","lastModifiedDate":"2021-03-24"},{"lineNumber":240,"author":{"gitId":"Eriksen2411"},"content":"    * Cons: ","lastModifiedDate":"2021-03-24"},{"lineNumber":241,"author":{"gitId":"Eriksen2411"},"content":"        * This implementation requires more time and space (for creation of new \u0027Project` and `EventList` object).","lastModifiedDate":"2021-03-24"},{"lineNumber":242,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"![CommitActivityDiagram](images/CommitActivityDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"#### Design consideration:","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"##### Aspect: How undo \u0026 redo executes","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":333,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":334,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":335,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":336,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":337,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"samuelfangjw"},"content":"* student currently enrolled in a university","lastModifiedDate":"2021-02-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"samuelfangjw"},"content":"**Value proposition**:","lastModifiedDate":"2021-02-23"},{"lineNumber":354,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":355,"author":{"gitId":"samuelfangjw"},"content":"* supports only features a university student needs without additional clutter","lastModifiedDate":"2021-02-23"},{"lineNumber":356,"author":{"gitId":"samuelfangjw"},"content":"* information organised by categories relevant to university students (e.g. tag by modules)","lastModifiedDate":"2021-02-23"},{"lineNumber":357,"author":{"gitId":"samuelfangjw"},"content":"* manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2021-02-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"| Priority | As a …​                                 | I want to …​                | So that I can…​                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"samuelfangjw"},"content":"| `* * *`  | user                                       | add a new person               | keep track of details from peers I have crossed paths with             |","lastModifiedDate":"2021-02-23"},{"lineNumber":368,"author":{"gitId":"samuelfangjw"},"content":"| `* * *`  | user                                       | edit a person\u0027s details        | update their details when there is change                              |","lastModifiedDate":"2021-02-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"samuelfangjw"},"content":"| `* * *`  | user                                       | tag a person with tags         | easily keep track of who the contact is                                |","lastModifiedDate":"2021-02-23"},{"lineNumber":372,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | University Student                         | find contacts by modules taken | easily find contacts who take the same module as me                    |","lastModifiedDate":"2021-02-23"},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | Student Teaching Assistant                 | find contacts by tutorial group| easily find contacts of students in my class                           |","lastModifiedDate":"2021-02-23"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"| `* *`    | user                                       | purge all data in the app      | start my address book from fresh                                       |","lastModifiedDate":"2021-02-23"},{"lineNumber":375,"author":{"gitId":"samuelfangjw"},"content":"| `*`      | long time user                             | archive data files             | refer to old address books when needed                                 |","lastModifiedDate":"2021-02-23"},{"lineNumber":376,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"samuelfangjw"},"content":"(For all use cases below, the **System** is `CoLAB` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-02-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"samuelfangjw"},"content":"#### UC1 - Add a person","lastModifiedDate":"2021-02-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to add a person","lastModifiedDate":"2021-02-23"},{"lineNumber":389,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB adds the person","lastModifiedDate":"2021-02-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given arguments are invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":396,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":397,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":398,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":399,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":400,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":401,"author":{"gitId":"samuelfangjw"},"content":"#### UC2 - Find details of a specific person","lastModifiedDate":"2021-02-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":405,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to find a person.","lastModifiedDate":"2021-02-23"},{"lineNumber":406,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB shows a list of persons that match user\u0027s query.","lastModifiedDate":"2021-02-23"},{"lineNumber":407,"author":{"gitId":"samuelfangjw"},"content":"3. User requests to view more details about a specific person in the list.","lastModifiedDate":"2021-02-23"},{"lineNumber":408,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB shows more information about the person in the list.","lastModifiedDate":"2021-02-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":410,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":414,"author":{"gitId":"samuelfangjw"},"content":"* 2a. The list of persons is empty.","lastModifiedDate":"2021-02-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"samuelfangjw"},"content":"    * 3a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":425,"author":{"gitId":"samuelfangjw"},"content":"#### UC3 - Delete a person","lastModifiedDate":"2021-02-23"},{"lineNumber":426,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":427,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":428,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":429,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to list persons.","lastModifiedDate":"2021-02-23"},{"lineNumber":430,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB shows a list of persons.","lastModifiedDate":"2021-02-23"},{"lineNumber":431,"author":{"gitId":"samuelfangjw"},"content":"3. User requests to delete a specific person in the list.","lastModifiedDate":"2021-02-23"},{"lineNumber":432,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB deletes the person.","lastModifiedDate":"2021-02-23"},{"lineNumber":433,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":434,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":435,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":436,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":437,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":438,"author":{"gitId":"samuelfangjw"},"content":"* 2a. The list of persons is empty.","lastModifiedDate":"2021-02-23"},{"lineNumber":439,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":440,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":441,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":442,"author":{"gitId":"samuelfangjw"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":443,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":444,"author":{"gitId":"samuelfangjw"},"content":"    * 3a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":445,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":446,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-02-23"},{"lineNumber":447,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":448,"author":{"gitId":"samuelfangjw"},"content":"#### UC4 - Purge all entries from the app","lastModifiedDate":"2021-02-23"},{"lineNumber":449,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":450,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":451,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":452,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to delete all entries from the app.","lastModifiedDate":"2021-02-23"},{"lineNumber":453,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB asks user to confirm request.","lastModifiedDate":"2021-02-23"},{"lineNumber":454,"author":{"gitId":"samuelfangjw"},"content":"3. User confirms that they want to delete all entries.","lastModifiedDate":"2021-02-23"},{"lineNumber":455,"author":{"gitId":"samuelfangjw"},"content":"4. CoLAB deletes all data from the app.","lastModifiedDate":"2021-02-23"},{"lineNumber":456,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":457,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":458,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":459,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":460,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":461,"author":{"gitId":"samuelfangjw"},"content":"* 3a. User decides not to delete all entries.","lastModifiedDate":"2021-02-23"},{"lineNumber":462,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":463,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":464,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":465,"author":{"gitId":"samuelfangjw"},"content":"#### UC5 - Find all persons that take a certain module","lastModifiedDate":"2021-02-23"},{"lineNumber":466,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":467,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":468,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":469,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to list all persons by modules taken.","lastModifiedDate":"2021-02-23"},{"lineNumber":470,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB lists all entries who have taken the modules.","lastModifiedDate":"2021-02-23"},{"lineNumber":471,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":472,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":473,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":474,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":475,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":476,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given modules are invalid","lastModifiedDate":"2021-02-23"},{"lineNumber":477,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":478,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":479,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":480,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":481,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":482,"author":{"gitId":"samuelfangjw"},"content":"* 2a. The list of persons is empty.","lastModifiedDate":"2021-02-23"},{"lineNumber":483,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":484,"author":{"gitId":"samuelfangjw"},"content":"  Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":485,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":486,"author":{"gitId":"samuelfangjw"},"content":"#### UC6 - Adding or Modifying information about a person","lastModifiedDate":"2021-02-23"},{"lineNumber":487,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":488,"author":{"gitId":"samuelfangjw"},"content":"**MSS**","lastModifiedDate":"2021-02-23"},{"lineNumber":489,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":490,"author":{"gitId":"samuelfangjw"},"content":"1. User requests to edit information about a person.","lastModifiedDate":"2021-02-23"},{"lineNumber":491,"author":{"gitId":"samuelfangjw"},"content":"2. CoLAB updates entry with new information.","lastModifiedDate":"2021-02-23"},{"lineNumber":492,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":493,"author":{"gitId":"samuelfangjw"},"content":"   Use case ends.","lastModifiedDate":"2021-02-23"},{"lineNumber":494,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":495,"author":{"gitId":"samuelfangjw"},"content":"**Extensions**","lastModifiedDate":"2021-02-23"},{"lineNumber":496,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":497,"author":{"gitId":"samuelfangjw"},"content":"* 1a. The given arguments are invalid.","lastModifiedDate":"2021-02-23"},{"lineNumber":498,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":499,"author":{"gitId":"samuelfangjw"},"content":"    * 1a1. CoLAB shows an error message.","lastModifiedDate":"2021-02-23"},{"lineNumber":500,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":501,"author":{"gitId":"samuelfangjw"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2021-02-23"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":503,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":505,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":507,"author":{"gitId":"lirc572"},"content":"* Technical requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":508,"author":{"gitId":"lirc572"},"content":"    * CoLAB should work on any _mainstream OS_ on both 32-bit and 64-bit architectures as long as it has Java `11` or above installed.","lastModifiedDate":"2021-02-24"},{"lineNumber":509,"author":{"gitId":"lirc572"},"content":"    * CoLAB should work under _common screen resolutions_. (i.e. the window should not be out of boundary)","lastModifiedDate":"2021-02-24"},{"lineNumber":510,"author":{"gitId":"lirc572"},"content":"* Performance requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":511,"author":{"gitId":"lirc572"},"content":"    * CoLAB should be able to hold _up to 1000 persons_ without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-02-24"},{"lineNumber":512,"author":{"gitId":"lirc572"},"content":"    * The response to any command should be shown _within 1 second_.","lastModifiedDate":"2021-02-24"},{"lineNumber":513,"author":{"gitId":"lirc572"},"content":"* Constraints:","lastModifiedDate":"2021-02-24"},{"lineNumber":514,"author":{"gitId":"lirc572"},"content":"    * CoLAB should be _backward compatible_ with data files produced by earlier versions as much as possible. If one release is not compatible with earlier versions, a migration guide should be provided.","lastModifiedDate":"2021-02-24"},{"lineNumber":515,"author":{"gitId":"lirc572"},"content":"    * CoLAB must be open source under [the MIT License](https://raw.githubusercontent.com/AY2021S2-CS2103T-T11-2/tp/master/LICENSE).","lastModifiedDate":"2021-02-24"},{"lineNumber":516,"author":{"gitId":"lirc572"},"content":"* Quality requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":517,"author":{"gitId":"lirc572"},"content":"    * A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-02-24"},{"lineNumber":518,"author":{"gitId":"lirc572"},"content":"    * A user familiar with CLI tools should find CoLAB commands very intuitive.","lastModifiedDate":"2021-02-24"},{"lineNumber":519,"author":{"gitId":"lirc572"},"content":"    * A user who has no experience with CLI tools should be able to find CoLAB easy to use with the help of the [_User Guide_](UserGuide.md).","lastModifiedDate":"2021-02-24"},{"lineNumber":520,"author":{"gitId":"lirc572"},"content":"* Process requirements:","lastModifiedDate":"2021-02-24"},{"lineNumber":521,"author":{"gitId":"lirc572"},"content":"    * the project is expected to adhere to a schedule that delivers a feature set every two weeks.","lastModifiedDate":"2021-02-24"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"lirc572"},"content":"* **Common screen resolutions**: minimum _640×480_, maximum _3840×2160_","lastModifiedDate":"2021-02-24"},{"lineNumber":526,"author":{"gitId":"samuelfangjw"},"content":"* **Mainstream OS**: Windows, Linux, Unix, macOS","lastModifiedDate":"2021-02-23"},{"lineNumber":527,"author":{"gitId":"samuelfangjw"},"content":"* **MSS**: Main Success Scenario","lastModifiedDate":"2021-02-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"lirc572":16,"vevek":38,"Eriksen2411":34,"-":347,"samuelfangjw":146}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to manage their school projects.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-02-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"## **Quick start**","lastModifiedDate":"2021-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"1. Download the latest `colab.jar` from [here](https://github.com/AY2021S2-CS2103T-T11-2/tp/releases).","lastModifiedDate":"2021-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for CoLAB.","lastModifiedDate":"2021-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"1. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`listC`** and pressing Enter will list all contacts.\u003cbr\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"   * **`viewP 1`** : Displays the first project.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"   * **`addP`**`n/My Project` : Adds a new project named `My Project` to CoLAB.","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"   * **`tabT`** : Displays the todos tab.","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"   * **`addTto`**`1 d/My Task` : Adds a todo with the description `My Task` to the first project.","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"   * **`deleteP`**`3` : Deletes the third project in the list.","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"## **Features**","lastModifiedDate":"2021-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"  e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2021-02-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"### Projects","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"#### Viewing a project: `listP`","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"Displays a panel with details of a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"Format: `viewP PROJECT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"* Displays a panel with details of the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"* `viewP 1` Displays the first project. ","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"* `viewP 2` Displays the second project.","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"#### Viewing the overview tab: `tabO`","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"Switches to the overview tab of the project that is currently displayed.","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"Format: `tabO`","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"* This command can only be used when a project is currently being displayed.","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"#### Viewing the todos tab: `tabT`","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"Switches to the todos tab of the project that is currently displayed.","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"Format: `tabT`","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"* This command can only be used when a project is currently being displayed.","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"#### Adding a project: `addP`","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"Adds a project to CoLAB.","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"Format: `addP n/PROJECT_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"* `addP n/CS2103T Team Project`","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"* `addP n/CS2101 OP2`","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"#### Adding an event to a project: `addEto`","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"Adds an event to a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"Format: `addEto PROJECT_INDEX d/DESCRIPTION i/INTERVAL at/REPEATABLE_DATE`","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"* Adds an event to the project at the specified `PROJECT_INDEX`. ","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu. ","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"* `INTERVAL` must be one of the following values:","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    * `NONE`","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    * `DAILY`","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    * `WEEKLY`","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    * `FORTNIGHTLY`","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    * `MONTHLY`","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    * `YEARLY`","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"* `REPEATABLE_DATE` must be in `dd-MM-yyyy` format.","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"* `addEto 1 d/Project Meeting i/WEEKLY at/24-04-2021`","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"* `addEto 2 d/CS2101 Presentation i/NONE at/24-04-2021`","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"#### Adding a deadline to a project: `addDto`","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"Adds a deadline to a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"Format: `addDto PROJECT_INDEX d/DESCRIPTION by/REPEATABLE_DATE`","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"* Adds a deadline to the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu. ","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"* `REPEATABLE_DATE` must be in `dd-MM-yyyy` format.","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"* `addDto 1 d/Milestone v1.2 by/01-03-2021`","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"* `addDto 2 d/CS2101 Project Submission by/15-03-2021`","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"#### Adding a todo to a project: `addTto`","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"Adds a todo to a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"Format: `addTto PROJECT_INDEX d/DESCRIPTION`","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"* Adds a deadline to the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"* `addTto 1 d/Add unit tests`","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"* `addTto 2 d/Finish slides for presentation`","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"#### Add a contact to a project: `addCto`","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"Adds a contact to a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"Format: `addCto PROJECT_INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"* Adds a contact to the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"* `addCto 1 n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"* `addCto 2 n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"#### Deleting a project: `deleteP`","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"Deletes a specified project from CoLAB.","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"Format: `deleteP PROJECT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"* Deletes a project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"  ","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"* `deleteP 1`","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"* `deleteP 2`","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"#### Deleting an event from a project: `deleteE`","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"Deletes a specified event from a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"Format: `deleteE PROJECT_INDEX r/EVENT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"* Deletes the event at the specified `EVENT_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"* The `EVENT_INDEX` refers to the number shown beside the event when viewing the project. ","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"* Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"* `deleteE 1 r/1`","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"* `deleteE 2 r/2`","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"#### Deleting a deadline from a project: `deleteD`","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"Deletes a specified deadline from a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"Format: `deleteD PROJECT_INDEX r/DEADLINE_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"* Deletes the deadline at the specified `DEADLINE_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"* The `DEADLINE_INDEX` refers to the number shown beside the deadline when viewing the project.","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"* Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"* `deleteD 1 r/1`","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"* `deleteD 2 r/2`","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"#### Deleting a todo from a project: `deleteT`","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"Deletes a specified todo from a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"Format: `deleteT PROJECT_INDEX r/TODO_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"* Deletes the todo at the specified `TODO_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"* The `TODO_INDEX` refers to the number shown beside the todo when viewing the project.","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"* Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"* `deleteT 1 r/1`","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"* `deleteT 2 r/2`","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"#### Deleting a contact from a project: `deleteCfrom`","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"Deletes a specified contact from a specified project.","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"Format: `deleteCfrom PROJECT_INDEX r/CONTACT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"* Deletes the contact at the specified `CONTACT_INDEX` from the project at the specified `PROJECT_INDEX`.","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"* The `PROJECT_INDEX` refers to the number shown beside the project in the side menu.","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"* The `CONTACT_INDEX` refers to the number shown beside the contact when viewing the project.","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"* Both indexes **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"* `deleteCfrom 1 r/1`","lastModifiedDate":"2021-03-17"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"* `deleteCfrom 2 r/2`","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"### Contacts","lastModifiedDate":"2021-03-24"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"#### Adding a person: `add`","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"vevek"},"content":"Adds a person to CoLAB.","lastModifiedDate":"2021-02-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"#### Listing all persons : `listC`","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"vevek"},"content":"Shows a list of all persons in CoLAB.","lastModifiedDate":"2021-02-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"Format: `listC`","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"#### Locating persons by name: `find`","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"* The search is case-insensitive. e.g. `hans` will match `Hans`","lastModifiedDate":"2021-02-24"},{"lineNumber":283,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"#### Editing a person : `edit`","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"Edits an existing person in CoLAB.","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-03-17"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2021-03-17"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2021-03-17"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"* When editing tags, the existing tags of the person will be removed i.e. adding of tags is not cumulative.","lastModifiedDate":"2021-03-17"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2021-03-17"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-03-17"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-03-17"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2021-03-17"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-03-17"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"#### Deleting a person : `delete`","lastModifiedDate":"2021-03-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"Format: `delete INDEX`","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"samuelfangjw"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-03-17"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"vevek"},"content":"Clears all entries from CoLAB.","lastModifiedDate":"2021-02-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"samuelfangjw"},"content":"### Other commands","lastModifiedDate":"2021-03-17"},{"lineNumber":332,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":333,"author":{"gitId":"samuelfangjw"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-03-23"},{"lineNumber":334,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":335,"author":{"gitId":"samuelfangjw"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-03-23"},{"lineNumber":336,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":337,"author":{"gitId":"samuelfangjw"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-03-23"},{"lineNumber":338,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":339,"author":{"gitId":"samuelfangjw"},"content":"Format: `help`","lastModifiedDate":"2021-03-23"},{"lineNumber":340,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":341,"author":{"gitId":"samuelfangjw"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-03-17"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"samuelfangjw"},"content":"#### Saving the data","lastModifiedDate":"2021-03-17"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"vevek"},"content":"CoLAB\u0027s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-02-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"samuelfangjw"},"content":"#### Editing the data file","lastModifiedDate":"2021-03-17"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":353,"author":{"gitId":"vevek"},"content":"CoLAB\u0027s data is saved as a JSON file `[JAR file location]/data/colab.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-02-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":355,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":356,"author":{"gitId":"vevek"},"content":"If your changes to the data file makes its format invalid, CoLAB will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-02-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":359,"author":{"gitId":"samuelfangjw"},"content":"### Coming soon","lastModifiedDate":"2021-03-17"},{"lineNumber":360,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":361,"author":{"gitId":"samuelfangjw"},"content":"#### View more details about a person `[coming soon]`","lastModifiedDate":"2021-03-17"},{"lineNumber":362,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":363,"author":{"gitId":"samuelfangjw"},"content":"Format: `view INDEX`","lastModifiedDate":"2021-02-23"},{"lineNumber":364,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":365,"author":{"gitId":"samuelfangjw"},"content":"* Shows more details about the person at the specified `INDEX`.","lastModifiedDate":"2021-02-23"},{"lineNumber":366,"author":{"gitId":"samuelfangjw"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-02-23"},{"lineNumber":367,"author":{"gitId":"samuelfangjw"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-02-23"},{"lineNumber":368,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":369,"author":{"gitId":"samuelfangjw"},"content":"Examples:","lastModifiedDate":"2021-02-23"},{"lineNumber":370,"author":{"gitId":"samuelfangjw"},"content":"* `list` followed by `view 2` deletes the 2nd person in the address book.","lastModifiedDate":"2021-02-23"},{"lineNumber":371,"author":{"gitId":"samuelfangjw"},"content":"* `find Betsy` followed by `view 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-02-23"},{"lineNumber":372,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":373,"author":{"gitId":"samuelfangjw"},"content":"#### Undo/Redo `[coming soon]`","lastModifiedDate":"2021-03-17"},{"lineNumber":374,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":375,"author":{"gitId":"samuelfangjw"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-23"},{"lineNumber":376,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":377,"author":{"gitId":"samuelfangjw"},"content":"#### Archiving data files `[coming soon]`","lastModifiedDate":"2021-03-17"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"samuelfangjw"},"content":"## **FAQ**","lastModifiedDate":"2021-02-24"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"samuelfangjw"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous CoLAB home folder.","lastModifiedDate":"2021-03-17"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"samuelfangjw"},"content":"## **Command summary**","lastModifiedDate":"2021-02-24"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"samuelfangjw"},"content":"**Add Contact** | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`","lastModifiedDate":"2021-03-17"},{"lineNumber":395,"author":{"gitId":"samuelfangjw"},"content":"**Add Project** | `addP n/PROJECT_NAME`","lastModifiedDate":"2021-03-17"},{"lineNumber":396,"author":{"gitId":"samuelfangjw"},"content":"**Add Deadline to Project** | `addDto PROJECT_INDEX d/DESCRIPTION by/REPEATABLE_DATE`","lastModifiedDate":"2021-03-17"},{"lineNumber":397,"author":{"gitId":"samuelfangjw"},"content":"**Add Event to Project** | `addEto PROJECT_INDEX d/DESCRIPTION i/INTERVAL at/REPEATABLE_DATE`","lastModifiedDate":"2021-03-17"},{"lineNumber":398,"author":{"gitId":"samuelfangjw"},"content":"**Add Participant to Project** | `addCto PROJECT_INDEX n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​`","lastModifiedDate":"2021-03-17"},{"lineNumber":399,"author":{"gitId":"samuelfangjw"},"content":"**Add Todo to Project** | `addTto PROJECT_INDEX d/DESCRIPTION`","lastModifiedDate":"2021-03-17"},{"lineNumber":400,"author":{"gitId":"samuelfangjw"},"content":"**Delete Contact** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-03-17"},{"lineNumber":401,"author":{"gitId":"samuelfangjw"},"content":"**Delete Project** | `deleteP PROJECT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":402,"author":{"gitId":"samuelfangjw"},"content":"**Delete Deadline from Project** | `deleteD PROJECT_INDEX r/DEADLINE_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":403,"author":{"gitId":"samuelfangjw"},"content":"**Delete Event from Project** | `deleteE PROJECT_INDEX r/EVENT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":404,"author":{"gitId":"samuelfangjw"},"content":"**Delete Participant from Project** | `deleteCfrom PROJECT_INDEX r/CONTACT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":405,"author":{"gitId":"samuelfangjw"},"content":"**Delete Todo from Project** | `deleteT PROJECT_INDEX r/TODO_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":406,"author":{"gitId":"samuelfangjw"},"content":"**Clear Contacts** | `clear`","lastModifiedDate":"2021-03-17"},{"lineNumber":407,"author":{"gitId":"samuelfangjw"},"content":"**Edit Contact** | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`","lastModifiedDate":"2021-03-17"},{"lineNumber":408,"author":{"gitId":"samuelfangjw"},"content":"**Find Contact** | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`","lastModifiedDate":"2021-03-17"},{"lineNumber":409,"author":{"gitId":"samuelfangjw"},"content":"**List Contacts** | `listC`","lastModifiedDate":"2021-03-17"},{"lineNumber":410,"author":{"gitId":"samuelfangjw"},"content":"**View Project** | `viewP PROJECT_INDEX`","lastModifiedDate":"2021-03-17"},{"lineNumber":411,"author":{"gitId":"samuelfangjw"},"content":"**View Overview Tab** | `tabO`","lastModifiedDate":"2021-03-24"},{"lineNumber":412,"author":{"gitId":"samuelfangjw"},"content":"**View Todos Tab** | `tabT`","lastModifiedDate":"2021-03-17"},{"lineNumber":413,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":415,"author":{"gitId":"samuelfangjw"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-02-24"},{"lineNumber":416,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-02-23"},{"lineNumber":417,"author":{"gitId":"vevek"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-02-23"}],"authorContributionMap":{"vevek":10,"-":153,"samuelfangjw":254}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"title: CoLAB","lastModifiedDate":"2021-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"[![Java CI](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2021S2-CS2103T-T11-2/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2021-02-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"[![codecov](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp/branch/master/graph/badge.svg?token\u003d2NR2SMZ01E)](https://codecov.io/gh/AY2021S2-CS2103T-T11-2/tp)","lastModifiedDate":"2021-02-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003cdiv align\u003d\"center\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  \u003cimg alt\u003d\"logo\" src\u003d\"images/logo.png\"\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"CoLAB (Command Line Address Book) is a **desktop app for students currently enrolled in a university to manage their school projects.** It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your project management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"What are you waiting for? Start tracking your university life now!","lastModifiedDate":"2021-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2021-02-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-25"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"## Site Map","lastModifiedDate":"2021-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"- **[User Guide](UserGuide.md)**","lastModifiedDate":"2021-02-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"- **[Developer Guide](DeveloperGuide.md)**","lastModifiedDate":"2021-02-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"- **[About Us](AboutUs.md)**","lastModifiedDate":"2021-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"## Acknowledgements","lastModifiedDate":"2021-02-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"- This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"- Libraries used:","lastModifiedDate":"2021-02-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"  - [JavaFX](https://openjfx.io/)","lastModifiedDate":"2021-02-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"  - [Jackson](https://github.com/FasterXML/jackson)","lastModifiedDate":"2021-02-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  - [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2021-02-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"  - [TestFX](https://github.com/TestFX/TestFX)","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"-":12,"samuelfangjw":20}},{"path":"docs/team/eriksen2411.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"title: Nguyen Duc Danh\u0027s Project Portfolio Page","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"## Project: CoLAB","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"CoLAB (Command Line Address Book) is a desktop app for students currently enrolled in a university to keep track of people they have crossed paths with. It is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, CoLAB can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"* **New Feature**: Added a addEto command that allows the user to add an Event to a Project specified by project index.","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Eriksen2411":6,"-":42}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonProjectsFolderStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.ProjectsFolderStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolderStorage projectsFolderStorage \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                new JsonProjectsFolderStorage(userPrefs.getProjectsFolderFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        storage \u003d new StorageManager(addressBookStorage, projectsFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        Optional\u003cReadOnlyProjectsFolder\u003e projectsOptional;","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyProjectsFolder initialProjectsData;","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            projectsOptional \u003d storage.readProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"            if (!projectsOptional.isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"                logger.info(\"Data file not found. Will be starting with a sample ProjectsFolder\");","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"            initialProjectsData \u003d projectsOptional.orElseGet(SampleDataUtil::getSampleProjectsFolder);","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ProjectsFolder\");","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"            initialProjectsData \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ProjectsFolder\");","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"            initialProjectsData \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        return new ModelManager(initialAddressBookData, initialProjectsData, userPrefs);","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":176,"samuelfangjw":30}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final double DEFAULT_HEIGHT \u003d 720;","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final double DEFAULT_WIDTH \u003d 1280;","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX \u003d \"The project index provided is invalid\";","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX \u003d \"The deadline index provided is invalid\";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_INVALID_TODO_DISPLAYED_INDEX \u003d \"The todo index provided is invalid\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_ADD_EVENT_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_ADD_TODO_SUCCESS \u003d \"New todo added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_ADD_DEADLINE_SUCCESS \u003d \"New deadline added: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in this project.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DUPLICATE_TODO \u003d \"This todo already exists in this project.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DUPLICATE_DEADLINE \u003d \"This deadline already exists in this project.\";","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DELETE_DEADLINE_SUCCESS \u003d \"Deleted Deadline: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_DELETE_TODO_SUCCESS \u003d \"Deleted Todo: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_MARK_DEADLINE_SUCCESS \u003d \"Marked Deadline as done: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_MARK_EVENT_SUCCESS \u003d \"Marked Event as done: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_MARK_TODO_SUCCESS \u003d \"Marked Todo as done: %1$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_UI_PROJECT_NOT_DISPLAYED \u003d \"No project displayed. Display a project using the \"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"            + ViewProjectCommand.COMMAND_WORD + \" command.\";","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"            \"Description should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_INTERVAL_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"            \"Interval should be one of: NONE, DAILY, WEEKLY, FORTNIGHTLY, MONTHLY, YEARLY\";","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_PARSER_DATE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            \"Date should be in the form dd-MM-yyyy\";","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_EVENTS_TO_DISPLAY \u003d \"You have no events today!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_NO_DEADLINES_TO_DISPLAY \u003d \"You have no deadlines today!\";","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"vevek":27,"Eriksen2411":1,"-":14,"samuelfangjw":8}},{"path":"src/main/java/seedu/address/commons/exceptions/DateConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Represents an error during conversion of date from one format to another.","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public class DateConversionException extends Exception {","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    public DateConversionException(String message) {","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"        super(message);","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"vevek":10}},{"path":"src/main/java/seedu/address/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code IllegalValueException} object with a {@code message}.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code IllegalValueException} object with a {@code message} and a {@code cause}.","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":21,"samuelfangjw":4}},{"path":"src/main/java/seedu/address/commons/util/DateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-09"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-03-09"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" * A class for encoding and decoding of Dates.","lastModifiedDate":"2021-03-09"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"public class DateUtil {","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * Encodes a date passed as a String into a LocalDate.","lastModifiedDate":"2021-03-09"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * @param date Date in the yyyy-mm-dd format.","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate object.","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * @throws DateConversionException Occurs when a date had been passed in with the wrong format.","lastModifiedDate":"2021-03-09"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    public static LocalDate encodeDate(String date) throws DateConversionException {","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"            return LocalDate.parse(date, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2021-03-09"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"            throw new DateConversionException(\"An error occurred while encoding date,\"","lastModifiedDate":"2021-03-09"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"                    + \" use the dd-MM-yyyy format.\");","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Decodes a date passed as a LocalDate into a String in the dd MMM yyyy format.","lastModifiedDate":"2021-03-09"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param date A LocalDate object.","lastModifiedDate":"2021-03-09"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @return A date String in the dd MMM yyyy format.","lastModifiedDate":"2021-03-09"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public static String decodeDate(LocalDate date) {","lastModifiedDate":"2021-03-09"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * Decodes a date passed as a LocalDate into a String in the yyyy-MM-dd format.","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * @param date A LocalDate object.","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * @return A date String in the yyyy-MM-dd format.","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public static String decodeDateForStorage(LocalDate date) {","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"vevek":48,"Eriksen2411":2,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the ProjectsFolder.","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @see Model#getProjectsFolder()","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    ReadOnlyProjectsFolder getProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    /** Returns an unmodifiable view of the filtered list of projects */","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectsList();","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the user prefs\u0027 projects folder file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    Path getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":49,"samuelfangjw":19}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            storage.saveProjectsFolder(model.getProjectsFolder());","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    public ReadOnlyProjectsFolder getProjectsFolder() {","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        return model.getProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectsList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        return model.getFilteredProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    public Path getProjectsFolderFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        return model.getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":81,"samuelfangjw":18}},{"path":"src/main/java/seedu/address/logic/commands/AddContactToCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":" * Clears the address book.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"public class AddContactToCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"addCto\";","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an existing contact to an existing project. \"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact %1$s added to project %2$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This participant already exists under project %1$s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    private final Index projectToAddToIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    private final Person personToAdd;","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"     * Creates an AddContactToCommand to add the specified {@code Person} to the specified {@code Project}","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    public AddContactToCommand(Index projectIndex, Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        requireAllNonNull(projectIndex, person);","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        projectToAddToIndex \u003d projectIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        personToAdd \u003d person;","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        List\u003cProject\u003e lastShownProjectList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        if (projectToAddToIndex.getZeroBased() \u003e\u003d lastShownProjectList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        Project projectToAddTo \u003d requireNonNull(lastShownProjectList.get(projectToAddToIndex.getZeroBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        if (projectToAddTo.hasParticipant(personToAdd)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_CONTACT, projectToAddTo.getProjectName()));","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        // logic goes here","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        projectToAddTo.addParticipant(personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredProjectList(model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        return new CommandResult(","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                String.format(MESSAGE_SUCCESS, personToAdd.getName(), projectToAddTo.getProjectName())","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"                || (other instanceof AddContactToCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 projectToAddToIndex.equals(((AddContactToCommand) other).projectToAddToIndex)","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 personToAdd.equals(((AddContactToCommand) other).personToAdd)","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"            );","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":88,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/logic/commands/AddDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":" * Adds an deadline to a specified project in CoLAB.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"addDto\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds deadline to a specified project.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + \"Parameters:\\nPROJECT_INDEX\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"            + PREFIX_DEADLINE_DATE + \"REPEATABLE_DATE\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"            + \"Example:\\n\" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"            + PREFIX_DESCRIPTION + \"Project report due \"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"            + PREFIX_DEADLINE_DATE + \"24-04-2021\";","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    private final Deadline toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     * Creates an AddDeadlineCommand to add specified {@code Deadline} to {@code Project} with {@code Index}.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * @param index index of {@code Project} to add deadline in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * @param deadline {@code Deadline} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public AddDeadlineCommand(Index index, Deadline deadline) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(index, deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        this.toAdd \u003d deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        for (CompletableDeadline deadline: projectToEdit.getDeadlines().getDeadlines()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"            if (this.toAdd.equals(deadline)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATE_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        projectToEdit.addDeadline(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_ADD_DEADLINE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"                || (other instanceof AddDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 toAdd.equals(((AddDeadlineCommand) other).toAdd)","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 index.equals(((AddDeadlineCommand) other).index));","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":80}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_INTERVAL;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":" * Adds an event to a specified project in CoLAB.","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"addEto\";","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds event to a specified project.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"            + \"Parameters:\\nPROJECT_INDEX\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"            + PREFIX_REPEATABLE_INTERVAL + \"INTERVAL \"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_REPEATABLE_DATE + \"REPEATABLE_DATE\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"            + \"Example:\\n\" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_DESCRIPTION + \"Project meeting \"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"            + PREFIX_REPEATABLE_INTERVAL + \"DAILY \"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"            + PREFIX_REPEATABLE_DATE + \"24-04-2021\";","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"    private final Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    private final Event toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"     * Creates an AddEventCommand to add specified {@code Event} to {@code Project} with {@code Index}.","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"     * @param index index of {@code Project} to add event in the list.","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"     * @param event {@code Event} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"    public AddEventCommand(Index index, Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"        requireAllNonNull(index, event);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        this.toAdd \u003d event;","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        for (Event event: projectToEdit.getEvents().getEvents()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"            if (this.toAdd.equals(event)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        projectToEdit.addEvent(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_ADD_EVENT_SUCCESS, toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof AddEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 toAdd.equals(((AddEventCommand) other).toAdd)","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 index.equals(((AddEventCommand) other).index));","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":18,"Eriksen2411":63}},{"path":"src/main/java/seedu/address/logic/commands/AddProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Adds a project to the CoLAB.","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class AddProjectCommand extends Command {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"addP\";","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a project to CoLAB. \"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            + PREFIX_NAME + \"PROJECT_NAME\";","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New project added: %1$s\";","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECT \u003d \"This project already exists\";","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final Project toAdd;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"     * Creates an AddProjectCommand to add the specified {@code Project}.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public AddProjectCommand(Project project) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        toAdd \u003d project;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        if (model.hasProject(toAdd)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PROJECT);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        model.addProject(toAdd);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof AddProjectCommand // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 toAdd.equals(((AddProjectCommand) other).toAdd));","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"Eriksen2411":1,"samuelfangjw":51}},{"path":"src/main/java/seedu/address/logic/commands/AddTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"addTto\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a Task to CoLAB. \"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"            + \"Parameters:\\nPROJECT_INDEX\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_DESCRIPTION + \"Submit project report \";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    private final Index index;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    private final Todo toAdd;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * Creates an AddTodoCommand to add the specified {@code Task}","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param index index of {@code Project} to add event in the list.","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @param todo {@code Todo} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public AddTodoCommand(Index index, Todo todo) {","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.toAdd \u003d todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        assert projectToEdit !\u003d null;","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        for (CompletableTodo todo: projectToEdit.getTodos().getTodos()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            if (this.toAdd.equals(todo)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"                throw new CommandException(Messages.MESSAGE_DUPLICATE_TODO);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        projectToEdit.addTodo(toAdd);","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_ADD_TODO_SUCCESS, toAdd));","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"                || (other instanceof AddTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 toAdd.equals(((AddTodoCommand) other).toAdd)","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 index.equals(((AddTodoCommand) other).index));","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":71}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final Index indexOfProject;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /** Information on which UI command to excecute **/","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final UiCommand uiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, {@code uiCommand} and","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * {@code indexOfProject}.","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult(String feedbackToUser, UiCommand uiCommand, Index indexOfProject) {","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(feedbackToUser, uiCommand, indexOfProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        this.uiCommand \u003d uiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.indexOfProject \u003d indexOfProject;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser} and {@code uiCommand}.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * All other fields are set to their default value.","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult (String feedbackToUser, UiCommand uiCommand) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(feedbackToUser, uiCommand);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        this.uiCommand \u003d uiCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        this.indexOfProject \u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}.","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * All other fields set to their default value.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        this.feedbackToUser \u003d feedbackToUser;","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        this.uiCommand \u003d UiCommand.NONE;","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        this.indexOfProject \u003d null;","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public UiCommand getUiCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return uiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public Index getIndexOfProject() {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return indexOfProject;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if there is a UiCommand.","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * @return true if UiCommand is not {@code UiCommand.NONE}","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasUiCommand() {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        return getUiCommand() !\u003d UiCommand.NONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 uiCommand \u003d\u003d otherCommandResult.uiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(feedbackToUser, uiCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":54,"samuelfangjw":43}},{"path":"src/main/java/seedu/address/logic/commands/DeleteContactFromCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":" * Deletes a project identified using it\u0027s displayed index from the project list.","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"public class DeleteContactFromCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"    public static final String COMMAND_WORD \u003d \"deleteCfrom\";","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"            + \": Deletes the contact identified by CONTACT_INDEX from a project identified by PROJECT_INDEX.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer) \"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \"TODO_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"            + \"Sample: \" + COMMAND_WORD + \" 2\" + PREFIX_REMOVE_TASK_INDEX + \" 1\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"Deleted Contact %1$s from Project %2$s\";","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"    private final Index targetProjectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    private final Index targetContactIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * Constructs a new DeleteContactFromCommand with the given indexes.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    public DeleteContactFromCommand(Index targetProjectIndex, Index targetContactIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        this.targetProjectIndex \u003d targetProjectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        this.targetContactIndex \u003d targetContactIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        if (targetProjectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        Project projectToEdit \u003d lastShownList.get(targetProjectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        if (targetContactIndex.getZeroBased() \u003e\u003d projectToEdit.getParticipants().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        Person personToDelete \u003d projectToEdit.getParticipant(targetContactIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        projectToEdit.deleteParticipant(targetContactIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROJECT_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"                personToDelete.getName(), projectToEdit.getProjectName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        return other \u003d\u003d this //short circuit if same project","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"                || (other instanceof DeleteContactFromCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 targetProjectIndex.equals(((DeleteContactFromCommand) other).targetProjectIndex)","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 targetContactIndex.equals(((DeleteContactFromCommand) other).targetContactIndex));","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":69}},{"path":"src/main/java/seedu/address/logic/commands/DeleteDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Deletes a Deadline identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class DeleteDeadlineCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"deleteD\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \": Deletes the deadline identified by it\u0027s index number within the displayed project.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \"DEADLINE_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Creates a DeleteDeadlineCommand to delete the specified {@code Deadline} from {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project that {@code Deadline} is to be deleted from.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param targetDeadlineIndex Index of Deadline that is to be deleted form {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public DeleteDeadlineCommand(Index projectIndex, Index targetDeadlineIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.targetDeadlineIndex \u003d targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        if (targetDeadlineIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                .getDeadlines().getDeadlines().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        projectToEdit.deleteDeadline(targetDeadlineIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_DEADLINE_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"                targetDeadlineIndex.getOneBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeleteDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((DeleteDeadlineCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetDeadlineIndex.equals(((DeleteDeadlineCommand) other).targetDeadlineIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":73}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Deletes a Event identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"deleteE\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \": Deletes the event identified by it\u0027s index number within the displayed project.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \"EVENT_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Creates a DeleteEventCommand to delete the specified {@code Event} from {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project that {@code Event} is to be deleted from.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param targetEventIndex Index of event that is to be deleted form {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public DeleteEventCommand(Index projectIndex, Index targetEventIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                .getEvents().getEvents().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        projectToEdit.deleteEvent(targetEventIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_EVENT_SUCCESS, targetEventIndex.getOneBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeleteEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((DeleteEventCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetEventIndex.equals(((DeleteEventCommand) other).targetEventIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":72}},{"path":"src/main/java/seedu/address/logic/commands/DeleteProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":" * Deletes a project identified using it\u0027s displayed index from the project list.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"    public static final String COMMAND_WORD \u003d \"deleteP\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"            + \": Deletes the project identified by index from CoLAB.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"            + \"Sample: \" + COMMAND_WORD + \" 2\";","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"    public static final String MESSAGE_DELETE_PROJECT_SUCCESS \u003d \"Deleted Project: %1$s\";","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"    public DeleteProjectCommand(Index targetIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        model.deleteProject(projectToDelete);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete));","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"        return other \u003d\u003d this //short circuit if same project","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"                || (other instanceof DeleteProjectCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteProjectCommand) other).targetIndex));","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":1,"Eriksen2411":51}},{"path":"src/main/java/seedu/address/logic/commands/DeleteTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Deletes a Todo identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommand extends Command {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"deleteT\";","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \": Deletes the todo identified by it\u0027s index number within the displayed project.\\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \"TODO_INDEX \\n\"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + PREFIX_REMOVE_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index targetTodoIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Creates a DeleteTodoCommand to delete the specified {@code Todo} from {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project that {@code Todo} is to be deleted from.","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param targetTodoIndex Index of todo that is to be deleted form {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public DeleteTodoCommand(Index projectIndex, Index targetTodoIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.targetTodoIndex \u003d targetTodoIndex;","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        if (targetTodoIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                .getTodos().getTodos().size()) {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        projectToEdit.deleteTodo(targetTodoIndex.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_DELETE_TODO_SUCCESS, targetTodoIndex.getOneBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeleteTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((DeleteTodoCommand) other).projectIndex))","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetTodoIndex.equals(((DeleteTodoCommand) other).targetTodoIndex); // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":72}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code EditCommand} with an {@code index} and a {@code editPersonDescriptor}.","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags);","lastModifiedDate":"2017-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"-":226,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, UiCommand.EXIT_APPLICATION);","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"-":18,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, UiCommand.OPEN_HELP_WINDOW);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":20,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/logic/commands/ListContactsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ListContactsCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"listC\";","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS, UiCommand.SHOW_CONTACTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":21,"samuelfangjw":4}},{"path":"src/main/java/seedu/address/logic/commands/ListProjectsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PROJECTS;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Lists all projects in the projects folder to the user.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class ListProjectsCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"listP\";","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all projects\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        model.updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":17,"samuelfangjw":7}},{"path":"src/main/java/seedu/address/logic/commands/MarkDeadlineCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Marks a Deadline as done. The Deadline is identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class MarkDeadlineCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"markD\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \": Marks the deadline identified by it\u0027s index number as done within the displayed project.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \"DEADLINE_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Creates a MarkDeadlineCommand to mark the specified {@code Deadline} from {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project in which {@code Deadline} is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param targetDeadlineIndex Index of deadline in {@code Project} that is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public MarkDeadlineCommand(Index projectIndex, Index targetDeadlineIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.targetDeadlineIndex \u003d targetDeadlineIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        if (targetDeadlineIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"                .getDeadlines().getDeadlines().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_DEADLINE_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        projectToEdit.markDeadline(targetDeadlineIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MARK_DEADLINE_SUCCESS, targetDeadlineIndex","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"                .getOneBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                || (other instanceof MarkDeadlineCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((MarkDeadlineCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetDeadlineIndex.equals(((MarkDeadlineCommand) other).targetDeadlineIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":74}},{"path":"src/main/java/seedu/address/logic/commands/MarkEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Marks a Event as done. The Event is identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class MarkEventCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"markE\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \": Marks the event identified by it\u0027s index number as done within the displayed project.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \"EVENT_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index targetEventIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Creates a MarkEventCommand to mark the specified {@code Event} from {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project in which {@code Event} is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param targetEventIndex Index of event in {@code Project} that is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public MarkEventCommand(Index projectIndex, Index targetEventIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.targetEventIndex \u003d targetEventIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        if (targetEventIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"                .getEvents().getEvents().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        projectToEdit.markEvent(targetEventIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MARK_EVENT_SUCCESS, targetEventIndex.getOneBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                || (other instanceof MarkEventCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((MarkEventCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetEventIndex.equals(((MarkEventCommand) other).targetEventIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":73}},{"path":"src/main/java/seedu/address/logic/commands/MarkTodoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Marks a Todo as done. The Todo is identified using it\u0027s displayed index from CoLAB.","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class MarkTodoCommand extends Command {","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final String COMMAND_WORD \u003d \"markT\";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"            + \": Marks the todo identified by it\u0027s index number as done within the displayed project.\\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"            + \"Parameters: PROJECT_INDEX (must be a positive integer)\"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \"TODO_INDEX \\n\"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\" + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"            + PREFIX_MARK_TASK_INDEX + \" 2\";","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    private final Index projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final Index targetTodoIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * Creates a MarkTodoCommand to mark the specified {@code Todo} from {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param projectIndex Index of project in which {@code Todo} is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param targetTodoIndex Index of todo in {@code Project} that is to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public MarkTodoCommand(Index projectIndex, Index targetTodoIndex) {","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        this.projectIndex \u003d projectIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        this.targetTodoIndex \u003d targetTodoIndex;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        if (projectIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        if (targetTodoIndex.getZeroBased() \u003e\u003d lastShownList.get(projectIndex.getZeroBased())","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"                .getTodos().getTodos().size()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d lastShownList.get(projectIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        requireNonNull(projectToEdit);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        projectToEdit.markTodo(targetTodoIndex.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        model.updateFilteredProjectList(Model.PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        return new CommandResult(String.format(Messages.MESSAGE_MARK_TODO_SUCCESS, targetTodoIndex.getOneBased()));","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                || (other instanceof MarkTodoCommand // instanceof handles nulls","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 projectIndex.equals(((MarkTodoCommand) other).projectIndex))","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 targetTodoIndex.equals(((MarkTodoCommand) other).targetTodoIndex); // state check","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":73}},{"path":"src/main/java/seedu/address/logic/commands/ShowOverviewTabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Show overview tab of a Project.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ShowOverviewTabCommand extends Command {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"tabO\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the overview tab of an open project.\\n\"","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Overview Tab\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.SHOW_OVERVIEW);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/main/java/seedu/address/logic/commands/ShowTodosTabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-15"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Show todos tab of a Project.","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ShowTodosTabCommand extends Command {","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"tabT\";","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the todos tab of an open project.\\n\"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Todos Tab\";","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.SHOW_TODOS);","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/main/java/seedu/address/logic/commands/ViewProjectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * View Project in CoLAB.","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectCommand extends Command {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public static final String COMMAND_WORD \u003d \"viewP\";","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            + \": Displays the project identified by the index number used in the displayed projects list.\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Viewing Project: %s\";","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private Index index;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a ViewProjectCommand to view the {@code Project} at the specified {@code index}.","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public ViewProjectCommand(Index index) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e lastShownList \u003d model.getFilteredProjectList();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, lastShownList.get(index.getZeroBased())),","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.DISPLAY_PROJECT, index);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":46}},{"path":"src/main/java/seedu/address/logic/parser/AddContactToCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactToCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"public class AddContactToCommandParser implements Parser\u003cAddContactToCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"     * Parses the given {@code String} of arguments in the context of the AddContactToCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"     * and returns an AddContactToCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public AddContactToCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactToCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        Index projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        return new AddContactToCommand(projectIndex, person);","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":62}},{"path":"src/main/java/seedu/address/logic/parser/AddDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new AddDeadlineCommand object.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommandParser implements Parser\u003cAddDeadlineCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the AddDeadlineCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * and returns an AddDeadlineCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public AddDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DEADLINE_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_DEADLINE_DATE)","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        Index deadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        LocalDate by \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DEADLINE_DATE).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        return new AddDeadlineCommand(deadlineIndex, deadline);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":54}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_INTERVAL;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new AddEventCommand object.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the AddEventCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"     * and returns an AddEventCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_REPEATABLE_INTERVAL,","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"                        PREFIX_REPEATABLE_DATE);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_REPEATABLE_INTERVAL, PREFIX_REPEATABLE_DATE)","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"        Index projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Interval interval \u003d ParserUtil.parseInterval(argMultimap.getValue(PREFIX_REPEATABLE_INTERVAL).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"        LocalDate at \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_REPEATABLE_DATE).get());","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"        Event event \u003d new Event(description, interval, at);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"        return new AddEventCommand(projectIndex, event);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":9,"Eriksen2411":48}},{"path":"src/main/java/seedu/address/logic/parser/AddProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Parses input arguments and creates a new AddProjectCommand object","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class AddProjectCommandParser implements Parser\u003cAddProjectCommand\u003e {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * Parses the given {@code String} of arguments in the context of the AddProjectCommand","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * and returns an AddProjectCommand object for execution.","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public AddProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME);","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d ParserUtil.parseProjectName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d new Project(projectName);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        return new AddProjectCommand(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":47}},{"path":"src/main/java/seedu/address/logic/parser/AddTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new AddTodoCommand object.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class AddTodoCommandParser implements Parser\u003cAddTodoCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTodoCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * and returns an AddTodoCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public AddTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION);","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        Index todoIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        String description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(description);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        return new AddTodoCommand(todoIndex, todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":50}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactToCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactFromCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ListProjectsCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkEventCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkTodoCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ShowOverviewTabCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ShowTodosTabCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        case AddProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            return new AddProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        case AddContactToCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"            return new AddContactToCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        case AddDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"            return new AddDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        case AddTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"            return new AddTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        case DeleteContactFromCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"            return new DeleteContactFromCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"        case DeleteProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"            return new DeleteProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"        case DeleteDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"            return new DeleteDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"        case DeleteTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-14"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"            return new DeleteTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-14"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        case ListContactsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"            return new ListContactsCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        case ListProjectsCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"            return new ListProjectsCommand();","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"        case MarkDeadlineCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"            return new MarkDeadlineCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"        case MarkEventCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"            return new MarkEventCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"        case MarkTodoCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"            return new MarkTodoCommandParser().parse(arguments);","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        case ViewProjectCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewProjectCommandParser().parse(arguments);","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        case ShowOverviewTabCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            return new ShowOverviewTabCommand();","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        case ShowTodosTabCommand.COMMAND_WORD:","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"            return new ShowTodosTabCommand();","lastModifiedDate":"2021-03-15"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"lirc572":8,"vevek":34,"Eriksen2411":5,"-":74,"samuelfangjw":23}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"    public static final Prefix PREFIX_INDEX \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_DEADLINE_DATE \u003d new Prefix(\"by/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_REPEATABLE_INTERVAL \u003d new Prefix(\"i/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"    public static final Prefix PREFIX_REPEATABLE_DATE \u003d new Prefix(\"at/\");","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_REMOVE_TASK_INDEX \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final Prefix PREFIX_MARK_TASK_INDEX \u003d new Prefix(\"m/\");","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"lirc572":1,"vevek":5,"Eriksen2411":1,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteContactFromCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactFromCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":" * Parses input arguments and creates a new DeleteContactFromCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"public class DeleteContactFromCommandParser implements Parser\u003cDeleteContactFromCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteContactFromCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"     * and returns a DeleteContactFromCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"    public DeleteContactFromCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REMOVE_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMOVE_TASK_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactFromCommand.MESSAGE_USAGE)","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"            );","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        Index targetContactIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REMOVE_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        return new DeleteContactFromCommand(index, targetContactIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":49}},{"path":"src/main/java/seedu/address/logic/parser/DeleteDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteDeadlineCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class DeleteDeadlineCommandParser implements Parser\u003cDeleteDeadlineCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteDeadlineCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * and returns a DeleteDeadlineCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public DeleteDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REMOVE_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMOVE_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"                    DeleteDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            Index targetDeadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REMOVE_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            return new DeleteDeadlineCommand(index, targetDeadlineIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteDeadlineCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                    pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":53}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REMOVE_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMOVE_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            Index targetEventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REMOVE_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            return new DeleteEventCommand(index, targetEventIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                    pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":53}},{"path":"src/main/java/seedu/address/logic/parser/DeleteProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteProjectCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommandParser implements Parser\u003cDeleteProjectCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteProjectCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"     * and returns a DeleteProjectCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"    public DeleteProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"            return new DeleteProjectCommand(index);","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":3,"Eriksen2411":26}},{"path":"src/main/java/seedu/address/logic/parser/DeleteTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new DeleteTodoCommand object","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommandParser implements Parser\u003cDeleteTodoCommand\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTodoCommand","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * and returns a DeleteTodoCommand object for execution.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public DeleteTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_REMOVE_TASK_INDEX);","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_REMOVE_TASK_INDEX) || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Index targetTodoIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_REMOVE_TASK_INDEX).get());","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        return new DeleteTodoCommand(projectIndex, targetTodoIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"vevek":46}},{"path":"src/main/java/seedu/address/logic/parser/MarkDeadlineCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkDeadlineCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new MarkDeadlineCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class MarkDeadlineCommandParser implements Parser\u003cMarkDeadlineCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkDeadlineCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * and returns a MarkDeadlineCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public MarkDeadlineCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MARK_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MARK_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDeadlineCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            Index targetDeadlineIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MARK_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            return new MarkDeadlineCommand(index, targetDeadlineIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkDeadlineCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                    pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":53}},{"path":"src/main/java/seedu/address/logic/parser/MarkEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkEventCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new MarkEventCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class MarkEventCommandParser implements Parser\u003cMarkEventCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkEventCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * and returns a MarkEventCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public MarkEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MARK_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MARK_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            Index targetEventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MARK_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            return new MarkEventCommand(index, targetEventIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkEventCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                    pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":53}},{"path":"src/main/java/seedu/address/logic/parser/MarkTodoCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MARK_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.MarkTodoCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Parses input arguments and creates a new MarkTodoCommand object","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class MarkTodoCommandParser implements Parser\u003cMarkTodoCommand\u003e {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTodoCommand","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"     * and returns a MarkTodoCommand object for execution.","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    public MarkTodoCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_MARK_TASK_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_MARK_TASK_INDEX)) {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTodoCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Index index;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            Index targetTodoIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_MARK_TASK_INDEX).get());","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"            return new MarkTodoCommand(index, targetTodoIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkTodoCommand.MESSAGE_USAGE),","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                    pe);","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"vevek":53}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"     * Parses a {@code String name} into a {@code ProjectName}.","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    public static ProjectName parseProjectName(String name) throws ParseException {","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        if (!ProjectName.isValidProjectName(trimmedName)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(ProjectName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        return new ProjectName(trimmedName);","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"Eriksen2411"},"content":"     * Parses a {@code String description} into a {@code description}.","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"Eriksen2411"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":152,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":153,"author":{"gitId":"Eriksen2411"},"content":"    public static String parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":154,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":155,"author":{"gitId":"Eriksen2411"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"        if (!trimmedDescription.matches(\"[^\\\\s].*\")) {","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"            throw new ParseException(Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":159,"author":{"gitId":"Eriksen2411"},"content":"        return trimmedDescription;","lastModifiedDate":"2021-03-13"},{"lineNumber":160,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":161,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":162,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":163,"author":{"gitId":"Eriksen2411"},"content":"     * Parses a {@code String Interval} into a {@code Interval}.","lastModifiedDate":"2021-03-13"},{"lineNumber":164,"author":{"gitId":"Eriksen2411"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":165,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the given {@code Interval} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":167,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":168,"author":{"gitId":"Eriksen2411"},"content":"    public static Interval parseInterval(String interval) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":169,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(interval);","lastModifiedDate":"2021-03-13"},{"lineNumber":170,"author":{"gitId":"Eriksen2411"},"content":"        String trimmedInterval \u003d interval.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":171,"author":{"gitId":"Eriksen2411"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":172,"author":{"gitId":"Eriksen2411"},"content":"            return Interval.valueOf(trimmedInterval);","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"Eriksen2411"},"content":"        } catch (IllegalArgumentException iae) {","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"vevek"},"content":"            throw new ParseException(Messages.MESSAGE_PARSER_INTERVAL_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":175,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"Eriksen2411"},"content":"     * Parses a {@code String date} into a {@code LocalDate}.","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"Eriksen2411"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"Eriksen2411"},"content":"     * @throws ParseException if the given {@code LocalDate} is invalid.","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"Eriksen2411"},"content":"    public static LocalDate parseDate(String date) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"Eriksen2411"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"Eriksen2411"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"Eriksen2411"},"content":"            return DateUtil.encodeDate(trimmedDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"Eriksen2411"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"vevek"},"content":"            throw new ParseException(Messages.MESSAGE_PARSER_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"Eriksen2411"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"vevek":7,"Eriksen2411":47,"-":124,"samuelfangjw":16}},{"path":"src/main/java/seedu/address/logic/parser/ViewProjectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ViewProjectCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * Parses input arguments and creates a new ViewProjectCommand object","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectCommandParser implements Parser\u003cViewProjectCommand\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewProjectCommand","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * and returns a ViewProjectCommand object for execution.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * @throws ParseException if the user input does not conform the expected format.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public ViewProjectCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            return new ViewProjectCommand(index);","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            throw new ParseException(","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewProjectCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":30}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    Predicate\u003cProject\u003e PREDICATE_SHOW_ALL_PROJECTS \u003d unused -\u003e true;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Projects File \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the user prefs\u0027 projects folder file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    Path getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    void setProjectsFolderFilePath(Path projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces projects folder data with the data in {@code projectsFolder}.","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    void setProjectsFolder(ReadOnlyProjectsFolder projectsFolder);","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    /** Returns the {@code ProjectsFolder} */","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    ReadOnlyProjectsFolder getProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the address book.","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    boolean hasProject(Project project);","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes the given project.","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"     * The project must exist in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    void deleteProject(Project target);","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"     * Adds the given project.","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"     * {@code project} must not already exist in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    void addProject(Project projects);","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the given project {@code target} with {@code editedProject}.","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"     * another existing project in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    void setProject(Project target, Project editedProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Project List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    /** Returns an unmodifiable view of the filtered projects list */","lastModifiedDate":"2021-03-10"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"    ObservableList\u003cProject\u003e getFilteredProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"     * Updates the filter of the filtered projects list to filter by the given {@code predicate}.","lastModifiedDate":"2021-03-10"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-03-10"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    void updateFilteredProjectList(Predicate\u003cProject\u003e predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":87,"samuelfangjw":66}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectsFolder projectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final FilteredList\u003cProject\u003e filteredProjects;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook,","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                        ReadOnlyProjectsFolder projectsFolder, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsFolder \u003d new ProjectsFolder(projectsFolder);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        filteredProjects \u003d new FilteredList\u003c\u003e(this.projectsFolder.getProjectsList());","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this(new AddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                \u0026\u0026 filteredProjects.equals(other.filteredProjects);","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Projects File \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    public Path getProjectsFolderFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"        return userPrefs.getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjectsFolderFilePath(Path projectsFolderFilePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        userPrefs.setProjectsFolderFilePath(projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjectsFolder(ReadOnlyProjectsFolder projectsFolder) {","lastModifiedDate":"2021-03-10"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsFolder.resetData(projectsFolder);","lastModifiedDate":"2021-03-10"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"    public ReadOnlyProjectsFolder getProjectsFolder() {","lastModifiedDate":"2021-03-10"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2021-03-10"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolder.hasProject(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    public void deleteProject(Project target) {","lastModifiedDate":"2021-03-10"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder.removeProject(target);","lastModifiedDate":"2021-03-10"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2021-03-10"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder.addProject(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"        updateFilteredProjectList(PREDICATE_SHOW_ALL_PROJECTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-10"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder.setProject(target, editedProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Projects List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"     * Returns an unmodifiable view of the list of {@code Project} backed by the internal list of","lastModifiedDate":"2021-03-10"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"     * {@code versionedProjectsFolder}","lastModifiedDate":"2021-03-10"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"        return filteredProjects;","lastModifiedDate":"2021-03-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"    public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2021-03-10"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"        filteredProjects.setPredicate(predicate);","lastModifiedDate":"2021-03-10"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"lirc572":2,"-":138,"samuelfangjw":89}},{"path":"src/main/java/seedu/address/model/ProjectsFolder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.UniqueProjectList;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Wraps all data at the projects level","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Duplicates are not allowed (by .isSameProject comparison)","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectsFolder implements ReadOnlyProjectsFolder {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private final UniqueProjectList projects;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     *   among constructors.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        projects \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolder() {}","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code Projects} using the Projects in {@code toBeCopied}","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolder(ReadOnlyProjectsFolder toBeCopied) {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        this();","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    // list overwrite operations","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the contents of the project folder with {@code projects}.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this.projects.setProjects(projects);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Resets the existing data of this {@code ProjectsFolder} with {@code newData}.","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData(ReadOnlyProjectsFolder newData) {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        setProjects(newData.getProjectsList());","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    //// project-level operations","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if a project with the same identity as {@code project} exists in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public boolean hasProject(Project project) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        return projects.contains(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a project to the project folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * The project must not already exist in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    public void addProject(Project project) {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-12"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        projects.add(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the given project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as another","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     * existing project in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(editedProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        projects.setProject(target, editedProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Removes {@code key} from this {@code ProjectsFolder}.","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * {@code key} must exist in the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    public void removeProject(Project key) {","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(key);","lastModifiedDate":"2021-03-12"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        projects.remove(key);","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    //// util methods","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        return projects.asUnmodifiableObservableList().size() + \" projects\";","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        // TODO: refine later","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e getProjectsList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        return projects.asUnmodifiableObservableList();","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ProjectsFolder // instanceof handles nulls","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projects.equals(((ProjectsFolder) other).projects));","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        return projects.hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":124}},{"path":"src/main/java/seedu/address/model/ReadOnlyProjectsFolder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Unmodifiable view of the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public interface ReadOnlyProjectsFolder {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"     * Returns an unmodifiable view of the projects folder.","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"     * This list will not contain any duplicate projects.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    ObservableList\u003cProject\u003e getProjectsList();","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":17}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    Path getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":16,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private Path projectsFolderFilePath \u003d Paths.get(\"data\" , \"projects.json\");","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        setProjectsFolderFilePath(newUserPrefs.getProjectsFolderFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public Path getProjectsFolderFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolderFilePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjectsFolderFilePath(Path projectsFolderFilePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsFolderFilePath \u003d projectsFolderFilePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projectsFolderFilePath.equals(o.projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        sb.append(\"\\nLocal addressbook data file location : \" + addressBookFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        sb.append(\"\\nLocal projects data file location : \" + projectsFolderFilePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":84,"samuelfangjw":20}},{"path":"src/main/java/seedu/address/model/project/DeadlineList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" * Represents a list of Deadlines.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"public class DeadlineList {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cCompletableDeadline\u003e deadlines \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * Constructs a empty {@code DeadlineList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public DeadlineList() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code DeadlineList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param deadlines A list of {@code deadlines}.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    public DeadlineList(List\u003cCompletableDeadline\u003e deadlines) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        requireNonNull(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        this.deadlines.addAll(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * Adds a deadline to this {@code DeadlineList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     * @param deadline {@code Deadline} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        this.deadlines.add(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code deadlines} as an {@code ObservableList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @return An {@code ObservableList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cCompletableDeadline\u003e getDeadlines() {","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        return this.deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     * Deletes a deadline from this {@code DeadlineList}","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     * .","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    public void deleteDeadline(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        this.deadlines.remove((int) i);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"     * Marks a deadline from this {@code DeadlineList} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public void markAsDone(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadline \u003d deadlines.get(i);","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        deadline.markAsDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // Force observable list to update","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        this.deadlines.set(i, deadline);","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a copy of this {@code DeadLineList}","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"     * @return A copy of this {@code DeadlineList}","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        return new DeadlineList(getDeadlines());","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code CompletableDeadline} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the deadlines occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cCompletableDeadline\u003e getDeadlinesOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        Predicate\u003cCompletableDeadline\u003e predicate \u003d deadline -\u003e deadline.getBy().isEqual(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        return deadlines.filtered(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"     * Returns a sequential stream with this {@code DeadlineList} as its source.","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"     * @return a sequential Stream over the completables in this {@code DeadlineList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"    public Stream\u003cCompletableDeadline\u003e stream() {","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"        return deadlines.stream();","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"                || (other instanceof DeadlineList // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 deadlines.equals(((DeadlineList) other).deadlines)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"        return deadlines.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":81,"samuelfangjw":42}},{"path":"src/main/java/seedu/address/model/project/EventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":" * Represents a list of Events.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class EventList {","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code EventList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public EventList () {}","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code EventList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * @param events A list of {@code Event}.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public EventList (List\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(events);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        this.events.addAll(events);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"     * Adds an event to this {@code EventList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"     * @param event {@code Event} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"        this.events.add(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"     * Deletes an event from this {@code EventList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Event} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    public void deleteEvent(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        this.events.remove((int) i);","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"     * Marks an event from this {@code EventList} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Event} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    public void markAsDone(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        this.events.get(i).markAsDone();","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a copy of this {@code EventList}","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * @return A copy of this {@code EventList}","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    public EventList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        return new EventList(getEvents());","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a sequential stream with this {@code EventList} as its source.","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * @return a sequential Stream over the events in this {@code EventList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    public Stream\u003cEvent\u003e stream() {","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        return events.stream();","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code events} as an {@code ObservableList\u003cEvent\u003e}","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     * @return An {@code ObservableList\u003cEvent\u003e}","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        return events;","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code Events} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the events occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cEvent\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cEvent\u003e getEventsOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        Predicate\u003cEvent\u003e predicate \u003d event -\u003e event.getAt().isEqual(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        return events.filtered(predicate);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof EventList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 events.equals(((EventList) other).events)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        return events.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"vevek":22,"Eriksen2411":10,"samuelfangjw":87}},{"path":"src/main/java/seedu/address/model/project/ParticipantList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ParticipantList {","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cPerson\u003e participants \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code ParticipantList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList() {}","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ParticipantList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * @param participants A list of {@code Person}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList(List\u003cPerson\u003e participants) {","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(participants);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        this.participants.addAll(participants);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"     * Returns the participants as a {@code ObservableList\u003cPerson\u003e}.","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"     * @return the participants as a {@code ObservableList\u003cPerson\u003e}.","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cPerson\u003e getParticipants() {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        return participants;","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"     *  Returns the number of participants in the {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"     * @return the number of participants in the {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public int size() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        return participants.size();","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"     *  Returns the {@code Person} at the specified position in this {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"     * @return the {@code Person} at the specified position in this {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public Person get(int index) {","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        return participants.get(index);","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"     * Deletes a {@code Person} from this {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"     * @param i Index of {@code Person} to be deleted.","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"    public void delete(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        participants.remove(i.intValue());","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a copy of this {@code ParticipantList}","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     * @return A copy of this {@code ParticipantList}","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        return new ParticipantList(getParticipants());","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a sequential stream with this {@code ParticipantList} as its source.","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     * @return a sequential Stream over the persons in this {@code ParticipantList}.","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    public Stream\u003cPerson\u003e stream() {","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        return participants.stream();","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a person to this {@code ParticipantList}.","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"     * @param person {@code Person} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    public void addParticipant(Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        this.participants.add(person);","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"     * Returns true if this {@code ParticipantList} has the provided {@code Person}.","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"     * @param person the person to test.","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"     * @return whether the {@code Person} is in this {@code ParticipantList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"    public boolean contains(Person person) {","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        return stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ParticipantList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 participants.equals(((ParticipantList) other).participants)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        return participants.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"lirc572":51,"samuelfangjw":67}},{"path":"src/main/java/seedu/address/model/project/Project.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Project in the address book.","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"public class Project {","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    // Identity fields","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectName projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    // Data fields","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final EventList events;","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private final TodoList todos;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    private final DeadlineList deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private final ParticipantList participants;","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an empty {@code Project}.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public Project(ProjectName projectName) {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projectName);","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        this.events \u003d new EventList();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        this.todos \u003d new TodoList();","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        this.deadlines \u003d new DeadlineList();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.participants \u003d new ParticipantList();","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code Project}","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    public Project(ProjectName projectName, EventList events, TodoList todos, DeadlineList deadlines,","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                   ParticipantList participants) {","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(projectName, events, todos, deadlines, participants);","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        this.events \u003d events;","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        this.todos \u003d todos;","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        this.deadlines \u003d deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        this.participants \u003d participants;","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName getProjectName() {","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        assert projectName !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    public EventList getEvents() {","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        assert events !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        return events;","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"    public TodoList getTodos() {","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        assert todos !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        return todos;","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"    public DeadlineList getDeadlines() {","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        assert deadlines !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        return deadlines;","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    public ParticipantList getParticipants() {","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        assert participants !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        return participants;","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code Events} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the events occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cEvent\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cEvent\u003e getEventsOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        return events.getEventsOnDate(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"     * Returns all {@code CompletableDeadline} that fall on a specific {@code LocalDate}","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"     * @param dateOfEvent The {@code LocalDate} which the deadlines occur on.","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@code FilteredList\u003cCompletableDeadline\u003e}","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    public FilteredList\u003cCompletableDeadline\u003e getDeadlinesOnDate(LocalDate dateOfEvent) {","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(dateOfEvent);","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        return deadlines.getDeadlinesOnDate(dateOfEvent);","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"     * Adds a participant to the {@code ParticipantList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"     * @param person {@code Person} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    public void addParticipant(Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        this.participants.addParticipant(person);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"     * Returns true if a participant with the same identity as {@code person} exists","lastModifiedDate":"2021-03-13"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"     * in this {@code Project}\u0027s {@code participants}.","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"     * @param person the {@code Person} to compare.","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"     * @return true if a participant with the same identity as {@code person} exists under this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"    public boolean hasParticipant(Person person) {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-03-24"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        return participants.contains(person);","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"     * Adds a deadline to {@code DeadlineList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"     * @param deadline {@code Deadline} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"    public void addDeadline(Deadline deadline) {","lastModifiedDate":"2021-03-14"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"        this.deadlines.addDeadline(deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":141,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":142,"author":{"gitId":"Eriksen2411"},"content":"     * Adds an event to {@code EventList} field of this {@code Project}.","lastModifiedDate":"2021-03-13"},{"lineNumber":143,"author":{"gitId":"Eriksen2411"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":144,"author":{"gitId":"Eriksen2411"},"content":"     * @param event {@code Event} to add.","lastModifiedDate":"2021-03-13"},{"lineNumber":145,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":146,"author":{"gitId":"Eriksen2411"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2021-03-13"},{"lineNumber":147,"author":{"gitId":"Eriksen2411"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":148,"author":{"gitId":"Eriksen2411"},"content":"        this.events.addEvent(event);","lastModifiedDate":"2021-03-13"},{"lineNumber":149,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":150,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"     * Adds an todo to {@code TodoList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"     * @param todo {@code Todo} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"        this.todos.addTodo(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"     *  Returns the {@code Person}. at the specified position in this {@code Project}\u0027s {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"     * @return the {@code Person}. at the specified position in this {@code Project}\u0027s {@code ParticipantList}.","lastModifiedDate":"2021-03-16"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"    public Person getParticipant(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        return participants.get(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"     *  Deletes a participant from {@code ParticipantList} field of this {@code Project}.","lastModifiedDate":"2021-03-16"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"     * @param i Index of {@code Person} to be deleted.","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"    public void deleteParticipant(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"        this.participants.delete(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":181,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":182,"author":{"gitId":"vevek"},"content":"     * Deletes a deadline from {@code DeadlineList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":183,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":184,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":185,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":186,"author":{"gitId":"vevek"},"content":"    public void deleteDeadline(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":188,"author":{"gitId":"vevek"},"content":"        this.deadlines.deleteDeadline(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":189,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":190,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":191,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":192,"author":{"gitId":"vevek"},"content":"     * Deletes an event from {@code EventList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":193,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":194,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Event} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":195,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":196,"author":{"gitId":"vevek"},"content":"    public void deleteEvent(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":197,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":198,"author":{"gitId":"vevek"},"content":"        this.events.deleteEvent(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":199,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":200,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":201,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":202,"author":{"gitId":"vevek"},"content":"     * Deletes a todo from {@code TodoList} field of this {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":203,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Todo} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":205,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":206,"author":{"gitId":"vevek"},"content":"    public void deleteTodo(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":207,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":208,"author":{"gitId":"vevek"},"content":"        this.todos.deleteTodo(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":209,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":210,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":211,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"vevek"},"content":"     * Marks a deadline from {@code DeadlineList} field of this {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Deadline} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":215,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":216,"author":{"gitId":"vevek"},"content":"    public void markDeadline(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":217,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":218,"author":{"gitId":"vevek"},"content":"        this.deadlines.markAsDone(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":219,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":220,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":221,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":222,"author":{"gitId":"vevek"},"content":"     * Marks an event from {@code EventList} field of this {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":223,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":224,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Event} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":225,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":226,"author":{"gitId":"vevek"},"content":"    public void markEvent(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":227,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":228,"author":{"gitId":"vevek"},"content":"        this.events.markAsDone(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":229,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":230,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":231,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":232,"author":{"gitId":"vevek"},"content":"     * Marks a todo from {@code TodoList} field of this {@code Project} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":233,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Todo} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":235,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":236,"author":{"gitId":"vevek"},"content":"    public void markTodo(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":237,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":238,"author":{"gitId":"vevek"},"content":"        this.todos.markAsDone(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":239,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":240,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if both projects have the same name.","lastModifiedDate":"2021-03-08"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"     * This defines a weaker notion of equality between two projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"    public boolean isSameProject(Project otherProject) {","lastModifiedDate":"2021-03-08"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"        if (otherProject \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"        return otherProject !\u003d null","lastModifiedDate":"2021-03-08"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getProjectName().equals(getProjectName());","lastModifiedDate":"2021-03-08"},{"lineNumber":252,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if both projects have the same identity and data fields.","lastModifiedDate":"2021-03-08"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"     * This defines a stronger notion of equality between two projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":258,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-08"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof Project)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"        Project otherProject \u003d (Project) other;","lastModifiedDate":"2021-03-08"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        return otherProject.getProjectName().equals(getProjectName())","lastModifiedDate":"2021-03-08"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getEvents().equals(getEvents())","lastModifiedDate":"2021-03-08"},{"lineNumber":271,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherProject.getTodos().equals(getTodos())","lastModifiedDate":"2021-03-13"},{"lineNumber":272,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherProject.getDeadlines().equals(getDeadlines())","lastModifiedDate":"2021-03-13"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherProject.getParticipants().equals(getParticipants());","lastModifiedDate":"2021-03-08"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":278,"author":{"gitId":"vevek"},"content":"        return Objects.hash(projectName, events, todos, deadlines, participants);","lastModifiedDate":"2021-03-13"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-08"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"        builder.append(getProjectName());","lastModifiedDate":"2021-03-08"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cEvent\u003e events \u003d getEvents().getEvents();","lastModifiedDate":"2021-03-08"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"        if (!events.isEmpty()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"            builder.append(\"; Events: \");","lastModifiedDate":"2021-03-08"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"            events.forEach(builder::append);","lastModifiedDate":"2021-03-08"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":292,"author":{"gitId":"vevek"},"content":"        List\u003cCompletableTodo\u003e todos \u003d getTodos().getTodos();","lastModifiedDate":"2021-03-13"},{"lineNumber":293,"author":{"gitId":"vevek"},"content":"        if (!todos.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":294,"author":{"gitId":"vevek"},"content":"            builder.append(\"; Todos: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":295,"author":{"gitId":"vevek"},"content":"            todos.forEach(builder::append);","lastModifiedDate":"2021-03-13"},{"lineNumber":296,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":297,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":298,"author":{"gitId":"vevek"},"content":"        List\u003cCompletableDeadline\u003e deadlines \u003d getDeadlines().getDeadlines();","lastModifiedDate":"2021-03-13"},{"lineNumber":299,"author":{"gitId":"vevek"},"content":"        if (!deadlines.isEmpty()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":300,"author":{"gitId":"vevek"},"content":"            builder.append(\"; Deadlines: \");","lastModifiedDate":"2021-03-13"},{"lineNumber":301,"author":{"gitId":"vevek"},"content":"            deadlines.forEach(builder::append);","lastModifiedDate":"2021-03-13"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":303,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":304,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cPerson\u003e participants \u003d getParticipants().getParticipants();","lastModifiedDate":"2021-03-08"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"        if (!participants.isEmpty()) {","lastModifiedDate":"2021-03-08"},{"lineNumber":306,"author":{"gitId":"samuelfangjw"},"content":"            builder.append(\"; Participants: \");","lastModifiedDate":"2021-03-08"},{"lineNumber":307,"author":{"gitId":"samuelfangjw"},"content":"            participants.forEach(builder::append);","lastModifiedDate":"2021-03-08"},{"lineNumber":308,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":309,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":310,"author":{"gitId":"samuelfangjw"},"content":"        return builder.toString();","lastModifiedDate":"2021-03-08"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"lirc572":40,"vevek":115,"Eriksen2411":10,"samuelfangjw":147}},{"path":"src/main/java/seedu/address/model/project/ProjectName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Project\u0027s name in the address book.","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidProjectName(String)}","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectName {","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"            \"Project name should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public final String projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectName}.","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @param name A valid project name.","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectName(String name) {","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        checkArgument(isValidProjectName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d name;","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if a given string is a valid project name.","lastModifiedDate":"2021-03-08"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public static boolean isValidProjectName(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public String toString() {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        return projectName;","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ProjectName // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 projectName.equals(((ProjectName) other).projectName)); // state check","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return projectName.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/main/java/seedu/address/model/project/ProjectNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Tests that a {@code Project}\u0027s {@code ProjectName} matches any of the keywords given.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameContainsKeywordsPredicate implements Predicate\u003cProject\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public boolean test(Project project) {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        return keywords.stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(project.getProjectName().projectName, keyword));","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof ProjectNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 keywords.equals(((ProjectNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":31}},{"path":"src/main/java/seedu/address/model/project/TodoList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":" * Represents a list of Todos.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class TodoList {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cCompletableTodo\u003e todos \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Constructs a empty {@code TodoList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public TodoList() {}","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code TodoList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * @param todos A list of {@code Todos}.","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public TodoList(List\u003cCompletableTodo\u003e todos) {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        requireNonNull(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        this.todos.addAll(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     * Adds a todo to this {@code TodoList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * @param todo {@code Todo} to add.","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public void addTodo(Todo todo) {","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        requireNonNull(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        this.todos.add(todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Returns {@code TodoList} as an {@code ObservableList\u003cCompletableTodo\u003e}","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * @return An {@code ObservableList\u003cCompletableTodo\u003e}","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cCompletableTodo\u003e getTodos() {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        return this.todos;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * Deletes an todo from this {@code TodoList}.","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Todo} to be deleted.","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    public void deleteTodo(Integer i) {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        this.todos.remove((int) i);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"     * Marks a todo from this {@code TodoList} as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"     * @param i Index of {@code Todo} to be marked as done.","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"    public void markAsDone(Integer i) {","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        requireNonNull(i);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todo \u003d todos.get(i);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        todo.markAsDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        // Force observable list to update","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        this.todos.set(i, todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a copy of this {@code TodoList}","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * @return A copy of this {@code TodoList}","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    public TodoList getCopy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        return new TodoList(getTodos());","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     * Returns a sequential stream with this {@code TodoList} as its source.","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"     * @return a sequential Stream over the Todos in this {@code TodoList}.","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"    public Stream\u003cCompletableTodo\u003e stream() {","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"        return this.todos.stream();","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"                || (other instanceof TodoList // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 this.todos.equals(((TodoList) other).todos)); // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"        return todos.hashCode();","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":80,"samuelfangjw":29}},{"path":"src/main/java/seedu/address/model/project/UniqueProjectList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2021-03-08"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * A list of projects that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-03-08"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * A project is considered unique by comparing using {@code Project#isSameProject(Project)}. As such, adding and","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * updating of projects uses Project#isSameProject(Project) for equality so as to ensure that the project being added","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * or updated is unique in terms of identity in the UniqueProjectList. However, the removal of a project uses","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * Project#equals(Object) so as to ensure that the project with exactly the same fields will be removed.","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":" *","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * @see Project#isSameProject(Project)","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"public class UniqueProjectList implements Iterable\u003cProject\u003e {","lastModifiedDate":"2021-03-08"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-03-08"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if the list contains an equivalent project as the given argument.","lastModifiedDate":"2021-03-08"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public boolean contains(Project toCheck) {","lastModifiedDate":"2021-03-08"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-03-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.stream().anyMatch(toCheck::isSameProject);","lastModifiedDate":"2021-03-08"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a project to the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * The project must not already exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public void add(Project toAdd) {","lastModifiedDate":"2021-03-08"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2021-03-08"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-03-08"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the project {@code target} in the list with {@code editedProject}.","lastModifiedDate":"2021-03-08"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     * The project identity of {@code editedProject} must not be the same as another existing project in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-08"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(target, editedProject);","lastModifiedDate":"2021-03-08"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-03-08"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-03-08"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        if (!target.isSameProject(editedProject) \u0026\u0026 contains(editedProject)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2021-03-08"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        internalList.set(index, editedProject);","lastModifiedDate":"2021-03-08"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * Removes the equivalent project from the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     * The project must exist in the list.","lastModifiedDate":"2021-03-08"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    public void remove(Project toRemove) {","lastModifiedDate":"2021-03-08"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-03-08"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"            throw new ProjectNotFoundException();","lastModifiedDate":"2021-03-08"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(UniqueProjectList replacement) {","lastModifiedDate":"2021-03-08"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-03-08"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-03-08"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Replaces the contents of this list with {@code projects}.","lastModifiedDate":"2021-03-08"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * {@code projects} must not contain duplicate projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects(List\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-08"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projects);","lastModifiedDate":"2021-03-08"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        if (!projectsAreUnique(projects)) {","lastModifiedDate":"2021-03-08"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            throw new DuplicateProjectException();","lastModifiedDate":"2021-03-08"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        internalList.setAll(projects);","lastModifiedDate":"2021-03-08"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-03-08"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    public ObservableList\u003cProject\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-03-08"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-03-08"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    public Iterator\u003cProject\u003e iterator() {","lastModifiedDate":"2021-03-08"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-03-08"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-08"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-03-08"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"                || (other instanceof UniqueProjectList // instanceof handles nulls","lastModifiedDate":"2021-03-08"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 internalList.equals(((UniqueProjectList) other).internalList));","lastModifiedDate":"2021-03-08"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-08"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-08"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-03-08"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-08"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if {@code projects} contains only unique projects.","lastModifiedDate":"2021-03-08"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-08"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    private boolean projectsAreUnique(List\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-08"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        for (int i \u003d 0; i \u003c projects.size() - 1; i++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            for (int j \u003d i + 1; j \u003c projects.size(); j++) {","lastModifiedDate":"2021-03-08"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"                if (projects.get(i).isSameProject(projects.get(j))) {","lastModifiedDate":"2021-03-08"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                    return false;","lastModifiedDate":"2021-03-08"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                }","lastModifiedDate":"2021-03-08"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-08"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-08"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        return true;","lastModifiedDate":"2021-03-08"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":142}},{"path":"src/main/java/seedu/address/model/project/exceptions/DuplicateProjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation will result in duplicate Projects (Projects are considered duplicates if they have the","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" * same identity).","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"public class DuplicateProjectException extends RuntimeException {","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    public DuplicateProjectException() {","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"        super(\"Operation would result in duplicate projects\");","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":11}},{"path":"src/main/java/seedu/address/model/project/exceptions/ProjectNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project.exceptions;","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Signals that the operation is unable to find the specified project.","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":6}},{"path":"src/main/java/seedu/address/model/task/CompletableDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"public abstract class CompletableDeadline {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    protected String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    protected LocalDate by;","lastModifiedDate":"2021-03-12"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public CompletableDeadline(String description, LocalDate by) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, by);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-03-12"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the CompletableDeadline is Done.","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    public CompletableDeadline(String description, LocalDate by, Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, by, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-03-12"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * Returns the deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate representing the deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public LocalDate getBy() {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        assert this.by !\u003d null : \"by should not be null!\";","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        return this.by;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     * Returns a status icon dependent on the status of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"     * @return A string representing the CompletableDeadline\u0027s status.","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assert isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableDeadline description.","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"     * @return A String representing the CompletableDeadline description.","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        return this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableDeadline description.","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"     * Returns the status of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the CompletableDeadline\u0027s status.","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"        return this.isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the by date.","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     * @return String representation of by date.","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-12"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    public String getStringByDate() {","lastModifiedDate":"2021-03-12"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        assert this.by !\u003d null;","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"        return DateUtil.decodeDateForStorage(by);","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    };","lastModifiedDate":"2021-03-12"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-12"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2021-03-13"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a CompletableDeadline is equal to another Object.","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the CompletableDeadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":129,"samuelfangjw":9}},{"path":"src/main/java/seedu/address/model/task/CompletableTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"public abstract class CompletableTodo {","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    protected String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public CompletableTodo(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     * Constructor for CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * @param description Description of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the CompletableTodo is Done.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public CompletableTodo(String description, Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(description, isDone);","lastModifiedDate":"2021-03-12"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * Returns a status icon dependent on the status of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"     * @return A string representing the CompletableTodo\u0027s status.","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        assert isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableTodo description.","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     * @return A String representing the CompletableTodo description.","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        return this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     * Returns the CompletableTodo description.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     * Returns the status of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the CompletableTodo\u0027s status.","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        return this.isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-12"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid Description.","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a CompletableTodo is equal to another Object.","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":109,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/model/task/Interval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":" * Recognised Intervals of Interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"public enum Interval {","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"    NONE,","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"    DAILY,","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"    WEEKLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"    FORTNIGHTLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"    MONTHLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    YEARLY,","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":13}},{"path":"src/main/java/seedu/address/model/task/Repeatable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"public abstract class Repeatable {","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"    public static final String MESSAGE_CONSTRAINTS_DESCRIPTION \u003d \"Description can take any values, and it should \"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"            + \"not be blank\";","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"    /*","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * The first character of the description must not be a whitespace,","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    public static final String DESCRIPTION_VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    protected String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    protected Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    protected Interval interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    protected LocalDate at;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    public Repeatable(String description, Interval interval, LocalDate at) {","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, interval, at);","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        this.interval \u003d interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * Constructor for Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Repeatable is Done.","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public Repeatable(String description, Interval interval, LocalDate at, Boolean isDone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        requireAllNonNull(description, interval, at, isDone);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS_DESCRIPTION);","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        this.interval \u003d interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Returns a status icon dependent on the status of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * @return A string representing the Repeatable\u0027s status.","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        assert isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"     * Returns the Repeatable description.","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"     * @return A String representing the Repeatable description.","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        assert this.description !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"     * Returns the status of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"     * @return A Boolean representing the Repeatable\u0027s status.","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    public Boolean getIsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assert this.isDone !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        return this.isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"     * Returns the date of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"     * @return A LocalDate representing the Repeatable\u0027s date.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"    public LocalDate getAt() {","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        assert this.at !\u003d null : \"at should not be null!\";","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        return this.at;","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"     * Marks the task as done.","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"    public void markAsDone() {","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"     * Returns the Repeatable\u0027s interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"     * @return Interval interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"    public abstract Interval getRecurrence();","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"     * Sets the Repeatable\u0027s interval to specified level.","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"     * @param interval Level of Interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"    public abstract void setRecurrence(Interval interval);","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"     * Returns true if a given string is a valid description.","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        return test.matches(DESCRIPTION_VALIDATION_REGEX);","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Repeatable is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"    public abstract boolean equals(Object other);","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"    public abstract int hashCode();","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Repeatable.","lastModifiedDate":"2021-03-10"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"    public abstract String toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":130}},{"path":"src/main/java/seedu/address/model/task/deadline/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-09"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-09"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-09"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-09"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":" * Represents a CompletableDeadline as a Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-09"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"public class Deadline extends CompletableDeadline {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-03-09"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2021-03-09"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        super(description, by);","lastModifiedDate":"2021-03-12"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     * Constructor for Deadline.","lastModifiedDate":"2021-03-09"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Deadline is Done.","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * @param by Deadline of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public Deadline(String description, LocalDate by, Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        super(description, by, isDone);","lastModifiedDate":"2021-03-12"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Deadline is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-09"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-09"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-09"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Deadline)) {","lastModifiedDate":"2021-03-09"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-09"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-09"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        Deadline otherDeadline \u003d (Deadline) other;","lastModifiedDate":"2021-03-09"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        return otherDeadline.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-09"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherDeadline.getIsDone().equals(getIsDone())","lastModifiedDate":"2021-03-09"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherDeadline.getBy().equals(getBy());","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-09"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-09"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone, by);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-09"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-09"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Deadline.","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-09"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-09"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-09"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        return \"[D]\" + this.getStatusIcon() + \" \" + this.description + \" (by: \" + DateUtil.decodeDate(by) + \")\";","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-09"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-09"}],"authorContributionMap":{"vevek":66,"samuelfangjw":2}},{"path":"src/main/java/seedu/address/model/task/repeatable/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.repeatable;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Repeatable;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" * Represents a Repeatable as an Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"public class Event extends Repeatable {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * @param at Date of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public Event(String description, Interval interval, LocalDate at) {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        super(description, interval, at);","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"     * Constructor for Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Event is Done.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * @param at Date of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public Event(String description, Interval interval, Boolean isDone, LocalDate at) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        super(description, interval, at, isDone);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"     * Returns the Event\u0027s interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * @return Interval interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public Interval getRecurrence() {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        return this.interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"     * Sets the Event\u0027s interval to specified level.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"     * @param interval Level of Interval.","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    public void setRecurrence(Interval interval) {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        assert interval !\u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        this.interval \u003d interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Event is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        return otherEvent.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherEvent.getIsDone().equals(getIsDone())","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherEvent.getRecurrence().equals(getRecurrence())","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 otherEvent.getAt().equals(getAt());","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone, at);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the Event.","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        return \"[E]\" + this.getStatusIcon() + \" \" + this.description + \" (at: \" + DateUtil.decodeDate(at) + \")\";","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":84,"samuelfangjw":3}},{"path":"src/main/java/seedu/address/model/task/todo/Todo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import java.util.Objects;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":" * Represents a CompletableTodo as a Todo.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"public class Todo extends CompletableTodo {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public Todo(String description) {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        super(description);","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"     * Constructor for Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"     * @param description Description of the Todo.","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"     * @param isDone Marks whether the Todo is Done.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public Todo(String description, Boolean isDone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        super(description, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"     * Checks if an instance of a Todo is equal to another Object.","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"     * @param other Object to be compared with.","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"     * @return True if both objects are equal. Else return false.","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"            return true;","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        if (!(other instanceof Todo)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"            return false;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        Todo otherTodo \u003d (Todo) other;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        return otherTodo.getDescription().equals(getDescription())","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                \u0026\u0026 otherTodo.getIsDone().equals(getIsDone());","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    public int hashCode() {","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        return Objects.hash(description, isDone);","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"     * Returns a String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"     * @return A String representation of the CompletableTodo.","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    public String toString() {","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        return \"[T]\" + this.getStatusIcon() + \" \" + this.description;","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":63}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ParticipantList;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DONE \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a {@code ReadOnlyProjectsFolder} with sample data.","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code ReadOnlyProjectsFolder} with sample data.","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    public static ReadOnlyProjectsFolder getSampleProjectsFolder() {","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder samplePf \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        for (Project sampleProject : getSampleProjects()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"            samplePf.addProject(sampleProject);","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        return samplePf;","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Returns an array of sample {@code Projects}","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * @return sample {@code Projects}","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    public static Project[] getSampleProjects() {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"            return new Project[] { getCS2103TProject(), getCS2101Project() };","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            assert false : \"error with sample projects\";","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            return new Project[] {}; // return empty projects array","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2103T project.","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    public static Project getCS2103TProject() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d new ProjectName(\"CS2103T Team Project\");","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(projectName, getCS2103TEventList(), getCS2103TTodosList(),","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"                getCS2103TDeadlineList(), getCS2103TParticipantsList());","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2101 project.","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    public static Project getCS2101Project() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName projectName \u003d new ProjectName(\"CS2101 OP2\");","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(projectName, getCS2101EventList(), getCS2101TodosList(),","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"                getCS2101DeadlineList(), getCS2101ParticipantsList());","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    private static EventList getCS2103TEventList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        Event eventWeeklyMeeting \u003d new Event(\"Weekly Project Meeting\", Interval.WEEKLY,","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"31-01-2021\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventWeeklyMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2103TDeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone1 \u003d new Deadline(\"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"01-03-2021\"), DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone2 \u003d new Deadline(\"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"15-03-2021\"), DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone3 \u003d new Deadline(\"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"31-03-2021\"), NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone4 \u003d new Deadline(\"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"12-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone1);","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone2);","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone3);","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone4);","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getCS2103TTodosList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoUpdateDocs \u003d new Todo(\"Update documentation\", DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoAddCommand \u003d new Todo(\"Finish add command\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoTests \u003d new Todo(\"Add unit tests\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoBrainstormNewIdea \u003d new Todo(\"Brainstorm new feature\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoUpdateDocs);","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoAddCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoTests);","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoBrainstormNewIdea);","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"    private static ParticipantList getCS2103TParticipantsList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        Person dahn \u003d new Person(new Name(\"Dahn\"), new Phone(\"91234561\"), new Email(\"dahn@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"        Person ruochen \u003d new Person(new Name(\"Ruochen\"), new Phone(\"91234562\"), new Email(\"ruochen@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        Person samuel \u003d new Person(new Name(\"Samuel\"), new Phone(\"91234563\"), new Email(\"samuel@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        Person vevek \u003d new Person(new Name(\"Vevek\"), new Phone(\"91234564\"), new Email(\"vevek@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(dahn);","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(ruochen);","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(samuel);","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(vevek);","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        return participantList;","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"    private static EventList getCS2101EventList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        Event eventPlanningMeeting \u003d new Event(\"OP2 Planning Meeting\",","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"                Interval.NONE, encodeDate(\"17-03-2021\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Consultation \u003d new Event(\"OP2 Consultation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"                Interval.NONE, encodeDate(\"23-03-2021\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2ProductDemo \u003d new Event(\"OP2 Product Demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"                Interval.NONE, encodeDate(\"06-04-2021\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Pitch \u003d new Event(\"OP2 Pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"                Interval.NONE, encodeDate(\"09-04-2021\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventPlanningMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Consultation);","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2ProductDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Pitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2101DeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineDemo \u003d new Deadline(\"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"05-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlinePitch \u003d new Deadline(\"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"                encodeDate(\"08-04-2021\"), NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlinePitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getCS2101TodosList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSplitWorkload \u003d new Todo(\"Split Workload\", DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSlidesForPitch \u003d new Todo(\"Do up slides for pitch\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoVideoForDemo \u003d new Todo(\"Do up video for demo\", NOT_DONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSplitWorkload);","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSlidesForPitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoVideoForDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"    private static ParticipantList getCS2101ParticipantsList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"samuelfangjw"},"content":"        Person dahn \u003d new Person(new Name(\"Dahn\"), new Phone(\"91234561\"), new Email(\"dahn@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"        Person ruochen \u003d new Person(new Name(\"Ruochen\"), new Phone(\"91234562\"), new Email(\"ruochen@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"        Person samuel \u003d new Person(new Name(\"Samuel\"), new Phone(\"91234563\"), new Email(\"samuel@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        Person vevek \u003d new Person(new Name(\"Vevek\"), new Phone(\"91234564\"), new Email(\"vevek@colab.com\"),","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"                new Address(\"1 CoLAB Road\"), new HashSet\u003c\u003e());","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(dahn);","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(ruochen);","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(samuel);","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(vevek);","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"samuelfangjw"},"content":"        return participantList;","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":64,"samuelfangjw":187}},{"path":"src/main/java/seedu/address/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":45,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedDeadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":" * Jackson-friendly version of {@link CompletableDeadline}.","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"class JsonAdaptedDeadline {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final String by;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code description}, {@code interval},","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * {@code at} and {@code isDone}.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedDeadline(@JsonProperty(\"description\")String description,","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                               @JsonProperty(\"date\") String by,","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                               @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d by;","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * Converts a given {@code Deadline} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedDeadline(CompletableDeadline source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        by \u003d source.getStringByDate();","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d source.getIsDone();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Deadline} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    public CompletableDeadline toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            LocalDate date \u003d DateUtil.encodeDate(by);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"            return new Deadline(description, date , isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    private LocalDate parseDate(String date) throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"            return DateUtil.encodeDate(date);","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"            // TODO: update e.getMessage with date constraints","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":11,"samuelfangjw":56}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final String description;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final String interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final String at;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code description}, {@code interval},","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * {@code at} and {@code isDone}.","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"description\")String description,","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                            @JsonProperty(\"interval\") String interval,","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                            @JsonProperty(\"date\") String at,","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                            @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        this.interval \u003d interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        this.at \u003d at;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"        interval \u003d source.getRecurrence().name();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        at \u003d DateUtil.decodeDateForStorage(source.getAt());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d source.getIsDone();","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Event} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        Interval eventInterval;","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            eventInterval \u003d Interval.valueOf(interval);","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate date;","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            date \u003d DateUtil.encodeDate(at);","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        return new Event(description, eventInterval, isDone, date);","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"Eriksen2411":1,"samuelfangjw":70}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedProject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ParticipantList;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * Jackson-friendly version of {@link Project}.","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"class JsonAdaptedProject {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Project\u0027s %s field is missing!\";","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final String projectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cJsonAdaptedEvent\u003e eventList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private final List\u003cJsonAdaptedTodo\u003e todoList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    private final List\u003cJsonAdaptedDeadline\u003e deadlineList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cJsonAdaptedPerson\u003e participantsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code JsonAdaptedProject} with the given project details.","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedProject(@JsonProperty(\"projectName\") String projectName,","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                              @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e eventList,","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"                              @JsonProperty(\"todos\") List\u003cJsonAdaptedTodo\u003e todoList,","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"                              @JsonProperty(\"deadlines\") List\u003cJsonAdaptedDeadline\u003e deadlineList,","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                              @JsonProperty(\"participants\") List\u003cJsonAdaptedPerson\u003e participantsList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d projectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        if (eventList !\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            this.eventList.addAll(eventList);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        if (todoList !\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"            this.todoList.addAll(todoList);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        if (deadlineList !\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"            this.deadlineList.addAll(deadlineList);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        if (participantsList !\u003d null) {","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            this.participantsList.addAll(participantsList);","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * Converts a given {@code Project} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public JsonAdaptedProject(Project source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d source.getProjectName().toString();","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addAll(source.getEvents().stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"                .map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        todoList.addAll(source.getTodos().stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                .map(JsonAdaptedTodo::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        deadlineList.addAll(source.getDeadlines().stream()","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"                .map(JsonAdaptedDeadline::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        participantsList.addAll(source.getParticipants().stream()","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                .map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"     * Converts this Jackson-friendly adapted project object into the model\u0027s {@code Project} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted project.","lastModifiedDate":"2021-03-10"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    public Project toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        if (projectName \u003d\u003d null) {","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                    ProjectName.class.getSimpleName()));","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName convertedProjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"            convertedProjectName \u003d new ProjectName(projectName);","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"            throw new IllegalValueException(e.getMessage());","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        final List\u003cEvent\u003e projectEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        for (JsonAdaptedEvent event : eventList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"            projectEvents.add(event.toModelType());","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"        final List\u003cCompletableTodo\u003e projectTodos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        for (JsonAdaptedTodo todo : todoList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"            projectTodos.add(todo.toModelType());","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"        final List\u003cCompletableDeadline\u003e projectDeadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"        for (JsonAdaptedDeadline deadline : deadlineList) {","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"            projectDeadlines.add(deadline.toModelType());","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        final List\u003cPerson\u003e projectParticipants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        for (JsonAdaptedPerson person : participantsList) {","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"            projectParticipants.add(person.toModelType());","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(convertedProjectName, new EventList(projectEvents), new TodoList(projectTodos),","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"                new DeadlineList(projectDeadlines), new ParticipantList(projectParticipants));","lastModifiedDate":"2021-03-13"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":27,"samuelfangjw":94}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTodo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":" * Jackson-friendly version of {@link CompletableTodo}.","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"class JsonAdaptedTodo {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    private final String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    private final Boolean isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given {@code description} and {@code isDone}.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedTodo(@JsonProperty(\"description\")String description,","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"                           @JsonProperty(\"isDone\") Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"     * Converts a given {@code CompletableTodo} into this class for Jackson use.","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public JsonAdaptedTodo(CompletableTodo source) {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        description \u003d source.getDescription();","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        isDone \u003d source.getIsDone();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code CompletableTodo} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"     *","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public CompletableTodo toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":43}},{"path":"src/main/java/seedu/address/storage/JsonProjectsFolderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * A class to access ProjectsFolder data stored as a json file on the hard disk.","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"public class JsonProjectsFolderStorage implements ProjectsFolderStorage {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonProjectsFolderStorage.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Path filePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public JsonProjectsFolderStorage(Path filePath) {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public Path getProjectsFolderFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        return filePath;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder() throws DataConversionException {","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return readProjectsFolder(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Similar to {@link #readProjectsFolder()}.","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        Optional\u003cJsonSerializableProjectsFolder\u003e jsonProjectsFolder \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"                filePath, JsonSerializableProjectsFolder.class);","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        if (!jsonProjectsFolder.isPresent()) {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            return Optional.empty();","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            return Optional.of(jsonProjectsFolder.get().toModelType());","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder) throws IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        saveProjectsFolder(projectsFolder, filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * Similar to {@link #saveProjectsFolder(ReadOnlyProjectsFolder)}.","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    public void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder, Path filePath) throws IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(projectsFolder, filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableProjectsFolder(projectsFolder), filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":80}},{"path":"src/main/java/seedu/address/storage/JsonSerializableProjectsFolder.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * An Immutable Projects Folder that is serializable to JSON format.","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"@JsonRootName(value \u003d \"projects\")","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"class JsonSerializableProjectsFolder {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public static final String MESSAGE_DUPLICATE_PROJECTS \u003d \"Projects list contains duplicate project(s).\";","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final List\u003cJsonAdaptedProject\u003e projects \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code JsonSerializableProjectsFolder} with the given projects.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @JsonCreator","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public JsonSerializableProjectsFolder(@JsonProperty(\"projects\") List\u003cJsonAdaptedProject\u003e projects) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        this.projects.addAll(projects);","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Converts a given {@code ReadOnlyProjectsFolder} into this class for Jackson use.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableProjectsFolder}.","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public JsonSerializableProjectsFolder(ReadOnlyProjectsFolder source) {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        projects.addAll(source.getProjectsList().stream().map(JsonAdaptedProject::new).collect(Collectors.toList()));","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Converts this projects folder into the model\u0027s {@code ProjectsFolder} object.","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolder toModelType() throws IllegalValueException {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder projectsFolder \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        for (JsonAdaptedProject jsonAdaptedProject : projects) {","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            Project project \u003d jsonAdaptedProject.toModelType();","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            if (projectsFolder.hasProject(project)) {","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PROJECTS);","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            projectsFolder.addProject(project);","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/main/java/seedu/address/storage/ProjectsFolderStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Represents a storage for {@link seedu.address.model.ProjectsFolder}.","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public interface ProjectsFolderStorage {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    Path getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Returns Projects Folder data as a {@link ReadOnlyProjectsFolder}.","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     * @return A {@link ReadOnlyProjectsFolder} or {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * @see #getProjectsFolderFilePath()","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Saves the given {@link ReadOnlyProjectsFolder} to the storage.","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectsFolder cannot be null.","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder) throws IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     * @see #saveProjectsFolder(ReadOnlyProjectsFolder)","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder, Path filePath) throws IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":47}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public interface Storage extends AddressBookStorage, ProjectsFolderStorage, UserPrefsStorage {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    Path getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder() throws DataConversionException, IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder) throws IOException;","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":31,"samuelfangjw":11}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectsFolderStorage projectsFolderStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage}, {@code ProjectsFolderStorage}","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * and {@code UserPrefStorage}.","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, ProjectsFolderStorage projectsFolderStorage,","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsFolderStorage \u003d projectsFolderStorage;","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ProjectsFolder methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public Path getProjectsFolderFilePath() {","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolderStorage.getProjectsFolderFilePath();","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder() throws DataConversionException, IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        return readProjectsFolder(projectsFolderStorage.getProjectsFolderFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    public Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder(Path filePath)","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolderStorage.readProjectsFolder(filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    public void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder) throws IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        saveProjectsFolder(projectsFolder, projectsFolderStorage.getProjectsFolderFilePath());","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder, Path filePath) throws IOException {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolderStorage.saveProjectsFolder(projectsFolder, filePath);","lastModifiedDate":"2021-03-10"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"samuelfangjw":38}},{"path":"src/main/java/seedu/address/ui/CompletableDeadlineCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code CompletableDeadline}.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableDeadlineCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"CompletableDeadlineListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public final CompletableDeadline deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label description;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label completedLabel;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code CompletableDeadlineCard} with the given {@code CompletableDeadline} without an index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableDeadlineCard(CompletableDeadline deadline) {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        description.setText(deadline.getDescription());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        date.setText(DateUtil.decodeDate(deadline.getBy()));","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel.setText(deadline.getIsDone() ? \"✔\" : \"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code CompletableDeadlineCard} with the given {@code CompletableDeadline} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableDeadlineCard(CompletableDeadline deadline, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(deadline, displayedIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        description.setText(deadline.getDescription());","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        date.setText(DateUtil.decodeDate(deadline.getBy()));","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel.setText(getTextToDisplay(deadline.getIsDone()));","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the text of the completed label that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code String} containing the text that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    public static String getTextToDisplay(boolean isDone) {","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        return isDone ? \"✔\" : \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof CompletableDeadlineCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard card \u003d (CompletableDeadlineCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 deadline.equals(card.deadline);","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":87}},{"path":"src/main/java/seedu/address/ui/CompletableTodoCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code CompletableTodo}.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTodoCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"CompletableTodoListCard.fxml\";","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public final CompletableTodo todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private Label description;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label completedLabel;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code CompletableTodoCard} with the given {@code CompletableTodo} and index to display.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTodoCard(CompletableTodo todo, int displayedIndex) {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        description.setText(todo.getDescription());","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel.setText(todo.getIsDone() ? \"✔\" : \"\");","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the text of the completed label that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code String} containing the text that is to be displayed.","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public static String getTextToDisplay(boolean isDone) {","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        return isDone ? \"✔\" : \"\";","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof CompletableTodoCard)) {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard card \u003d (CompletableTodoCard) other;","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 todo.equals(card.todo);","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":64}},{"path":"src/main/java/seedu/address/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of an {@code Event}.","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"EventCard.fxml\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public final Event event;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private Label eventDescription;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label interval;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an {@code EventCard} with the given {@code Event} without an index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public EventCard(Event event) {","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(event);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(\"\");","lastModifiedDate":"2021-03-23"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        eventDescription.setText(event.getDescription());","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        interval.setText(event.getRecurrence().toString());","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        date.setText(DateUtil.decodeDate(event.getAt()));","lastModifiedDate":"2021-03-23"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * Creates an {@code EventCard} with the given {@code Event} and index to display.","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        requireAllNonNull(event, displayedIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        this.event \u003d event;","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        eventDescription.setText(event.getDescription());","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        interval.setText(event.getRecurrence().toString());","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        date.setText(DateUtil.decodeDate(event.getAt()));","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":78}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2021s2-cs2103t-t11-2.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UI_PROJECT_NOT_DISPLAYED;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private static final int PROJECTS_TAB \u003d 0;","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private static final int CONTACTS_TAB \u003d 1;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    private SidePanel sidePanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    private TodayPanel todayPanel;","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectDisplayPanel projectDisplayPanel;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane sidePanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane infoDisplayPlaceholder;","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel \u003d new SidePanel(logic.getFilteredProjectsList(), this);","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        sidePanelPlaceholder.getChildren().add(sidePanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel \u003d new ProjectDisplayPanel();","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"            if (commandResult.hasUiCommand()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"                executeUiCommand(commandResult);","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    private void executeUiCommand(CommandResult commandResult) throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"        switch (commandResult.getUiCommand()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        case EXIT_APPLICATION:","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"            handleExit();","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        case OPEN_HELP_WINDOW:","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"            handleHelp();","lastModifiedDate":"2021-03-13"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"        case DISPLAY_PROJECT:","lastModifiedDate":"2021-03-13"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"            handleSelectProject(commandResult.getIndexOfProject());","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"        case SHOW_CONTACTS:","lastModifiedDate":"2021-03-13"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"            handleDisplayContacts();","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"            break;","lastModifiedDate":"2021-03-13"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        case SHOW_OVERVIEW:","lastModifiedDate":"2021-03-24"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"            handleShowEventsTab();","lastModifiedDate":"2021-03-15"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"            break;","lastModifiedDate":"2021-03-15"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        case SHOW_TODOS:","lastModifiedDate":"2021-03-15"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"            handleShowTodosTab();","lastModifiedDate":"2021-03-15"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"            break;","lastModifiedDate":"2021-03-15"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        default:","lastModifiedDate":"2021-03-13"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"            assert false : \"Command result should not be invalid\";","lastModifiedDate":"2021-03-13"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"    // Handlers for UI Commands","lastModifiedDate":"2021-03-13"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2021-03-13"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2021-03-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2021-03-13"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2021-03-13"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2021-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2021-03-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2021-03-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2021-03-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2021-03-13"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2021-03-13"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2021-03-13"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":236,"author":{"gitId":"samuelfangjw"},"content":"     * Displays a project","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"samuelfangjw"},"content":"     * @param project Project to display.","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"    public void handleDisplayProject(Project project) {","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":242,"author":{"gitId":"samuelfangjw"},"content":"        if (!infoDisplayPlaceholder.getChildren().contains(projectDisplayPanel.getRoot())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().add(projectDisplayPanel.getRoot());","lastModifiedDate":"2021-03-13"},{"lineNumber":245,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":246,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":247,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.displayProject(project);","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":251,"author":{"gitId":"samuelfangjw"},"content":"     * Shows contacts tab.","lastModifiedDate":"2021-03-14"},{"lineNumber":252,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":253,"author":{"gitId":"samuelfangjw"},"content":"    public void handleDisplayContacts() {","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"samuelfangjw"},"content":"        if (!infoDisplayPlaceholder.getChildren().contains(personListPanel.getRoot())) {","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"samuelfangjw"},"content":"            infoDisplayPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearSelection();","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":262,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"samuelfangjw"},"content":"     * Shows today tab.","lastModifiedDate":"2021-03-23"},{"lineNumber":264,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"samuelfangjw"},"content":"    public void handleDisplayToday() {","lastModifiedDate":"2021-03-23"},{"lineNumber":266,"author":{"gitId":"samuelfangjw"},"content":"        todayPanel \u003d new TodayPanel(logic.getProjectsFolder(), LocalDate.now());","lastModifiedDate":"2021-03-24"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"        infoDisplayPlaceholder.getChildren().clear();","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"samuelfangjw"},"content":"        infoDisplayPlaceholder.getChildren().add(todayPanel.getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":269,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.clearSelection();","lastModifiedDate":"2021-03-23"},{"lineNumber":270,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"     * Shows events tab.","lastModifiedDate":"2021-03-15"},{"lineNumber":274,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":275,"author":{"gitId":"samuelfangjw"},"content":"    public void handleShowEventsTab() throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":276,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":277,"author":{"gitId":"samuelfangjw"},"content":"            projectDisplayPanel.showOverviewTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":278,"author":{"gitId":"samuelfangjw"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":279,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_UI_PROJECT_NOT_DISPLAYED, e);","lastModifiedDate":"2021-03-15"},{"lineNumber":280,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":283,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":284,"author":{"gitId":"samuelfangjw"},"content":"     * Shows todos tab.","lastModifiedDate":"2021-03-15"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"    public void handleShowTodosTab() throws CommandException {","lastModifiedDate":"2021-03-15"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-15"},{"lineNumber":288,"author":{"gitId":"samuelfangjw"},"content":"            projectDisplayPanel.showTodosTab();","lastModifiedDate":"2021-03-15"},{"lineNumber":289,"author":{"gitId":"samuelfangjw"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2021-03-15"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"            throw new CommandException(MESSAGE_UI_PROJECT_NOT_DISPLAYED, e);","lastModifiedDate":"2021-03-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":295,"author":{"gitId":"samuelfangjw"},"content":"     * Selects a project in the {@code ListView} at a specific index.","lastModifiedDate":"2021-03-17"},{"lineNumber":296,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"     * @param index Index to select.","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":299,"author":{"gitId":"samuelfangjw"},"content":"    public void handleSelectProject(Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":300,"author":{"gitId":"samuelfangjw"},"content":"        sidePanel.selectProject(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":301,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":302,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":303,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":192,"samuelfangjw":111}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":76,"samuelfangjw":1}},{"path":"src/main/java/seedu/address/ui/ProjectCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-11"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-11"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-11"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * An UI component that displays information of a {@code Project}.","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"ProjectListCard.fxml\";","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public final Project project;","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Label name;","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Label id;","lastModifiedDate":"2021-03-11"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectCard} with the given {@code Project} and index to display.","lastModifiedDate":"2021-03-11"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectCard(Project project, int displayedIndex) {","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        this.project \u003d project;","lastModifiedDate":"2021-03-11"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-03-11"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        name.setText(project.getProjectName().projectName);","lastModifiedDate":"2021-03-11"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-03-11"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        // short circuit if same object","lastModifiedDate":"2021-03-11"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"            return true;","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        if (!(other instanceof ProjectCard)) {","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            return false;","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        // state check","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard card \u003d (ProjectCard) other;","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 project.equals(card.project);","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/main/java/seedu/address/ui/ProjectDisplayPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.binding.Bindings;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" * Panel containing a project.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectDisplayPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final Integer OVERVIEW_TAB \u003d 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public static final Integer TODOS_TAB \u003d 1;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"ProjectDisplayPanel.fxml\";","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private static final int SAFETY_MARGIN \u003d 5; // Applied to each listview to prevent card from being cut off","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private static final int EVENTS_CARD_HEIGHT \u003d 50;","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private static final int DEADLINES_CARD_HEIGHT \u003d 35;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private static final int GROUPMATES_CARD_HEIGHT \u003d 105;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ProjectDisplayPanel.class);","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    private Label projectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    private TabPane tabPane;","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    private ListView\u003cCompletableDeadline\u003e completableDeadlineListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    private ListView\u003cCompletableTodo\u003e completableTodoListView;","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    private ListView\u003cPerson\u003e participantListView;","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectDisplayPanel() {","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * Displays a project in the {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * @param project Project to display.","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    public void displayProject(Project project) {","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(project);","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName.setText(project.getProjectName().toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        setUpEventList(project.getEvents().getEvents());","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        setUpDeadlinesList(project.getDeadlines().getDeadlines());","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        setUpTodoList(project.getTodos().getTodos());","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        setUpGroupmatesList(project.getParticipants().getParticipants());","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpTodoList(ObservableList\u003cCompletableTodo\u003e todos) {","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        completableTodoListView.setItems(new FilteredList\u003c\u003e(todos));","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        completableTodoListView.setCellFactory(listView -\u003e new ProjectDisplayPanel.CompletableTodoListViewCell());","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpGroupmatesList(ObservableList\u003cPerson\u003e groupmates) {","lastModifiedDate":"2021-03-24"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        participantListView.prefHeightProperty()","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(groupmates).multiply(GROUPMATES_CARD_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        participantListView.setItems(new FilteredList\u003c\u003e(groupmates));","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        participantListView.setCellFactory(listView -\u003e new ProjectDisplayPanel.ParticipantListViewCell());","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpDeadlinesList(ObservableList\u003cCompletableDeadline\u003e deadlines) {","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView.prefHeightProperty()","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(deadlines).multiply(DEADLINES_CARD_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView.setItems(new FilteredList\u003c\u003e(deadlines));","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView.setCellFactory(listView -\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectDisplayPanel.CompletableDeadlineListViewCell());","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    private void setUpEventList(ObservableList\u003cEvent\u003e events) {","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        eventListView.prefHeightProperty()","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"                .bind(Bindings.size(events).multiply(EVENTS_CARD_HEIGHT).add(SAFETY_MARGIN));","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        eventListView.setItems(new FilteredList\u003c\u003e(events));","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        eventListView.setCellFactory(listView -\u003e new ProjectDisplayPanel.EventListViewCell());","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"     * Displays the overview tab.","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void showOverviewTab() {","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().select(OVERVIEW_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"     * Displays the todo tab.","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"    public void showTodosTab() {","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().select(TODOS_TAB);","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-13"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code CompletableDeadline} using","lastModifiedDate":"2021-03-14"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"     * a {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"    class CompletableDeadlineListViewCell extends ListCell\u003cCompletableDeadline\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(CompletableDeadline completableDeadline, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(completableDeadline, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || completableDeadline \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new CompletableDeadlineCard(completableDeadline, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code CompletableTodo} using","lastModifiedDate":"2021-03-14"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"     * a {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"    class CompletableTodoListViewCell extends ListCell\u003cCompletableTodo\u003e {","lastModifiedDate":"2021-03-14"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(CompletableTodo completableTodo, boolean empty) {","lastModifiedDate":"2021-03-14"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(completableTodo, empty);","lastModifiedDate":"2021-03-14"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || completableTodo \u003d\u003d null) {","lastModifiedDate":"2021-03-14"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-14"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-14"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new CompletableTodoCard(completableTodo, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-14"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonDisplayCard}.","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"    class ParticipantListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-13"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-13"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":190}},{"path":"src/main/java/seedu/address/ui/ProjectListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-11"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-11"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-11"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-11"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-11"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-11"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" * Panel containing the list of projects.","lastModifiedDate":"2021-03-11"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"ProjectListPanel.fxml\";","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ProjectListPanel.class);","lastModifiedDate":"2021-03-11"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private ListView\u003cProject\u003e projectListView;","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectListPanel(ObservableList\u003cProject\u003e projectList, MainWindow mainWindow) {","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-11"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.setItems(projectList);","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.setCellFactory(listview -\u003e new ProjectListViewCell());","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().selectedItemProperty().addListener(new ChangeListener\u003cProject\u003e() {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"            @Override","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"            public void changed(ObservableValue\u003c? extends Project\u003e observable, Project oldValue, Project newValue) {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                mainWindow.handleDisplayProject(newValue);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        });","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Clears currently selected item from {@code ProjectListPanel}","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public void clearSelection() {","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().clearSelection();","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-11"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Project} using a {@code ProjectCard}.","lastModifiedDate":"2021-03-11"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-11"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    class ProjectListViewCell extends ListCell\u003cProject\u003e {","lastModifiedDate":"2021-03-11"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(Project project, boolean empty) {","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(project, empty);","lastModifiedDate":"2021-03-11"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || project \u003d\u003d null) {","lastModifiedDate":"2021-03-11"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-11"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-11"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new ProjectCard(project, getIndex() + 1).getRoot());","lastModifiedDate":"2021-03-11"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-11"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-11"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * Selects a project in the {@code ListView} at a specific index.","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * @param index Index to select.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    public void selectProject(Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        projectListView.getSelectionModel().select(index.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-11"}],"authorContributionMap":{"samuelfangjw":76}},{"path":"src/main/java/seedu/address/ui/SidePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" * Panel containing a project.","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class SidePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"SidePanel.fxml\";","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(SidePanel.class);","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectListPanel projectListPanel;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane projectsListPanelPlaceholder;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectDisplayPanel} with the given {@code project} and {@code displayedIndex}.","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public SidePanel(ObservableList\u003cProject\u003e projectList, MainWindow mainWindow) {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        this.projectListPanel \u003d new ProjectListPanel(projectList, mainWindow);","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsListPanelPlaceholder.getChildren().add(projectListPanel.getRoot());","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     * Selects a project in the {@code ListView} at a specific index.","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     * @param index Index to select.","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public void selectProject(Index index) {","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        projectListPanel.selectProject(index);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Opens contacts panel.","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public void openContactsPanel() {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.handleDisplayContacts();","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Opens today panel.","lastModifiedDate":"2021-03-23"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    public void openTodayPanel() {","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        mainWindow.handleDisplayToday();","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Clears currently selected item from {@code ProjectListPanel}","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public void clearSelection() {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        projectListPanel.clearSelection();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":68}},{"path":"src/main/java/seedu/address/ui/TodayPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-23"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_DEADLINES_TO_DISPLAY;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NO_EVENTS_TO_DISPLAY;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-23"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-03-23"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-03-23"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-23"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-03-23"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-23"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.DateUtil;","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-23"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-23"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":" * Panel displaying today screen.","lastModifiedDate":"2021-03-23"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-23"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"public class TodayPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private static final String FXML \u003d \"TodayPanel.fxml\";","lastModifiedDate":"2021-03-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final LocalDate currentDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private final ObservableList\u003cProject\u003e projectsList;","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cEvent\u003e eventsListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableDeadline\u003e deadlinesListView \u003d new ListView\u003c\u003e();","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private Label noEventsPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    private Label noDeadlinesPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    private Label date;","lastModifiedDate":"2021-03-23"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane eventsListViewPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @FXML","lastModifiedDate":"2021-03-23"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    private StackPane deadlinesListViewPlaceholder;","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code TodayPanel}.","lastModifiedDate":"2021-03-23"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectsFolder Projects folder used to create today panel.","lastModifiedDate":"2021-03-23"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public TodayPanel(ReadOnlyProjectsFolder projectsFolder, LocalDate date) {","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        super(FXML);","lastModifiedDate":"2021-03-23"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsList \u003d projectsFolder.getProjectsList();","lastModifiedDate":"2021-03-23"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        this.currentDate \u003d date;","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        this.date.setText(DateUtil.decodeDate(currentDate));","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        initEventsSection();","lastModifiedDate":"2021-03-23"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        initDeadlinesSection();","lastModifiedDate":"2021-03-23"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    private void initDeadlinesSection() {","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        ObservableList\u003cCompletableDeadline\u003e deadlinesListViewItems \u003d deadlinesListView.getItems();","lastModifiedDate":"2021-03-23"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        deadlinesListView.setCellFactory(listView -\u003e new CompletableDeadlineListViewCell());","lastModifiedDate":"2021-03-23"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : projectsList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"            FilteredList\u003cCompletableDeadline\u003e deadlineList \u003d project.getDeadlinesOnDate(currentDate);","lastModifiedDate":"2021-03-23"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"            deadlinesListViewItems.addAll(deadlineList);","lastModifiedDate":"2021-03-23"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        if (deadlinesListViewItems.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"            noDeadlinesPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"            noDeadlinesPlaceholder.setText(MESSAGE_NO_DEADLINES_TO_DISPLAY);","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            deadlinesListViewPlaceholder.getChildren().add(noDeadlinesPlaceholder);","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            deadlinesListViewPlaceholder.getChildren().add(deadlinesListView);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    private void initEventsSection() {","lastModifiedDate":"2021-03-23"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        ObservableList\u003cEvent\u003e eventsListViewItems \u003d eventsListView.getItems();","lastModifiedDate":"2021-03-23"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        eventsListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2021-03-23"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : projectsList) {","lastModifiedDate":"2021-03-23"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            FilteredList\u003cEvent\u003e eventList \u003d project.getEventsOnDate(currentDate);","lastModifiedDate":"2021-03-23"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"            eventsListViewItems.addAll(eventList);","lastModifiedDate":"2021-03-23"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        if (eventsListViewItems.isEmpty()) {","lastModifiedDate":"2021-03-24"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            noEventsPlaceholder \u003d new Label();","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"            noEventsPlaceholder.setText(MESSAGE_NO_EVENTS_TO_DISPLAY);","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"            eventsListViewPlaceholder.getChildren().add(noEventsPlaceholder);","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        } else {","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"            eventsListViewPlaceholder.getChildren().add(eventsListView);","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of an {@code Event} using an {@code EventCard}.","lastModifiedDate":"2021-03-23"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2021-03-23"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2021-03-23"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new EventCard(event).getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-23"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code CompletableDeadline} using","lastModifiedDate":"2021-03-23"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"     * a {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-23"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-23"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    class CompletableDeadlineListViewCell extends ListCell\u003cCompletableDeadline\u003e {","lastModifiedDate":"2021-03-23"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-23"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        protected void updateItem(CompletableDeadline completableDeadline, boolean empty) {","lastModifiedDate":"2021-03-23"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"            super.updateItem(completableDeadline, empty);","lastModifiedDate":"2021-03-23"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"            if (empty || completableDeadline \u003d\u003d null) {","lastModifiedDate":"2021-03-23"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"                setText(null);","lastModifiedDate":"2021-03-23"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"            } else {","lastModifiedDate":"2021-03-23"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"                setGraphic(new CompletableDeadlineCard(completableDeadline).getRoot());","lastModifiedDate":"2021-03-23"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-03-23"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-23"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-23"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-23"}],"authorContributionMap":{"samuelfangjw":129}},{"path":"src/main/java/seedu/address/ui/UiCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":" * Represents a Ui Command. Execution logic is left to {@code MainWidow} class.","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"public enum UiCommand {","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    NONE,","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    OPEN_HELP_WINDOW,","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    EXIT_APPLICATION,","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    DISPLAY_PROJECT,","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    SHOW_CONTACTS,","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    SHOW_OVERVIEW,","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    SHOW_TODOS","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":14}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.awt.Taskbar;","lastModifiedDate":"2021-02-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.awt.image.BufferedImage;","lastModifiedDate":"2021-02-26"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javax.imageio.ImageIO;","lastModifiedDate":"2021-02-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/colab_icon_500.png\";","lastModifiedDate":"2021-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        // Set the application icon","lastModifiedDate":"2021-02-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        // Set taskbar icon for macOS","lastModifiedDate":"2021-02-26"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        if (Taskbar.isTaskbarSupported()) {","lastModifiedDate":"2021-02-26"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            BufferedImage applicationIcon \u003d getBufferedImage(ICON_APPLICATION);","lastModifiedDate":"2021-02-26"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            Taskbar taskbar \u003d Taskbar.getTaskbar();","lastModifiedDate":"2021-02-26"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"            if (taskbar.isSupported(Taskbar.Feature.ICON_IMAGE) \u0026\u0026 applicationIcon !\u003d null) {","lastModifiedDate":"2021-02-26"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"                Taskbar.getTaskbar().setIconImage(applicationIcon);","lastModifiedDate":"2021-02-26"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"            }","lastModifiedDate":"2021-02-26"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // Set up main window","lastModifiedDate":"2021-02-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            mainWindow.show(); // This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"            mainWindow.handleDisplayToday(); // Display today panel","lastModifiedDate":"2021-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    private BufferedImage getBufferedImage(String imagePath) {","lastModifiedDate":"2021-02-26"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-02-26"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"            BufferedImage iconApplication \u003d ImageIO.read(getClass().getResource(imagePath));","lastModifiedDate":"2021-02-26"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"            return iconApplication;","lastModifiedDate":"2021-02-26"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-02-26"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"            logger.warning(StringUtil.getDetails(e));","lastModifiedDate":"2021-02-26"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"            return null;","lastModifiedDate":"2021-02-26"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-02-26"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-02-26"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":86,"samuelfangjw":27}},{"path":"src/main/resources/view/CompletableDeadlineListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"35\" prefHeight\u003d\"35\" maxHeight\u003d\"35\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$date\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            \u003cInsets bottom\u003d\"0\" left\u003d\"10\" right\u003d\"10\" top\u003d\"0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"completedLabel\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/main/resources/view/CompletableTodoListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"completedLabel\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    \u003crowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \u003cRowConstraints/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/rowConstraints\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":36}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".root {","lastModifiedDate":"2021-02-28"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    /*","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    Colors inspired by material design principles which can be found at","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    https://material.io/design/color/dark-theme.html.","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    DP refers to the elevation level as stated on the website.","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    */","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -BASE_COLOR: #121212;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -DP_0_ELEVATION: rgba(255, 255, 255, 0.00);","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -DP_1_ELEVATION: rgba(255, 255, 255, 0.05);","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    -DP_2_ELEVATION: rgba(255, 255, 255, 0.08);","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    -DP_3_ELEVATION: rgba(255, 255, 255, 0.09);","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    -DP_4_ELEVATION: rgba(255, 255, 255, 0.05);","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_ACCENT: #3d187a;","lastModifiedDate":"2021-03-06"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL: -DP_3_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    -COLOR_CELL_SELECTED: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /* Background color */","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -BASE_COLOR;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"/* Labels */","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"/* list view */","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 2 2 2 2;","lastModifiedDate":"2021-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-02-28"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL_SELECTED;","lastModifiedDate":"2021-03-06"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_CELL_SELECTED;","lastModifiedDate":"2021-03-06"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-02-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":".list-cell:filled:selected #tags .label {","lastModifiedDate":"2021-02-28"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-06"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_CELL;","lastModifiedDate":"2021-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":".cell_huge_label {","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 32px;","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2017-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_0_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"/* tabs */","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":".tab {","lastModifiedDate":"2021-03-02"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0.0 1.0;","lastModifiedDate":"2021-03-02"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 5px 20px;","lastModifiedDate":"2021-03-02"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 15px 15px 0 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":".tab .tab-label {","lastModifiedDate":"2021-03-02"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-02"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-02"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .focus-indicator {","lastModifiedDate":"2021-03-02"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-03-02"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 3px 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-insets: -8px;","lastModifiedDate":"2021-03-02"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":".tab:selected {","lastModifiedDate":"2021-03-02"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 3px 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-03-02"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-02"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-02"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":".tab-pane {","lastModifiedDate":"2021-03-02"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-02"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"/* result display */","lastModifiedDate":"2021-03-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"/* status-bar */","lastModifiedDate":"2021-03-16"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0.8;","lastModifiedDate":"2021-02-28"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_0_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_0_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"samuelfangjw"},"content":".menu:hover,","lastModifiedDate":"2021-02-28"},{"lineNumber":224,"author":{"gitId":"samuelfangjw"},"content":".menu:showing,","lastModifiedDate":"2021-02-28"},{"lineNumber":225,"author":{"gitId":"samuelfangjw"},"content":".menu-item:focused {","lastModifiedDate":"2021-02-28"},{"lineNumber":226,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-02-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-28"},{"lineNumber":229,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"samuelfangjw"},"content":"/* scroll bar */","lastModifiedDate":"2021-03-16"},{"lineNumber":234,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":235,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: derive(-DP_1_ELEVATION, 20%);","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":238,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":239,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: derive(-DP_1_ELEVATION, 50%);","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":252,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":258,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":260,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_CELL;","lastModifiedDate":"2021-03-06"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: #f70d1a;","lastModifiedDate":"2021-03-02"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":271,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":273,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_1_ELEVATION -DP_1_ELEVATION white -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2017-03-02"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":279,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":281,"author":{"gitId":"samuelfangjw"},"content":"#personListView, #projectListView {","lastModifiedDate":"2021-03-08"},{"lineNumber":282,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-06"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-06"},{"lineNumber":285,"author":{"gitId":"samuelfangjw"},"content":"/* result display */","lastModifiedDate":"2021-03-16"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay {","lastModifiedDate":"2021-03-16"},{"lineNumber":287,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-16"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":290,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .content,","lastModifiedDate":"2021-03-16"},{"lineNumber":291,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .scroll-pane,","lastModifiedDate":"2021-03-16"},{"lineNumber":292,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .scroll-pane .viewport,","lastModifiedDate":"2021-03-16"},{"lineNumber":293,"author":{"gitId":"samuelfangjw"},"content":"#resultDisplay .scroll-pane .content {","lastModifiedDate":"2021-03-16"},{"lineNumber":294,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-16"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"samuelfangjw"},"content":"/* tags */","lastModifiedDate":"2021-03-17"},{"lineNumber":298,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-02"},{"lineNumber":305,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-06"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":311,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":312,"author":{"gitId":"samuelfangjw"},"content":".white-text \u003e * {","lastModifiedDate":"2021-03-13"},{"lineNumber":313,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-13"},{"lineNumber":314,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"-":188,"samuelfangjw":126}},{"path":"src/main/resources/view/EventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@ProjectDisplayPanel.css\"/\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"50\" prefHeight\u003d\"50\" maxHeight\u003d\"50\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"eventDescription\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"interval\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background: transparent;","lastModifiedDate":"2021-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":18,"samuelfangjw":1}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/11\"","lastModifiedDate":"2021-02-26"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\"/\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\"/\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":37,"samuelfangjw":3}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-02"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"\u003cfx:root maxHeight\u003d\"2160.0\" maxWidth\u003d\"3840.0\" minHeight\u003d\"480\" minWidth\u003d\"680\" onCloseRequest\u003d\"#handleExit\" title\u003d\"CoLAB\"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"         type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \u003cImage url\u003d\"@/images/colab_icon_500.png\"/\u003e","lastModifiedDate":"2021-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\"/\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox minHeight\u003d\"480.0\" minWidth\u003d\"640.0\"\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        \u003cHBox VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"          \u003cStackPane fx:id\u003d\"sidePanelPlaceholder\" HBox.hgrow\u003d\"NEVER\" minWidth\u003d\"200\" prefWidth\u003d\"200\" maxWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"          \u003cVBox fx:id\u003d\"infoDisplay\" minHeight\u003d\"100.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"infoDisplayPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"150\" maxHeight\u003d\"150\" VBox.vgrow\u003d\"NEVER\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                \u003cInsets bottom\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"              \u003cInsets left\u003d\"20.0\" right\u003d\"20.0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-02-26"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-02-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":36,"samuelfangjw":26}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"105\" prefHeight\u003d\"105\" maxHeight\u003d\"105\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\"/\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\"/\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\"/\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":35,"samuelfangjw":1}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"  \u003cLabel text\u003d\"Contacts\" styleClass\u003d\"cell_huge_label\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":8,"samuelfangjw":2}},{"path":"src/main/resources/view/ProjectDisplayPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".project-display-panel-vbox {","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: center;","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":".project-display-panel-section {","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 10 20 15 20;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5 10 5 10;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":".cell_huge_label {","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 10px 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":".label-header {","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 24;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-alignment: center;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0 0 10px 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-height: 50px;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"/* tabs */","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":".tab {","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0.0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 5px 5px;","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -DP_3_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":".tab .tab-label {","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    -fx-alignment: CENTER;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-15"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    -fx-translate-x: 10px;","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .focus-indicator {","lastModifiedDate":"2021-03-15"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":".tab:selected .tab-label {","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":".tab:selected {","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area .tab {","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-height: 150;","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    -fx-pref-width: 50;","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 50px 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0px;","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_3_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":".tab-pane {","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-15"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"/* list view */","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":".list-view {","lastModifiedDate":"2021-03-15"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell {","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:even,","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:odd,","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":".list-view .list-cell .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-15"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane {","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":".scroll-pane \u003e .viewport {","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":119}},{"path":"src/main/resources/view/ProjectDisplayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.Group?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Tab?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@ProjectDisplayPanel.css\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  \u003cLabel fx:id\u003d\"projectName\" styleClass\u003d\"cell_huge_label\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"  \u003cTabPane fx:id\u003d\"tabPane\" rotateGraphic\u003d\"true\" side\u003d\"LEFT\" tabClosingPolicy\u003d\"UNAVAILABLE\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    \u003ctabs\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTab\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"          \u003cGroup\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \u003cLabel rotate\u003d\"90\" styleClass\u003d\"tab-label\" text\u003d\"Overview\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/Group\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"          \u003cScrollPane fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            \u003cVBox styleClass\u003d\"project-display-panel-vbox\"\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"              \u003cVBox styleClass\u003d\"project-display-panel-section\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Events\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                \u003cListView fx:id\u003d\"eventListView\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"              \u003cVBox styleClass\u003d\"project-display-panel-section\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Deadlines\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                \u003cListView fx:id\u003d\"completableDeadlineListView\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"              \u003cVBox styleClass\u003d\"project-display-panel-section\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"                \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Groupmates\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"                \u003cListView fx:id\u003d\"participantListView\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"              \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/ScrollPane\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \u003cTab\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        \u003cgraphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"          \u003cGroup\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"            \u003cLabel rotate\u003d\"90\" styleClass\u003d\"tab-label\" text\u003d\"Todos\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/Group\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/graphic\u003e","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        \u003ccontent\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"          \u003cVBox styleClass\u003d\"project-display-panel-section\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"            \u003cLabel styleClass\u003d\"label-header\" text\u003d\"Todos\" /\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"            \u003cListView fx:id\u003d\"completableTodoListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        \u003c/content\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/Tab\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/tabs\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/TabPane\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstyleClass\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"pane-with-border\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"white-text\" /\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/styleClass\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":65}},{"path":"src/main/resources/view/ProjectListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\" minHeight\u003d\"45\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":28}},{"path":"src/main/resources/view/ProjectListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-08"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cListView fx:id\u003d\"projectListView\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-08"}],"authorContributionMap":{"samuelfangjw":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-02-28"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"-Infinity\" prefHeight\u003d\"130\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":6,"samuelfangjw":2}},{"path":"src/main/resources/view/SidePanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".side-panel{","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":".button {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-radius: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":".button:hover {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":".button:selected {","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"#projectListView {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    -fx-graphic-text-gap: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"#projectListView #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell:filled:even,","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell:filled:odd {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell:filled:selected #cardPane {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -COLOR_ACCENT;","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"#projectListView .list-cell .label {","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"#colab-logo {","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-image: url(\"../images/logo_no_background.png\");","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-repeat: no-repeat;","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-size: contain;","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-position: center center;","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":63}},{"path":"src/main/resources/view/SidePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"side-panel\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@SidePanel.css\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane id\u003d\"colab-logo\" prefHeight\u003d\"200\" maxHeight\u003d\"200\" prefWidth\u003d\"200\" maxWidth\u003d\"200\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"  \u003cButton text\u003d\"Today\" onAction\u003d\"#openTodayPanel\" prefWidth\u003d\"200\" maxWidth\u003d\"200\" prefHeight\u003d\"45\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  \u003cButton id\u003d\"contacts-button\" onAction\u003d\"#openContactsPanel\" text\u003d\"Contacts\" prefWidth\u003d\"200\" maxWidth\u003d\"200\" prefHeight\u003d\"45\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"  \u003cSeparator/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane fx:id\u003d\"projectsListPanelPlaceholder\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":18}},{"path":"src/main/resources/view/TodayPanel.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":".pane_with_background {","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-color: -DP_1_ELEVATION;","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    -fx-padding: 10 10;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    -fx-background-insets: 5 0;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":5}},{"path":"src/main/resources/view/TodayPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.lang.String?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstylesheets\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    \u003cURL value\u003d\"@TodayPanel.css\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/stylesheets\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"  \u003cHBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    \u003cLabel text\u003d\"Today - \" styleClass\u003d\"cell_huge_label\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    \u003cLabel fx:id\u003d\"date\" text\u003d\"\\$currentDate\" styleClass\u003d\"cell_huge_label\"/\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-23"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"  \u003cStackPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    \u003cVBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox styleClass\u003d\"pane_with_background\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \u003cLabel text\u003d\"Events\" styleClass\u003d\"cell_huge_label\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \u003cStackPane fx:id\u003d\"eventsListViewPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \u003cVBox styleClass\u003d\"pane_with_background\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        \u003cLabel text\u003d\"Deadlines\" styleClass\u003d\"cell_huge_label\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        \u003cStackPane fx:id\u003d\"deadlinesListViewPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/StackPane\u003e","lastModifiedDate":"2021-03-23"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"  \u003cstyleClass\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"pane-with-border\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    \u003cString fx:value\u003d\"white-text\"/\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"  \u003c/styleClass\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"samuelfangjw":37}},{"path":"src/test/data/JsonProjectsFolderStorageTest/invalidAndValidProjectProjectsFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"Valid Project\",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"DAILY\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"04-10-2020\"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"valid participant\",","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91981\",","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"email@email.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"sidjs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"  \",","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"DAILY\",","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"04-10-2020\"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"valid participant\",","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91981\",","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"email@email.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"sidjs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":51}},{"path":"src/test/data/JsonProjectsFolderStorageTest/invalidProjectProjectsFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"  \",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"DAILY\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"04-10-2020\"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"valid participant\",","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91981\",","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"email@email.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"sidjs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":27}},{"path":"src/test/data/JsonProjectsFolderStorageTest/notJsonFormatProjectsFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"not json format!","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":1}},{"path":"src/test/data/JsonSerializableProjectsFolderTest/duplicateProjectProjectsFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"Duplicate Project\",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"DAILY\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"04-10-2020\"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"valid participant\",","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91981\",","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"email@email.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"sidjs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  } , {","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"Duplicate Project\",","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"DAILY\",","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"04-10-2020\"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"valid participant\",","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91981\",","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"email@email.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"sidjs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":51}},{"path":"src/test/data/JsonSerializableProjectsFolderTest/invalidProjectProjectsFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"  \",","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Test Event\",","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"DAILY\",","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"04-10-2020\"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Submit Project Report\",","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Description\",","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-12-3112\"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"valid participant\",","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91981\",","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"email@email.com\",","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"sidjs\",","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":27}},{"path":"src/test/data/JsonSerializableProjectsFolderTest/typicalProjectsProjectsFolder.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"{","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"  \"_comment\": \"ProjectsFolder save file which contains the same Projects values as in TypicalProjects#getTypicalProjectsFolder()\",","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"  \"projects\" : [ {","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2103T Team Project\",","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Weekly Project Meeting\",","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"WEEKLY\",","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"31-01-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Update documentation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Finish add command\",","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Add unit tests\",","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Brainstorm new feature\",","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.1\",","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"01-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true,","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"15-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.3\",","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"31-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Milestone v1.4\",","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"12-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Dahn\",","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234561\",","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"dahn@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234562\",","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"ruochen@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234563\",","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"samuel@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234564\",","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"vevek@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"  }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    \"projectName\" : \"CS2101 OP2\",","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    \"eventList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Planning Meeting\",","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"17-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Consultation\",","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"23-03-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Product Demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"06-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"OP2 Pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"      \"interval\" : \"NONE\",","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"      \"at\" : \"09-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    \"todoList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Split Workload\",","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : true","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up slides for pitch\",","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Do up video for demo\",","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    \"deadlineList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Demo Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"05-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"      \"description\" : \"Product Pitch Internal Deadline\",","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"      \"isDone\" : false,","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"      \"by\" : \"08-04-2021\"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    } ],","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    \"participantsList\" : [ {","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Dahn\",","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234561\",","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"dahn@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Ruochen\",","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234562\",","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"ruochen@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Samuel\",","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234563\",","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"samuel@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"    }, {","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"      \"name\" : \"Vevek\",","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"      \"phone\" : \"91234564\",","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"      \"email\" : \"vevek@colab.com\",","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"      \"address\" : \"1 CoLAB Road\",","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"      \"tagged\" : [ ]","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    } ]","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"  } ]","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":134}},{"path":"src/test/java/guitests/GuiRobot.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.function.BooleanSupplier;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.StageNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Robot used to simulate user actions on the GUI.","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Extends {@link FxRobot} by adding some customized functionality and workarounds.","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class GuiRobot extends FxRobot {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int PAUSE_FOR_HUMAN_DELAY_MILLISECONDS \u003d 250;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final int DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS \u003d 5000;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String PROPERTY_TESTFX_HEADLESS \u003d \"testfx.headless\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final boolean isHeadlessMode;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiRobot} object.","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public GuiRobot() {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String headlessPropertyValue \u003d System.getProperty(PROPERTY_TESTFX_HEADLESS);","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        isHeadlessMode \u003d headlessPropertyValue !\u003d null \u0026\u0026 headlessPropertyValue.equals(\"true\");","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Pauses execution for {@code PAUSE_FOR_HUMAN_DELAY_MILLISECONDS} milliseconds for a human to examine the","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * effects of the test. This method will be disabled when the GUI tests are executed in headless mode to avoid","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * unnecessary delays.","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void pauseForHuman() {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (isHeadlessMode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sleep(PAUSE_FOR_HUMAN_DELAY_MILLISECONDS);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns true if tests are run in headless mode.","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean isHeadlessMode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return isHeadlessMode;","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Waits for {@code event} to be true by {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS} milliseconds.","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS}","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * milliseconds.","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void waitForEvent(BooleanSupplier event) {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        waitForEvent(event, DEFAULT_WAIT_FOR_EVENT_TIMEOUT_MILLISECONDS);","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Waits for {@code event} to be true.","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @param timeOut in milliseconds","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * @throws EventTimeoutException if the time taken exceeds {@code timeOut}.","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void waitForEvent(BooleanSupplier event, int timeOut) {","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        int timePassed \u003d 0;","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        final int retryInterval \u003d 50;","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        while (!event.getAsBoolean()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            sleep(retryInterval);","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            timePassed +\u003d retryInterval;","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            if (timePassed \u003e\u003d timeOut) {","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                throw new EventTimeoutException();","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Returns true if the window with {@code stageTitle} is currently open.","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public boolean isWindowShown(String stageTitle) {","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return getNumberOfWindowsShown(stageTitle) \u003e\u003d 1;","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Returns the number of windows with {@code stageTitle} that are currently open.","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public int getNumberOfWindowsShown(String stageTitle) {","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return (int) listTargetWindows().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                .filter(window -\u003e window instanceof Stage \u0026\u0026 ((Stage) window).getTitle().equals(stageTitle))","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .count();","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the first stage, ordered by proximity to the current target window, with the stage title.","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The order that the windows are searched are as follows (proximity): current target window,","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * children of the target window, rest of the windows.","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws StageNotFoundException if the stage is not found.","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Stage getStage(String stageTitle) {","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Optional\u003cStage\u003e targetStage \u003d listTargetWindows().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .filter(Stage.class::isInstance) // checks that the window is of type Stage","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .map(Stage.class::cast)","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .filter(stage -\u003e stage.getTitle().equals(stageTitle))","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .findFirst();","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return targetStage.orElseThrow(StageNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Represents an error which occurs when a timeout occurs when waiting for an event.","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private class EventTimeoutException extends RuntimeException {","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":114,"samuelfangjw":11}},{"path":"src/test/java/guitests/guihandles/CommandBoxHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A handle to the {@code CommandBox} in the GUI.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CommandBoxHandle extends NodeHandle\u003cTextField\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_INPUT_FIELD_ID \u003d \"#commandTextField\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandBoxHandle(TextField commandBoxNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(commandBoxNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the text in the command box.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public String getInput() {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return getRootNode().getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Enters the given command in the Command Box and presses enter.","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void run(String command) {","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        click();","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e getRootNode().setText(command));","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        guiRobot.type(KeyCode.ENTER);","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the list of style classes present in the command box.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ObservableList\u003cString\u003e getStyleClass() {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return getRootNode().getStyleClass();","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":38,"samuelfangjw":7}},{"path":"src/test/java/guitests/guihandles/CompletableDeadlineCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableDeadlineCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableDeadlineCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#description\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DATE_FIELD_ID \u003d \"#date\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String COMPLETED_FIELD_ID \u003d \"#completedLabel\";","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final Label dateLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private final Label completedLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CompletableDeadlineCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableDeadlineCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        dateLabel \u003d getChildNode(DATE_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel \u003d getChildNode(COMPLETED_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public String getDate() {","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return dateLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public String getCompleted() {","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return completedLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains a {@code CompletableDeadline}.","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(CompletableDeadline deadline) {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        return getDescription().equals(deadline.getDescription())","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getDate().equals(decodeDate(deadline.getBy()))","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getCompleted().equals(CompletableDeadlineCard.getTextToDisplay(deadline.getIsDone()));","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":61}},{"path":"src/test/java/guitests/guihandles/CompletableTodoCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableDeadlineCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTodoCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#description\";","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String COMPLETED_FIELD_ID \u003d \"#completedLabel\";","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final Label completedLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code CompletableTodoCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public CompletableTodoCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        completedLabel \u003d getChildNode(COMPLETED_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public String getCompleted() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        return completedLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains a {@code CompletableTodo}.","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(CompletableTodo todo) {","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        return getDescription().equals(todo.getDescription())","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getCompleted().equals(CompletableDeadlineCard.getTextToDisplay(todo.getIsDone()));","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":51}},{"path":"src/test/java/guitests/guihandles/EventCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to an {@code EventCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class EventCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DESCRIPTION_FIELD_ID \u003d \"#eventDescription\";","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INTERVAL_FIELD_ID \u003d \"#interval\";","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DATE_FIELD_ID \u003d \"#date\";","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private final Label descriptionLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private final Label intervalLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private final Label dateLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs an {@code EventCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code EventCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public EventCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        descriptionLabel \u003d getChildNode(DESCRIPTION_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        intervalLabel \u003d getChildNode(INTERVAL_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        dateLabel \u003d getChildNode(DATE_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public String getDescription() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        return descriptionLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public String getInteval() {","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        return intervalLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public String getDate() {","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        return dateLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains an {@code Event}.","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Event event) {","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        return getDescription().equals(event.getDescription())","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getInteval().equals(event.getRecurrence().toString())","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                \u0026\u0026 getDate().equals(decodeDate(event.getAt()));","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":60}},{"path":"src/test/java/guitests/guihandles/HelpWindowHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A handle to the {@code HelpWindow} of the application.","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class HelpWindowHandle extends StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String HELP_WINDOW_TITLE \u003d \"Help\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String HELP_MESSAGE_FIELD_ID \u003d \"#helpMessage\";","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Label helpMessage;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code HelpWindowHandle} handler object.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param helpWindowStage Stage to use as root of the {@code HelpWindow}.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public HelpWindowHandle(Stage helpWindowStage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(helpWindowStage);","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        helpMessage \u003d getChildNode(HELP_MESSAGE_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a help window is currently present in the application.","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isWindowPresent() {","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new GuiRobot().isWindowShown(HELP_WINDOW_TITLE);","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getHelpMessage() {","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return helpMessage.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":33,"samuelfangjw":7}},{"path":"src/test/java/guitests/guihandles/MainMenuHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Provides a handle to the main menu of the app.","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class MainMenuHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MENU_BAR_ID \u003d \"#menuBar\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public MainMenuHandle(Node mainMenuNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        super(mainMenuNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Opens the {@code HelpWindow} using the menu bar in {@code MainWindow}.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void openHelpWindowUsingMenu() {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        clickOnMenuItemsSequentially(\"Help\", \"F1\");","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Opens the {@code HelpWindow} by pressing the shortcut key associated","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * with the menu bar in {@code MainWindow}.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void openHelpWindowUsingAccelerator() {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.F1);","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Clicks on {@code menuItems} in order.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void clickOnMenuItemsSequentially(String... menuItems) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Arrays.stream(menuItems).forEach(guiRobot::clickOn);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":34,"samuelfangjw":8}},{"path":"src/test/java/guitests/guihandles/MainWindowHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Provides a handle for {@code MainWindow}.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class MainWindowHandle extends StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final PersonListPanelHandle personListPanel;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final ResultDisplayHandle resultDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final CommandBoxHandle commandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final StatusBarFooterHandle statusBarFooter;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final MainMenuHandle mainMenu;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code MainWindowHandle} handler object.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param stage Stage to use as root of the {@code MainWindow}.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public MainWindowHandle(Stage stage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanelHandle(getChildNode(PersonListPanelHandle.PERSON_LIST_VIEW_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplayHandle(getChildNode(ResultDisplayHandle.RESULT_DISPLAY_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        commandBox \u003d new CommandBoxHandle(getChildNode(CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        statusBarFooter \u003d new StatusBarFooterHandle(getChildNode(StatusBarFooterHandle.STATUS_BAR_PLACEHOLDER));","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        mainMenu \u003d new MainMenuHandle(getChildNode(MainMenuHandle.MENU_BAR_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle getPersonListPanel() {","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle getResultDisplay() {","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return resultDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandBoxHandle getCommandBox() {","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return commandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle getStatusBarFooter() {","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return statusBarFooter;","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public MainMenuHandle getMainMenu() {","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return mainMenu;","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":48,"samuelfangjw":5}},{"path":"src/test/java/guitests/guihandles/NodeHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides access to a node in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public abstract class NodeHandle\u003cT extends Node\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final T rootNode;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected NodeHandle(T rootNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.rootNode \u003d requireNonNull(rootNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected T getRootNode() {","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return rootNode;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    protected \u003cQ extends Node\u003e Q getChildNode(String query) {","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Optional\u003cQ\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Clicks on the root node (i.e. itself).","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void click() {","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        guiRobot.clickOn(rootNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":36,"samuelfangjw":11}},{"path":"src/test/java/guitests/guihandles/PersonCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides a handle to a person card in the person list panel.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String ADDRESS_FIELD_ID \u003d \"#address\";","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String PHONE_FIELD_ID \u003d \"#phone\";","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String EMAIL_FIELD_ID \u003d \"#email\";","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String TAGS_FIELD_ID \u003d \"#tags\";","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Label nameLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Label addressLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Label phoneLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Label emailLabel;","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cLabel\u003e tagLabels;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code PersonCardHandle} handler object.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param cardNode Node of {@code PersonCard}.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        addressLabel \u003d getChildNode(ADDRESS_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        phoneLabel \u003d getChildNode(PHONE_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        emailLabel \u003d getChildNode(EMAIL_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Region tagsContainer \u003d getChildNode(TAGS_FIELD_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        tagLabels \u003d tagsContainer","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .getChildrenUnmodifiable()","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(Label.class::cast)","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String getId() {","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return nameLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getAddress() {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return addressLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String getPhone() {","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return phoneLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public String getEmail() {","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return emailLabel.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getTags() {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return tagLabels","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .map(Label::getText)","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Returns true if this handle contains {@code person}.","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public boolean equals(Person person) {","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return getName().equals(person.getName().fullName)","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(person.getAddress().value)","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(person.getPhone().value)","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(person.getEmail().value)","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(person.getTags().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                        .map(tag -\u003e tag.tagName)","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                        .sorted()","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":82,"samuelfangjw":11}},{"path":"src/test/java/guitests/guihandles/PersonListPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Provides a handle for {@code PersonListPanel} containing the list of {@code PersonCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonListPanelHandle extends NodeHandle\u003cListView\u003cPerson\u003e\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String PERSON_LIST_VIEW_ID \u003d \"#personListView\";","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String CARD_PANE_ID \u003d \"#cardPane\";","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Optional\u003cPerson\u003e lastRememberedSelectedPersonCard;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public PersonListPanelHandle(ListView\u003cPerson\u003e personListPanelNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(personListPanelNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns a handle to the selected {@code PersonCardHandle}.","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * A maximum of 1 item can be selected at any time.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws AssertionError if no card is selected, or more than 1 card is selected.","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException if the selected card is currently not in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public PersonCardHandle getHandleToSelectedCard() {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedPersonList \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (selectedPersonList.size() !\u003d 1) {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Person list size expected 1.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return getAllCardNodes().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                .map(PersonCardHandle::new)","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                .filter(handle -\u003e handle.equals(selectedPersonList.get(0)))","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .orElseThrow(IllegalStateException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the index of the selected card.","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public int getSelectedCardIndex() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return getRootNode().getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a card is currently selected.","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isAnyCardSelected() {","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedCardsList \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (selectedCardsList.size() \u003e 1) {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Card list size expected 0 or 1.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return !selectedCardsList.isEmpty();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Navigates the listview to display {@code person}.","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void navigateToCard(Person person) {","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!getRootNode().getItems().contains(person)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Person does not exist.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            getRootNode().scrollTo(person);","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Navigates the listview to {@code index}.","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void navigateToCard(int index) {","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (index \u003c 0 || index \u003e\u003d getRootNode().getItems().size()) {","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Index is out of bounds.\");","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            getRootNode().scrollTo(index);","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Selects the {@code PersonCard} at {@code index} in the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void select(int index) {","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRootNode().getSelectionModel().select(index);","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns the person card handle of a person associated with the {@code index} in the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException if the selected card is currently not in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonCardHandle getPersonCardHandle(int index) {","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return getAllCardNodes().stream()","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .map(PersonCardHandle::new)","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .filter(handle -\u003e handle.equals(getPerson(index)))","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                .findFirst()","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .orElseThrow(IllegalStateException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private Person getPerson(int index) {","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return getRootNode().getItems().get(index);","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns all card nodes in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Card nodes that are visible in the listview are definitely in the scene graph, while some nodes that are not","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * visible in the listview may also be in the scene graph.","lastModifiedDate":"2021-03-03"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private Set\u003cNode\u003e getAllCardNodes() {","lastModifiedDate":"2021-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return guiRobot.lookup(CARD_PANE_ID).queryAll();","lastModifiedDate":"2021-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Remembers the selected {@code PersonCard} in the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void rememberSelectedPersonCard() {","lastModifiedDate":"2021-03-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-03"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            lastRememberedSelectedPersonCard \u003d Optional.empty();","lastModifiedDate":"2021-03-03"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            lastRememberedSelectedPersonCard \u003d Optional.of(selectedItems.get(0));","lastModifiedDate":"2021-03-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns true if the selected {@code PersonCard} is different from the value remembered by the most recent","lastModifiedDate":"2021-03-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code rememberSelectedPersonCard()} call.","lastModifiedDate":"2021-03-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public boolean isSelectedPersonCardChanged() {","lastModifiedDate":"2021-03-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e selectedItems \u003d getRootNode().getSelectionModel().getSelectedItems();","lastModifiedDate":"2021-03-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (selectedItems.size() \u003d\u003d 0) {","lastModifiedDate":"2021-03-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            return lastRememberedSelectedPersonCard.isPresent();","lastModifiedDate":"2021-03-03"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2021-03-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            return !lastRememberedSelectedPersonCard.isPresent()","lastModifiedDate":"2021-03-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    || !lastRememberedSelectedPersonCard.get().equals(selectedItems.get(0));","lastModifiedDate":"2021-03-03"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Returns the size of the list.","lastModifiedDate":"2021-03-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int getListSize() {","lastModifiedDate":"2021-03-03"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return getRootNode().getItems().size();","lastModifiedDate":"2021-03-03"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":153,"samuelfangjw":11}},{"path":"src/test/java/guitests/guihandles/ProjectCardHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code ProjectCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectCardHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    private static final String ID_FIELD_ID \u003d \"#id\";","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String NAME_FIELD_ID \u003d \"#name\";","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private final Label idLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private final Label nameLabel;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectCardHandle} handler object.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     * @param cardNode Node of {@code ProjectCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectCardHandle(Node cardNode) {","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        super(cardNode);","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        idLabel \u003d getChildNode(ID_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        nameLabel \u003d getChildNode(NAME_FIELD_ID);","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public String getId() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        return idLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public String getName() {","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return nameLabel.getText();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * Returns true if this handle contains a {@code Project}.","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public boolean equals(Project project) {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return getName().equals(project.getProjectName().toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/test/java/guitests/guihandles/ProjectDisplayPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle to a {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectDisplayPanelHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String PROJECT_NAME_ID \u003d \"#projectName\";","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String TAB_PANE_ID \u003d \"#tabPane\";","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EVENT_LIST_ID \u003d \"#eventListView\";","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DEADLINE_LIST_ID \u003d \"#completableDeadlineListView\";","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final String TODO_LIST_ID \u003d \"#completableTodoListView\";","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final String PARTICIPANT_LIST_ID \u003d \"#participantListView\";","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private final Label projectName;","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final TabPane tabPane;","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableDeadline\u003e completableDeadlineListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cCompletableTodo\u003e completableTodoListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private final ListView\u003cPerson\u003e participantListView;","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectDisplayPanelHandle} handler object.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     * @param panelNode Node of {@code ProjectDisplayHandle}.","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectDisplayPanelHandle(Node panelNode) {","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        super(panelNode);","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d getChildNode(PROJECT_NAME_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        tabPane \u003d getChildNode(TAB_PANE_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        eventListView \u003d getChildNode(EVENT_LIST_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        completableDeadlineListView \u003d getChildNode(DEADLINE_LIST_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        completableTodoListView \u003d getChildNode(TODO_LIST_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        participantListView \u003d getChildNode(PARTICIPANT_LIST_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public String getProjectName() {","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return projectName.getText();","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public int getTabInFocus() {","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        return tabPane.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    public void setTabInFocus(int tab) {","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        tabPane.getSelectionModel().select(tab);","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":56}},{"path":"src/test/java/guitests/guihandles/ResultDisplayHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A handler for the {@code ResultDisplay} of the UI","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ResultDisplayHandle extends NodeHandle\u003cTextArea\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String RESULT_DISPLAY_ID \u003d \"#resultDisplay\";","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public ResultDisplayHandle(TextArea resultDisplayNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        super(resultDisplayNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns the text in the result display.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return getRootNode().getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":20,"samuelfangjw":5}},{"path":"src/test/java/guitests/guihandles/StageHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Provides access to a stage in a JavaFx application for GUI testing purposes.","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public abstract class StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Stage stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StageHandle(Stage stage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.stage \u003d requireNonNull(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Closes {@code stage}.","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void close() {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        guiRobot.interact(stage::close);","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(stage.isShowing());","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Focuses on this {@code stage}.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String windowTitle \u003d stage.getTitle();","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"Focusing on\" + windowTitle);","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        guiRobot.interact(stage::requestFocus);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"Finishing focus on\" + windowTitle);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns true if currently focusing on this stage.","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean isFocused() {","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return stage.isFocused();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code stage}.","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector for the node to retrieve.","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    protected \u003cT extends Node\u003e T getChildNode(String query) {","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(stage.getScene().getRoot()).lookup(query).tryQuery();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":51,"samuelfangjw":15}},{"path":"src/test/java/guitests/guihandles/StatusBarFooterHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Labeled;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Reused with modifications from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A handle for the {@code StatusBarFooter} at the footer of the application.","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StatusBarFooterHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String STATUS_BAR_PLACEHOLDER \u003d \"#statusbarPlaceholder\";","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String SAVE_LOCATION_STATUS_ID \u003d \"#saveLocationStatus\";","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final Labeled saveLocationNode;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code StatusBarFooterHandle} handler object.","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param statusBarFooterNode Node of the {@code StatusBarFooter}.","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public StatusBarFooterHandle(Node statusBarFooterNode) {","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        super(statusBarFooterNode);","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        saveLocationNode \u003d getChildNode(SAVE_LOCATION_STATUS_ID);","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the text of the \u0027save location\u0027 portion of the status bar.","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getSaveLocation() {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return saveLocationNode.getText();","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":29,"samuelfangjw":6}},{"path":"src/test/java/guitests/guihandles/TodayPanelHandle.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.control.Labeled;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * Provides a handle for {@code TodayPanel} containing the list of {@code EventCard} and","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class TodayPanelHandle extends NodeHandle\u003cNode\u003e {","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DATE_ID \u003d \"#date\";","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    private static final String EVENTS_PLACEHOLDER_ID \u003d \"#eventsListViewPlaceholder\";","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final String DEADLINES_PLACEHOLDER_ID \u003d \"#deadlinesListViewPlaceholder\";","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code TodayPanelHandle} handler object.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     * @param todayPanelNode Node of the {@code TodayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public TodayPanelHandle(Node todayPanelNode) {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        super(todayPanelNode);","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * Returns the date displayed in the {@code TodoCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code LocalDate} displayed in the {@code TodoCard}.","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public String getDisplayedDate() {","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        Labeled date \u003d getChildNode(DATE_ID);","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        return date.getText();","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":33}},{"path":"src/test/java/guitests/guihandles/exceptions/NodeNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles.exceptions;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that the node cannot be found.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NodeNotFoundException extends NoSuchElementException {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":7,"samuelfangjw":5}},{"path":"src/test/java/guitests/guihandles/exceptions/StageNotFoundException.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package guitests.guihandles.exceptions;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Signals that the stage cannot be found.","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StageNotFoundException extends NoSuchElementException {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":7,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/commons/util/DateUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"public class DateUtilTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    public void encodeDate_invalidDate_throwsDateConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"        String invalidDate \u003d \"209-01-01\";","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        String invalidDate1 \u003d \"20090101\";","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"        String invalidDate2 \u003d \"2001-01-01\";","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"        String invalidDate3 \u003d \"a\";","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        String invalidDate4 \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        String invalidDate5 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate1));","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate2));","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate3));","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate4));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        assertThrows(DateConversionException.class, () -\u003e DateUtil.encodeDate(invalidDate5));","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void decodeDate_validDate_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(DateUtil.decodeDate(validDate), \"01 Jan 2020\");","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public void decodeDate_invalidDate_throwsDateConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        LocalDate invalidDate \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.decodeDate(invalidDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public void decodeDateForStorage_invalidDate_throwsDateConversionException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        LocalDate invalidDate \u003d null;","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateUtil.decodeDateForStorage(invalidDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":40,"Eriksen2411":1,"samuelfangjw":7}},{"path":"src/test/java/seedu/address/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void createFile_fileExists_success() throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // valid path","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        Path validFilePath \u003d testFolder.resolve(\"valid/file/path\");","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        // create file at path","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        FileUtil.createFile(validFilePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // method does not throw error","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e FileUtil.createFile(validFilePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":23,"samuelfangjw":19}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.AddProjectCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonProjectsFolderStorage;","lastModifiedDate":"2021-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        JsonProjectsFolderStorage projectsFolderStorage \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                new JsonProjectsFolderStorage(temporaryFolder.resolve(\"projects.json\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, projectsFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        String listCommand \u003d ListContactsCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(listCommand, ListContactsCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_addressBookStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        JsonProjectsFolderStorage projectsFolderStorage \u003d","lastModifiedDate":"2021-03-11"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"                new JsonProjectsFolderStorage(temporaryFolder.resolve(\"ioExceptionProjectsFolder.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, projectsFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_projectsFolderStorageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        // Setup LogicManager with JsonProjectsFolderIoExceptionThrowingStub","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        JsonProjectsFolderStorage projectsFolderStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"                new JsonProjectsFolderIoExceptionThrowingStub(","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"                temporaryFolder.resolve(\"ioExceptionProjectsFolder.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, projectsFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        // Execute add command","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        String projectName \u003d \"New Project\";","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        String addCommand \u003d AddProjectCommand.COMMAND_WORD + \" \" + CliSyntax.PREFIX_NAME + projectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"        Project expectedProject \u003d new ProjectBuilder().withName(projectName).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel.addProject(expectedProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    public void getFilteredProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredProjectsList().remove(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2021-03-16"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"    private static class JsonProjectsFolderIoExceptionThrowingStub extends JsonProjectsFolderStorage {","lastModifiedDate":"2021-03-16"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"        private JsonProjectsFolderIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"            super(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-16"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        public void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder, Path filePath) throws IOException {","lastModifiedDate":"2021-03-16"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2021-03-16"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":155,"samuelfangjw":59}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":43,"samuelfangjw":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        public Path getProjectsFolderFilePath() {","lastModifiedDate":"2021-03-11"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"        public void setProjectsFolderFilePath(Path projectsFolderFilePath) {","lastModifiedDate":"2021-03-11"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"        public void setProjectsFolder(ReadOnlyProjectsFolder projectsFolder) {","lastModifiedDate":"2021-03-11"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"        public ReadOnlyProjectsFolder getProjectsFolder() {","lastModifiedDate":"2021-03-11"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        public boolean hasProject(Project project) {","lastModifiedDate":"2021-03-11"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        public void deleteProject(Project target) {","lastModifiedDate":"2021-03-11"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"        public void addProject(Project projects) {","lastModifiedDate":"2021-03-11"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        public void setProject(Project target, Project editedProject) {","lastModifiedDate":"2021-03-11"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"        public ObservableList\u003cProject\u003e getFilteredProjectList() {","lastModifiedDate":"2021-03-11"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-11"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-11"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"        public void updateFilteredProjectList(Predicate\u003cProject\u003e predicate) {","lastModifiedDate":"2021-03-11"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-03-11"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"-":194,"samuelfangjw":52}},{"path":"src/test/java/seedu/address/logic/commands/AddContactToCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"public class AddContactToCommandTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-15"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-15"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        Project validProject \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        Person validPerson \u003d new PersonBuilder().withName(\"Tom\").build();","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResult \u003d new AddContactToCommand(INDEX_FIRST, validPerson).execute(model);","lastModifiedDate":"2021-03-15"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(String.format(AddContactToCommand.MESSAGE_SUCCESS, validPerson.getName(),","lastModifiedDate":"2021-03-15"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"                validProject.getProjectName()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-15"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        Person personToAdd \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        AddContactToCommand addContactToCommand \u003d new AddContactToCommand(INDEX_THIRD, personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addContactToCommand.execute(model)","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        Person personToAdd \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        AddContactToCommand addContactToCommand \u003d new AddContactToCommand(INDEX_FIRST, personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        projectToAddTo.addParticipant(personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        assertThrows(","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                String.format(","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                        AddContactToCommand.MESSAGE_DUPLICATE_CONTACT,","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"                        projectToAddTo.getProjectName()","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                ), () -\u003e addContactToCommand.execute(model)","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        Person personToAdd \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        AddContactToCommand addOneToOneCommand \u003d new AddContactToCommand(INDEX_FIRST, personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        AddContactToCommand addOneToTwoCommand \u003d new AddContactToCommand(INDEX_SECOND, personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        assertEquals(addOneToOneCommand, addOneToOneCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        AddContactToCommand addOneToOneCommandCopy \u003d new AddContactToCommand(INDEX_FIRST, personToAdd);","lastModifiedDate":"2021-03-15"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        assertEquals(addOneToOneCommandCopy, addOneToOneCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(addOneToOneCommand, 1);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(addOneToOneCommand, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(addOneToTwoCommand, addOneToOneCommand);","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":80,"samuelfangjw":15}},{"path":"src/test/java/seedu/address/logic/commands/AddDeadlineCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    public void execute_validParameters_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        Deadline validDeadline \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        CommandResult commandResult \u003d new AddDeadlineCommand(INDEX_FIRST, validDeadline).execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertEquals(String.format(Messages.MESSAGE_ADD_DEADLINE_SUCCESS, validDeadline),","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToAdd \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        // Typical project list contains only 2 projects","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(INDEX_THIRD, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addDeadlineCommand.execute(model)","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"    public void execute_duplicateDeadline_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToAdd \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(INDEX_FIRST, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        projectToAddTo.addDeadline(deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_DEADLINE, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"                addDeadlineCommand.execute(model));","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"        Deadline deadlineToAdd \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineToOneCommand \u003d new AddDeadlineCommand(INDEX_FIRST, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineToTwoCommand \u003d new AddDeadlineCommand(INDEX_SECOND, deadlineToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        assertEquals(addDeadlineToOneCommand, addDeadlineToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand addDeadlineToOneCommandCopy \u003d new AddDeadlineCommand(INDEX_FIRST, deadlineToAdd);;","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"        assertEquals(addDeadlineToOneCommandCopy, addDeadlineToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addDeadlineToOneCommand, 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addDeadlineToOneCommand, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addDeadlineToTwoCommand, addDeadlineToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":97}},{"path":"src/test/java/seedu/address/logic/commands/AddEventCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_validParameters_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"        Event validEvent \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"                .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        CommandResult commandResult \u003d new AddEventCommand(INDEX_FIRST, validEvent).execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(String.format(Messages.MESSAGE_ADD_EVENT_SUCCESS, validEvent), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToAdd \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"                .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"        // Typical project list contains only 2 projects","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(INDEX_THIRD, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addEventCommand.execute(model)","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToAdd \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"                .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventCommand \u003d new AddEventCommand(INDEX_FIRST, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        projectToAddTo.addEvent(eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_EVENT, () -\u003e addEventCommand.execute(model));","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"        Event eventToAdd \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"                .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventToOneCommand \u003d new AddEventCommand(INDEX_FIRST, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventToTwoCommand \u003d new AddEventCommand(INDEX_SECOND, eventToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(addEventToOneCommand, addEventToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand addEventToOneCommandCopy \u003d new AddEventCommand(INDEX_FIRST, eventToAdd);;","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(addEventToOneCommandCopy, addEventToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        assertNotEquals(addEventToOneCommand, 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"        assertNotEquals(addEventToOneCommand, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"        assertNotEquals(addEventToTwoCommand, addEventToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":1,"Eriksen2411":94}},{"path":"src/test/java/seedu/address/logic/commands/AddTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    public void execute_validParameters_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        Todo validTodo \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        CommandResult commandResult \u003d new AddTodoCommand(INDEX_FIRST, validTodo).execute(model);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertEquals(String.format(Messages.MESSAGE_ADD_TODO_SUCCESS, validTodo), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        Todo todoToAdd \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        // Typical project list contains only 2 projects","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(INDEX_THIRD, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e addTodoCommand.execute(model)","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"    public void execute_duplicateTodo_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        Todo todoToAdd \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        Project projectToAddTo \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        projectToAddTo.addTodo(todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(INDEX_FIRST, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        assertThrows(CommandException.class, Messages.MESSAGE_DUPLICATE_TODO, () -\u003e addTodoCommand.execute(model));","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        Todo todoToAdd \u003d new TodoBuilder().withDescription(\"CS2106 Assignment\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoToOneCommand \u003d new AddTodoCommand(INDEX_FIRST, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoToTwoCommand \u003d new AddTodoCommand(INDEX_SECOND, todoToAdd);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assertEquals(addTodoToOneCommand, addTodoToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"        AddTodoCommand addTodoToOneCommandCopy \u003d new AddTodoCommand(INDEX_FIRST, todoToAdd);;","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        assertEquals(addTodoToOneCommandCopy, addTodoToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addTodoToOneCommand, 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addTodoToOneCommand, null);","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"        // different todo -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"        assertNotEquals(addTodoToTwoCommand, addTodoToOneCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":90}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":30,"samuelfangjw":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void hasUiCommand_commandPresent_assertTrue() {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResultHelp \u003d new CommandResult(\"test\", UiCommand.OPEN_HELP_WINDOW);","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResultExit \u003d new CommandResult(\"test\", UiCommand.EXIT_APPLICATION);","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(commandResultHelp.hasUiCommand());","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(commandResultExit.hasUiCommand());","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void hasUiCommand_commandNotPresent_assertTrue() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult commandResultNone \u003d new CommandResult(\"test\", UiCommand.NONE);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(commandResultNone.hasUiCommand());","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_nullValues_throwsException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandResult(null, null));","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandResult(\"test\", null));","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CommandResult(null, UiCommand.NONE));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                new CommandResult(null, null, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_indexIsNull_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"                new CommandResult(\"test\", UiCommand.NONE, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_noNullValues_success() {","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new CommandResult(\"test\", UiCommand.NONE, Index.fromOneBased(1)));","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", UiCommand.NONE)));","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", UiCommand.OPEN_HELP_WINDOW)));","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", UiCommand.EXIT_APPLICATION)));","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.OPEN_HELP_WINDOW).hashCode());","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\",","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.EXIT_APPLICATION).hashCode());","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"-":49,"samuelfangjw":48}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_INTERVAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectNameContainsKeywordsPredicate;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_INDEX_ONE \u003d \"1\";","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    public static final String VALID_INDEX_TWO \u003d \"2\";","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    public static final String VALID_DESCRIPTION \u003d \" \" + PREFIX_DESCRIPTION + \"CS2106 Tutorial\";","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"    public static final String VALID_DEADLINE_DATE \u003d \" \" + PREFIX_DEADLINE_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"    public static final String VALID_REPEATABLE_DATE \u003d \" \" + PREFIX_REPEATABLE_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"    public static final String VALID_REPEATABLE_INTERVAL \u003d \" \" + PREFIX_REPEATABLE_INTERVAL + \"WEEKLY\";","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"    public static final String INVALID_DESCRIPTION \u003d \" \" + PREFIX_DESCRIPTION + \"\";","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    public static final String INVALID_DEADLINE_DATE \u003d \" \" + PREFIX_DEADLINE_DATE + \"01012020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"    public static final String INVALID_REPEATABLE_DATE \u003d \" \" + PREFIX_REPEATABLE_DATE + \"01012020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"    public static final String INVALID_REPEATABLE_INTERVAL \u003d \" \" + PREFIX_REPEATABLE_INTERVAL + \"Sometimes\";","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public static final String INDEX_STANDALONE_ONE \u003d \" \" + VALID_INDEX_ONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public static final String INDEX_STANDALONE_TWO \u003d \" \" + VALID_INDEX_TWO;","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"    public static final String INVALID_INDEX_STANDALONE \u003d \" \" + \"0\";","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-03-13"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"     * that takes a string {@code expectedMessage} and a {@code uiCommand}.","lastModifiedDate":"2021-03-13"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"                                            UiCommand uiCommand, Model expectedModel) {","lastModifiedDate":"2021-03-13"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, uiCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-03-16"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"     * that takes a string {@code expectedMessage}, {@code uiCommand} and (@code index}.","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                                            UiCommand uiCommand, Index index, Model expectedModel) {","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, uiCommand, index);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"     * Updates {@code model}\u0027s filtered list to show only the project at the given {@code targetIndex} in the","lastModifiedDate":"2021-03-13"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"     * {@code model}\u0027s projects folder.","lastModifiedDate":"2021-03-13"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"    public static void showProjectAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-03-13"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredProjectList().size());","lastModifiedDate":"2021-03-13"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d model.getFilteredProjectList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-03-13"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        final String[] splitName \u003d project.getProjectName().projectName.split(\"\\\\s+\");","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        model.updateFilteredProjectList(new ProjectNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(1, model.getFilteredProjectList().size());","lastModifiedDate":"2021-03-13"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lirc572":8,"vevek":3,"Eriksen2411":9,"-":128,"samuelfangjw":38}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND);","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"lirc572":12,"-":94,"samuelfangjw":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteContactFromCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.DeleteContactFromCommand.MESSAGE_DELETE_PROJECT_SUCCESS;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"public class DeleteContactFromCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        Person personToDelete \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"        editedProject.addParticipant(personToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"                editedProject","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        Index lastContactIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getParticipants().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        DeleteContactFromCommand deleteContactFromCommand \u003d new DeleteContactFromCommand(INDEX_FIRST, lastContactIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_PROJECT_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                personToDelete.getName(), projectToEdit.getProjectName());","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"                getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs()","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        assertCommandSuccess(deleteContactFromCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        Person personToDelete \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        editedProject.addParticipant(personToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                editedProject","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        Index lastContactIndex \u003d Index.fromOneBased(model.getFilteredProjectList().get(","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                INDEX_FIRST.getZeroBased()).getParticipants().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        DeleteContactFromCommand deleteContactFromCommand \u003d new DeleteContactFromCommand(INDEX_THIRD, lastContactIndex);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        assertThrows(","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e deleteContactFromCommand.execute(model)","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        Person personToDelete \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        Project project1ToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        Project editedProject1 \u003d new ProjectBuilder(project1ToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        editedProject1.addParticipant(personToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"                project1ToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"                editedProject1","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        Project project2ToEdit \u003d model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        Project editedProject2 \u003d new ProjectBuilder(project2ToEdit).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        editedProject2.addParticipant(personToDelete);","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        model.setProject(","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"                project2ToEdit,","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"                editedProject2","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"        Index lastContactFromProject1 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getParticipants().size());","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        Index lastContactFromProject2 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased()).getParticipants().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"        DeleteContactFromCommand deleteContactFromProject1Command \u003d new DeleteContactFromCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastContactFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"        DeleteContactFromCommand deleteContactFromProject2Command \u003d new DeleteContactFromCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"                INDEX_SECOND, lastContactFromProject2);","lastModifiedDate":"2021-03-24"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteContactFromProject1Command, deleteContactFromProject1Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"        DeleteContactFromCommand deleteContactFromProject1CommandCopy \u003d new DeleteContactFromCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastContactFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteContactFromProject1Command, deleteContactFromProject1CommandCopy);","lastModifiedDate":"2021-03-24"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteContactFromProject1Command, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteContactFromProject1Command, null);","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-16"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteContactFromProject1Command, deleteContactFromProject2Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":115,"vevek":14,"samuelfangjw":9}},{"path":"src/test/java/seedu/address/logic/commands/DeleteProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexUnfilteredList_success() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"                getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"        assertCommandSuccess(deleteProjectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredProjectList().size() + 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"        assertCommandFailure(deleteProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndexFilteredList_success() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"        Project projectToDelete \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"        String expectedMessage \u003d String.format(DeleteProjectCommand.MESSAGE_DELETE_PROJECT_SUCCESS, projectToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"                getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"        expectedModel.deleteProject(projectToDelete);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"        showNoProject(expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"        assertCommandSuccess(deleteProjectCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"        // ensures that outOfBoundIndex is still in bounds of project list","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getProjectsFolder().getProjectsList().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteProjectCommand \u003d new DeleteProjectCommand(outOfBoundIndex);","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"        assertCommandFailure(deleteProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteFirstProjectCommand \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteSecondProjectCommand \u003d new DeleteProjectCommand(INDEX_SECOND);","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(deleteFirstProjectCommand.equals(deleteFirstProjectCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand deleteFirstProjectCommandCopy \u003d new DeleteProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(deleteFirstProjectCommand.equals(deleteFirstProjectCommandCopy));","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"        assertFalse(deleteFirstProjectCommand.equals(1));","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"        assertFalse(deleteFirstProjectCommand.equals(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"Eriksen2411"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"Eriksen2411"},"content":"        assertFalse(deleteFirstProjectCommand.equals(deleteSecondProjectCommand));","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"Eriksen2411"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"Eriksen2411"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"Eriksen2411"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"Eriksen2411"},"content":"    private void showNoProject(Model model) {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"Eriksen2411"},"content":"        model.updateFilteredProjectList(p -\u003e false);","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"Eriksen2411"},"content":"        assertTrue(model.getFilteredProjectList().isEmpty());","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Eriksen2411":105,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/logic/commands/DeleteTodoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_DELETE_TODO_SUCCESS;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommandTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    private Model model;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    public void execute_validIndexUnfilteredList_success() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        editedProject.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        Index lastTodoIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getTodos().size());","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_FIRST, lastTodoIndex);","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_DELETE_TODO_SUCCESS, lastTodoIndex.getOneBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"                getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs()","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        assertCommandSuccess(deleteTodoCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"    public void execute_invalidProjectIndex_throwsCommandException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"        editedProject.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        Index lastTodoIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getTodos().size());","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_THIRD, lastTodoIndex);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX, () -\u003e deleteTodoCommand.execute(model)","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":88,"author":{"gitId":"vevek"},"content":"    public void execute_invalidTodoIndex_throwsCommandException() {","lastModifiedDate":"2021-03-24"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-24"},{"lineNumber":90,"author":{"gitId":"vevek"},"content":"        Project projectToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":91,"author":{"gitId":"vevek"},"content":"        Project editedProject \u003d new ProjectBuilder(projectToEdit).build();","lastModifiedDate":"2021-03-24"},{"lineNumber":92,"author":{"gitId":"vevek"},"content":"        editedProject.addTodo(todoToDelete);","lastModifiedDate":"2021-03-24"},{"lineNumber":93,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":94,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-24"},{"lineNumber":95,"author":{"gitId":"vevek"},"content":"                projectToEdit,","lastModifiedDate":"2021-03-24"},{"lineNumber":96,"author":{"gitId":"vevek"},"content":"                editedProject","lastModifiedDate":"2021-03-24"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"        Index invalidTodoIndex \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getTodos().size() + 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoCommand \u003d new DeleteTodoCommand(INDEX_FIRST, invalidTodoIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"        assertThrows(","lastModifiedDate":"2021-03-24"},{"lineNumber":105,"author":{"gitId":"vevek"},"content":"                CommandException.class,","lastModifiedDate":"2021-03-24"},{"lineNumber":106,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_INVALID_TODO_DISPLAYED_INDEX, () -\u003e deleteTodoCommand.execute(model)","lastModifiedDate":"2021-03-24"},{"lineNumber":107,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"    public void equals() {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"        Todo todoToDelete \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"        Project project1ToEdit \u003d model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"        Project editedProject1 \u003d new ProjectBuilder(project1ToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"vevek"},"content":"        editedProject1.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"vevek"},"content":"                project1ToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"vevek"},"content":"                editedProject1","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"vevek"},"content":"        Project project2ToEdit \u003d model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"vevek"},"content":"        Project editedProject2 \u003d new ProjectBuilder(project2ToEdit).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"        editedProject2.addTodo(todoToDelete);","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"vevek"},"content":"        model.setProject(","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"vevek"},"content":"                project2ToEdit,","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"vevek"},"content":"                editedProject2","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"vevek"},"content":"        Index lastTodoFromProject1 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(INDEX_FIRST.getZeroBased()).getTodos().getTodos().size());","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"        Index lastTodoFromProject2 \u003d Index.fromOneBased(","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"                model.getFilteredProjectList().get(INDEX_SECOND.getZeroBased()).getTodos().getTodos().size());","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoFromProject1Command \u003d new DeleteTodoCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastTodoFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoFromProject2Command \u003d new DeleteTodoCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"                INDEX_SECOND, lastTodoFromProject2);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"vevek"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteTodoFromProject1Command, deleteTodoFromProject1Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand deleteTodoFromProject1CommandCopy \u003d new DeleteTodoCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"vevek"},"content":"                INDEX_FIRST, lastTodoFromProject1);","lastModifiedDate":"2021-03-24"},{"lineNumber":148,"author":{"gitId":"vevek"},"content":"        assertEquals(deleteTodoFromProject1Command, deleteTodoFromProject1CommandCopy);","lastModifiedDate":"2021-03-24"},{"lineNumber":149,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"vevek"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteTodoFromProject1Command, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":152,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"vevek"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteTodoFromProject1Command, null);","lastModifiedDate":"2021-03-24"},{"lineNumber":155,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"vevek"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"vevek"},"content":"        assertNotEquals(deleteTodoFromProject1Command, deleteTodoFromProject2Command);","lastModifiedDate":"2021-03-24"},{"lineNumber":158,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":160}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, descriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-03-11"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-03-11"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST, new EditPersonDescriptor());","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-03-11"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2021-03-11"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND, descriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND.getZeroBased());","lastModifiedDate":"2021-03-14"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST,","lastModifiedDate":"2021-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST, DESC_AMY);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST, copyDescriptor);","lastModifiedDate":"2021-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND, DESC_AMY)));","lastModifiedDate":"2021-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST, DESC_BOB)));","lastModifiedDate":"2021-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"lirc572":19,"-":149,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.EXIT_APPLICATION);","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"samuelfangjw":3}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":81,"samuelfangjw":3}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, UiCommand.OPEN_HELP_WINDOW);","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":19,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/logic/commands/ListContactsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactsCommand.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"public class ListContactsCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new ProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ListContactsCommand(), model, ListContactsCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.SHOW_CONTACTS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        showPersonAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ListContactsCommand(), model, ListContactsCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.SHOW_CONTACTS, expectedModel);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"lirc572":2,"-":31,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/logic/commands/ListProjectsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showProjectAtIndex;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListProjectsCommand.","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"public class ListProjectsCommandTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private Model model;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void setUp() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), getTypicalProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), model.getProjectsFolder(), new UserPrefs());","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ListProjectsCommand(), model, ListProjectsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        showProjectAtIndex(model, INDEX_FIRST);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ListProjectsCommand(), model, ListProjectsCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":2,"samuelfangjw":39}},{"path":"src/test/java/seedu/address/logic/commands/ShowOverviewTabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ShowOverviewTabCommand}.","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ShowOverviewTabCommandTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_newModelManager_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ShowOverviewTabCommand(), model, ShowOverviewTabCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.SHOW_OVERVIEW, expectedModel);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/test/java/seedu/address/logic/commands/ShowTodosTabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-15"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-15"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ShowTodosTabCommand}.","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class ShowTodosTabCommandTest {","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_newModelManager_success() {","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ShowTodosTabCommand(), model, ShowTodosTabCommand.MESSAGE_SUCCESS,","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.SHOW_TODOS, expectedModel);","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-15"}],"authorContributionMap":{"samuelfangjw":25}},{"path":"src/test/java/seedu/address/logic/commands/ViewProjectCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Contains unit tests for {@code ViewProjectCommand}.","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class ViewProjectCommandTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        Project validProject \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        model.addProject(validProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        expectedModel.addProject(validProject);","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandSuccess(new ViewProjectCommand(INDEX_FIRST), model,","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                String.format(ViewProjectCommand.MESSAGE_SUCCESS, validProject),","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"                UiCommand.DISPLAY_PROJECT, INDEX_FIRST, expectedModel);","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        ViewProjectCommand viewProjectCommand \u003d new ViewProjectCommand(INDEX_FIRST);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertCommandFailure(viewProjectCommand, model, Messages.MESSAGE_INVALID_PROJECT_DISPLAYED_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":42}},{"path":"src/test/java/seedu/address/logic/parser/AddContactToCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-03-15"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-03-15"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-03-15"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-03-15"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-15"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactToCommand;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-15"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-15"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"public class AddContactToCommandParserTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"    private AddContactToCommandParser parser \u003d new AddContactToCommandParser();","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-03-15"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        // all field appear once","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"                new AddContactToCommand(expectedProjectIndex, expectedPerson)","lastModifiedDate":"2021-03-15"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"                new AddContactToCommand(expectedProjectIndex, expectedPerson));","lastModifiedDate":"2021-03-15"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"                new AddContactToCommand(expectedProjectIndex, expectedPerson));","lastModifiedDate":"2021-03-15"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2021-03-15"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"                new AddContactToCommand(expectedProjectIndex, expectedPerson));","lastModifiedDate":"2021-03-15"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"                new AddContactToCommand(expectedProjectIndex, expectedPerson));","lastModifiedDate":"2021-03-15"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-03-15"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2021-03-15"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"                .build();","lastModifiedDate":"2021-03-15"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"                new AddContactToCommand(expectedProjectIndex, expectedPersonMultipleTags));","lastModifiedDate":"2021-03-15"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddContactToCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"        // missing project index","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        // missing name prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        // missing phone prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        // missing email prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"                        + ADDRESS_DESC_BOB + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-15"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        // missing address prefix","lastModifiedDate":"2021-03-15"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"                        + TAG_DESC_FRIEND,","lastModifiedDate":"2021-03-15"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-14"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-14"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        // invalid project index","lastModifiedDate":"2021-03-14"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-15"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        // invalid name","lastModifiedDate":"2021-03-15"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        // invalid phone","lastModifiedDate":"2021-03-15"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        // invalid email","lastModifiedDate":"2021-03-15"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2021-03-15"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        // invalid address","lastModifiedDate":"2021-03-15"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"                + INVALID_ADDRESS_DESC + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"        // invalid tag","lastModifiedDate":"2021-03-15"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"                + ADDRESS_DESC_BOB + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-03-15"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2021-03-15"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"                        + INVALID_ADDRESS_DESC, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-03-15"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":142}},{"path":"src/test/java/seedu/address/logic/parser/AddDeadlineCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"public class AddDeadlineCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    private AddDeadlineCommandParser parser \u003d new AddDeadlineCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        Deadline expectedDeadline \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        // all field appear","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION + VALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"                new AddDeadlineCommand(expectedProjectIndex, expectedDeadline)","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddDeadlineCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION + VALID_DEADLINE_DATE, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DEADLINE_DATE, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        // missing date","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + VALID_DESCRIPTION + VALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_DESCRIPTION + VALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        // invalid date","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION + INVALID_DEADLINE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":68}},{"path":"src/test/java/seedu/address/logic/parser/AddEventCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REPEATABLE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_REPEATABLE_INTERVAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPEATABLE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_REPEATABLE_INTERVAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"public class AddEventCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"    private AddEventCommandParser parser \u003d new AddEventCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"        Event expectedEvent \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"                .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"        // all field appear","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"                + VALID_REPEATABLE_INTERVAL + VALID_REPEATABLE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"                new AddEventCommand(expectedProjectIndex, expectedEvent)","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"        // missing project index","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"                        + VALID_REPEATABLE_INTERVAL + VALID_REPEATABLE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"                        + VALID_REPEATABLE_INTERVAL + VALID_REPEATABLE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"        // missing interval","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"                        + VALID_REPEATABLE_DATE,","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"        // missing date","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"                        + VALID_REPEATABLE_INTERVAL,","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"        // invalid project index","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"                + VALID_REPEATABLE_INTERVAL + VALID_REPEATABLE_DATE, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"        // invalid description","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"                + VALID_REPEATABLE_INTERVAL + VALID_REPEATABLE_DATE, Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"        // invalid interval","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"                + INVALID_REPEATABLE_INTERVAL + VALID_REPEATABLE_DATE, Messages.MESSAGE_PARSER_INTERVAL_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"        // invalid date","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"                + VALID_REPEATABLE_INTERVAL + INVALID_REPEATABLE_DATE, Messages.MESSAGE_PARSER_DATE_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Eriksen2411":87}},{"path":"src/test/java/seedu/address/logic/parser/AddTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INDEX_STANDALONE_ONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_INDEX_STANDALONE;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"public class AddTodoCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    private AddTodoCommandParser parser \u003d new AddTodoCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        Todo expectedTodo \u003d new TodoBuilder().withDescription(\"CS2106 Tutorial\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        // all field appear","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, INDEX_STANDALONE_ONE + VALID_DESCRIPTION,","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"                new AddTodoCommand(expectedProjectIndex, expectedTodo)","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, VALID_DESCRIPTION, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        // missing description","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE, expectedMessage);","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INVALID_INDEX_STANDALONE + VALID_DESCRIPTION, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, INDEX_STANDALONE_ONE + INVALID_DESCRIPTION,","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"                Messages.MESSAGE_PARSER_DESCRIPTION_CONSTRAINTS);","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"vevek":56}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_DATE;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REPEATABLE_INTERVAL;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactToCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddDeadlineCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.AddTodoCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactFromCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    public void parseCommand_addCto() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-15"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        AddContactToCommand command \u003d (AddContactToCommand) parser.parseCommand(","lastModifiedDate":"2021-03-15"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"                PersonUtil.getAddCtoCommand(projectIndex, person)","lastModifiedDate":"2021-03-15"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-15"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        assertEquals(new AddContactToCommand(projectIndex, person), command);","lastModifiedDate":"2021-03-15"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"    public void parseCommand_addDto_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new DeadlineBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"                .withByDate(LocalDate.of(2020, 01, 01)).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        String addDToCommand \u003d AddDeadlineCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"                + PREFIX_DESCRIPTION + \"CS2106 Tutorial\" + \" \" + PREFIX_DEADLINE_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"        AddDeadlineCommand command \u003d (AddDeadlineCommand) parser.parseCommand(addDToCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"        assertEquals(new AddDeadlineCommand(projectIndex, deadline), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"vevek"},"content":"    public void parseCommand_addEto_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"        Event event \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"                .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"        String addEToCommand \u003d AddEventCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"                + PREFIX_DESCRIPTION + \"CS2106 Tutorial\" + \" \" + PREFIX_REPEATABLE_INTERVAL + \"WEEKLY\" + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"                + PREFIX_REPEATABLE_DATE + \"01-01-2020\";","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"        AddEventCommand command \u003d (AddEventCommand) parser.parseCommand(addEToCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(new AddEventCommand(projectIndex, event), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"vevek"},"content":"    public void parseCommand_addTto_success() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new TodoBuilder().withDescription(\"CS2106 Tutorial\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"vevek"},"content":"        String inputCommand \u003d AddTodoCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"vevek"},"content":"                + PREFIX_DESCRIPTION + \"CS2106 Tutorial\";","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"vevek"},"content":"        AddTodoCommand command \u003d (AddTodoCommand) parser.parseCommand(inputCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"vevek"},"content":"        assertEquals(new AddTodoCommand(projectIndex, todo), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":110,"author":{"gitId":"vevek"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST.getOneBased());","lastModifiedDate":"2021-03-24"},{"lineNumber":111,"author":{"gitId":"vevek"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":113,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":114,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"Eriksen2411"},"content":"    public void parseCommand_deleteP() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"Eriksen2411"},"content":"        String deleteProjectCommandLine \u003d DeleteProjectCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased();","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"Eriksen2411"},"content":"        DeleteProjectCommand command \u003d (DeleteProjectCommand) parser.parseCommand(deleteProjectCommandLine);","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(new DeleteProjectCommand(projectIndex), command);","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"    public void parseCommand_deleteCfrom() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":124,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        DeleteContactFromCommand command \u003d (DeleteContactFromCommand) parser.parseCommand(","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"Eriksen2411"},"content":"                DeleteContactFromCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"Eriksen2411"},"content":"                + PREFIX_REMOVE_TASK_INDEX + \" \" + projectIndex.getOneBased()","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        assertEquals(new DeleteContactFromCommand(INDEX_FIRST, INDEX_FIRST), command);","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":133,"author":{"gitId":"vevek"},"content":"    public void parseCommand_deleteT() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":134,"author":{"gitId":"vevek"},"content":"        Index projectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"        Index todoIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":136,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand command \u003d (DeleteTodoCommand) parser.parseCommand(","lastModifiedDate":"2021-03-24"},{"lineNumber":137,"author":{"gitId":"vevek"},"content":"                DeleteTodoCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":138,"author":{"gitId":"vevek"},"content":"                        + PREFIX_REMOVE_TASK_INDEX + \" \" + todoIndex.getOneBased()","lastModifiedDate":"2021-03-24"},{"lineNumber":139,"author":{"gitId":"vevek"},"content":"        );","lastModifiedDate":"2021-03-24"},{"lineNumber":140,"author":{"gitId":"vevek"},"content":"        assertEquals(new DeleteTodoCommand(projectIndex, todoIndex), command);","lastModifiedDate":"2021-03-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":144,"author":{"gitId":"vevek"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2021-03-24"},{"lineNumber":145,"author":{"gitId":"vevek"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":146,"author":{"gitId":"vevek"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2021-03-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"                + INDEX_FIRST.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-03-14"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"        assertEquals(new EditCommand(INDEX_FIRST, descriptor), command);","lastModifiedDate":"2021-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ListContactsCommand.COMMAND_WORD) instanceof ListContactsCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(parser.parseCommand(ListContactsCommand.COMMAND_WORD + \" 3\") instanceof ListContactsCommand);","lastModifiedDate":"2021-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"lirc572":23,"vevek":47,"Eriksen2411":28,"-":94,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST));","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"lirc572":2,"-":30}},{"path":"src/test/java/seedu/address/logic/parser/DeleteContactFromCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"lirc572"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.DeleteContactFromCommand;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"public class DeleteContactFromCommandParserTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"lirc572"},"content":"    private DeleteContactFromCommandParser parser \u003d new DeleteContactFromCommandParser();","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"lirc572"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"lirc572"},"content":"        Index expectedContactIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"lirc572"},"content":"        // all field appear once","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"lirc572"},"content":"        assertParseSuccess(parser, INDEX_FIRST.getOneBased() + \" \" + PREFIX_REMOVE_TASK_INDEX + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"lirc572"},"content":"                        + INDEX_FIRST.getOneBased(),","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"lirc572"},"content":"                new DeleteContactFromCommand(expectedProjectIndex, expectedContactIndex)","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"        );","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteContactFromCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        // missing project index","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, PREFIX_REMOVE_TASK_INDEX + \" \" + INDEX_FIRST.getOneBased(),","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"                expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, \"\" + INDEX_FIRST.getOneBased(), expectedMessage);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        // invalid project index","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, \"0 \" + PREFIX_REMOVE_TASK_INDEX + \" \"","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"                + INDEX_FIRST.getOneBased(), MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        // invalid remove","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        assertParseFailure(parser, INDEX_FIRST.getOneBased() + \" \" + PREFIX_REMOVE_TASK_INDEX + \" 0\",","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"lirc572":52}},{"path":"src/test/java/seedu/address/logic/parser/DeleteProjectCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-17"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-17"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.logic.commands.DeleteProjectCommand;","lastModifiedDate":"2021-03-17"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"public class DeleteProjectCommandParserTest {","lastModifiedDate":"2021-03-17"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"    private DeleteProjectCommandParser parser \u003d new DeleteProjectCommandParser();","lastModifiedDate":"2021-03-17"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"        assertParseSuccess(parser, \"1\", new DeleteProjectCommand(INDEX_FIRST));","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteProjectCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-03-17"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"}","lastModifiedDate":"2021-03-17"}],"authorContributionMap":{"Eriksen2411":26}},{"path":"src/test/java/seedu/address/logic/parser/DeleteTodoCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.logic.commands.DeleteTodoCommand;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"public class DeleteTodoCommandParserTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"    private DeleteTodoCommandParser parser \u003d new DeleteTodoCommandParser();","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        Index expectedProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        Index expectedTodoIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        String userInput \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_REMOVE_TASK_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        DeleteTodoCommand command \u003d new DeleteTodoCommand(expectedProjectIndex, expectedTodoIndex);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        // all field appear once","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        assertParseSuccess(parser, userInput, command);","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteTodoCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        String userInputMissingProject \u003d PREFIX_REMOVE_TASK_INDEX + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        // missing project index","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingProject, expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        String userInputMissingPrefix \u003d INDEX_FIRST.getOneBased() + \" \" + INDEX_FIRST.getOneBased();","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingPrefix, expectedMessage);","lastModifiedDate":"2021-03-24"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        String userInputMissingTodo \u003d INDEX_FIRST.getOneBased() + \" \" + PREFIX_REMOVE_TASK_INDEX;","lastModifiedDate":"2021-03-24"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        String expectedMessageMissingTodo \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2021-03-24"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"        // missing remove prefix","lastModifiedDate":"2021-03-24"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputMissingTodo, expectedMessageMissingTodo);","lastModifiedDate":"2021-03-24"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-03-24"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        Index validProjectIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"        Index validTodoIndex \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-24"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        String userInputInvalidProjectIndex \u003d \"0 \" + PREFIX_REMOVE_TASK_INDEX + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"                + validTodoIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-24"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputInvalidProjectIndex, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        String userInputInvalidTodoIndex \u003d validProjectIndex + \" \" + PREFIX_REMOVE_TASK_INDEX + \" 0\";","lastModifiedDate":"2021-03-24"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        // invalid remove todo index","lastModifiedDate":"2021-03-24"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputInvalidTodoIndex,","lastModifiedDate":"2021-03-24"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":69,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":70,"author":{"gitId":"vevek"},"content":"        String userInputInvalidProjectIndexExceeded \u003d \"10 \" + PREFIX_REMOVE_TASK_INDEX + \" \"","lastModifiedDate":"2021-03-24"},{"lineNumber":71,"author":{"gitId":"vevek"},"content":"                + validTodoIndex;","lastModifiedDate":"2021-03-24"},{"lineNumber":72,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":73,"author":{"gitId":"vevek"},"content":"        // invalid project index","lastModifiedDate":"2021-03-24"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputInvalidProjectIndexExceeded, MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":75,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"        String userInputInvalidTodoIndexExceeded \u003d validProjectIndex + \" \" + PREFIX_REMOVE_TASK_INDEX + \" 10\";","lastModifiedDate":"2021-03-24"},{"lineNumber":77,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":78,"author":{"gitId":"vevek"},"content":"        // invalid remove todo index","lastModifiedDate":"2021-03-24"},{"lineNumber":79,"author":{"gitId":"vevek"},"content":"        assertParseFailure(parser, userInputInvalidTodoIndexExceeded,","lastModifiedDate":"2021-03-24"},{"lineNumber":80,"author":{"gitId":"vevek"},"content":"                MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-03-24"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":82,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":83,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"vevek":83}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_SECOND;","lastModifiedDate":"2021-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"        Index targetIndex \u003d INDEX_THIRD;","lastModifiedDate":"2021-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"lirc572":9,"-":202}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-17"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"    private static final String INVALID_INTERVAL \u003d \"Sometimes\";","lastModifiedDate":"2021-03-17"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"    private static final String INVALID_DATE \u003d \"01012021\";","lastModifiedDate":"2021-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"    private static final String VALID_DESCRIPTION \u003d \" Tutorial \";","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"    private static final String VALID_INTERVAL \u003d \"WEEKLY\";","lastModifiedDate":"2021-03-17"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"    private static final String VALID_DATE \u003d \"01-01-2021\";","lastModifiedDate":"2021-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        assertEquals(INDEX_FIRST, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":204,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDescription_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDescription(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDescription_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDescription(INVALID_DESCRIPTION));","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDescription_validValue_returnsTrimmedDescription() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":217,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(\"Tutorial\", ParserUtil.parseDescription(VALID_DESCRIPTION));","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"Eriksen2411"},"content":"    public void parseInterval_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseInterval(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"Eriksen2411"},"content":"    public void parseInterval_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":227,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseInterval(INVALID_INTERVAL));","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"Eriksen2411"},"content":"    public void parseInterval_validValue_returnsTrimmedInterval() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(Interval.WEEKLY, ParserUtil.parseInterval(VALID_INTERVAL));","lastModifiedDate":"2021-03-17"},{"lineNumber":233,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":234,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":235,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":236,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":237,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate(null));","lastModifiedDate":"2021-03-17"},{"lineNumber":238,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":239,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":240,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":241,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":242,"author":{"gitId":"Eriksen2411"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2021-03-17"},{"lineNumber":243,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":244,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":245,"author":{"gitId":"Eriksen2411"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":246,"author":{"gitId":"Eriksen2411"},"content":"    public void parseDate_validValue_returnsTrimmedDate() throws Exception {","lastModifiedDate":"2021-03-17"},{"lineNumber":247,"author":{"gitId":"Eriksen2411"},"content":"        assertEquals(LocalDate.of(2021, 1, 1), ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2021-03-17"},{"lineNumber":248,"author":{"gitId":"Eriksen2411"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":249,"author":{"gitId":"Eriksen2411"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"lirc572":3,"Eriksen2411":54,"-":193}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        AddressBook addressBook1 \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d addressBook1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, addressBook1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"        AddressBook addressBook2 \u003d getTypicalAddressBook();","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, addressBook2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        addressBook1.removePerson(ALICE);","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d addressBook1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"lirc572":21,"-":102}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"    public void getProjectsFolderFilePath_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        assertEquals(modelManager.getProjectsFolderFilePath(), modelManager.getUserPrefs().getProjectsFolderFilePath());","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"    public void setProjectsFolderFilePath_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"        Path path \u003d Paths.get(\"data\" , \"test.json\");","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        modelManager.setProjectsFolderFilePath(path);","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        assertEquals(path, modelManager.getUserPrefs().getProjectsFolderFilePath());","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    public void setProjectsFolder_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        try {","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"            ProjectsFolder pf \u003d getTypicalProjectsFolder();","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"            modelManager.setProjectsFolder(pf);","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"            assertEquals(pf, modelManager.getProjectsFolder());","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"        } catch (DateConversionException e) {","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        }","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder projectsFolder \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        modelManager \u003d new ModelManager(addressBook, projectsFolder, userPrefs);","lastModifiedDate":"2021-03-11"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, projectsFolder, userPrefs);","lastModifiedDate":"2021-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, projectsFolder, userPrefs)));","lastModifiedDate":"2021-03-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, projectsFolder, userPrefs)));","lastModifiedDate":"2021-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, projectsFolder, differentUserPrefs)));","lastModifiedDate":"2021-03-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"lirc572":25,"-":127,"samuelfangjw":6}},{"path":"src/test/java/seedu/address/model/ProjectsFolderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collection;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectsFolderTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private final ProjectsFolder projectsFolder \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor() {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Collections.emptyList(), projectsFolder.getProjectsList());","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e projectsFolder.resetData(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData_withValidReadOnlyProjectsFolder_replacesData() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder newData \u003d getTypicalProjectsFolder();","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder.resetData(newData);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(newData, projectsFolder);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void resetData_withDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e newProjects \u003d Arrays.asList(TEST_PROJECT, TEST_PROJECT);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolderStub newData \u003d new ProjectsFolderStub(newProjects);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e projectsFolder.resetData(newData));","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public void hasProject_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e projectsFolder.hasProject(null));","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public void hasProject_projectNotInProjectsFolder_returnsFalse() {","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectsFolder.hasProject(TEST_PROJECT));","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    public void hasProject_projectInProjectsFolder_returnsTrue() {","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder.addProject(TEST_PROJECT);","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(projectsFolder.hasProject(TEST_PROJECT));","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    public void getProjectList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e projectsFolder.getProjectsList().remove(0));","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * A stub ReadOnlyProjectsFolder whose projects list can violate interface constraints.","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    private static class ProjectsFolderStub implements ReadOnlyProjectsFolder {","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        private final ObservableList\u003cProject\u003e projects \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolderStub(Collection\u003cProject\u003e projects) {","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"            this.projects.setAll(projects);","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        @Override","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        public ObservableList\u003cProject\u003e getProjectsList() {","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"            return projects;","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d projectsFolder.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, projectsFolder.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        ProjectsFolder projectsFolder2 \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, projectsFolder2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        projectsFolder.addProject(new ProjectBuilder().withName(\"project\").build());","lastModifiedDate":"2021-03-18"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d projectsFolder.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    public void toString_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"0 projects\", projectsFolder.toString());","lastModifiedDate":"2021-03-18"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"lirc572":25,"samuelfangjw":90}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"lirc572"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"lirc572"},"content":"        UserPrefs testUserPref \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPrefsCopy \u003d new UserPrefs(testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"        assertEquals(testUserPref, userPrefsCopy);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"        assertEquals(testUserPref, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testUserPref, null);","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testUserPref, 5);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"lirc572"},"content":"        // different guiSettings -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"        UserPrefs differentUserPrefs1 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"        differentUserPrefs1.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentUserPrefs1, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        // different addressBookFilePath -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        UserPrefs differentUserPrefs2 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        differentUserPrefs2.setAddressBookFilePath(Paths.get(\"data\" , \"test.json\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentUserPrefs2, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"        // different projectsFolderFilePath -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        UserPrefs differentUserPrefs3 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        differentUserPrefs3.setProjectsFolderFilePath(Paths.get(\"data\" , \"test.json\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentUserPrefs3, testUserPref);","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref1 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref2 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref3 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        userPref3.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref4 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        userPref4.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref5 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        userPref5.setAddressBookFilePath(Paths.get(\"data\" , \"test.json\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        UserPrefs userPref6 \u003d new UserPrefs();","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        userPref6.setProjectsFolderFilePath(Paths.get(\"data\" , \"test.json\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d userPref1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        int hashcode2 \u003d userPref2.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d userPref3.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d userPref4.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        int hashcode5 \u003d userPref5.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        int hashcode6 \u003d userPref6.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, userPref1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode3, userPref3.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode5, userPref5.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode6, userPref6.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, hashcode2);","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode5);","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode6);","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"lirc572":76,"-":21}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"lirc572"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"    public void iterator_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"        Iterator\u003cPerson\u003e iterator \u003d uniquePersonList.iterator();","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        assertTrue(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"        assertEquals(iterator.next(), ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniquePersonList.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"        UniquePersonList uniquePersonList2 \u003d new UniquePersonList();","lastModifiedDate":"2021-03-18"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniquePersonList2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d uniquePersonList.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"lirc572":34,"-":170}},{"path":"src/test/java/seedu/address/model/project/DeadlineListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class DeadlineListTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    public void constructor_empty_createEmptyDeadlineList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        DeadlineList emptyDeadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        assertTrue(emptyDeadlineList.getDeadlines().isEmpty());","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeadlineList(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void constructor_singleCompletableTask_valid() {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(\"Test Description\", validDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        assertDoesNotThrow(() -\u003e new DeadlineList(deadlines));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"    public void getCompletableTasks_validCompletableTaskList_equalsOriginalList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(\"Test Description\", validDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"        DeadlineList deadlineList \u003d new DeadlineList(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        assertEquals(deadlines, deadlineList.getDeadlines());","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validDeadlineList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineListCopy \u003d deadlineList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(deadlineList, deadlineListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineList \u003d\u003d deadlineListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":47,"samuelfangjw":9}},{"path":"src/test/java/seedu/address/model/project/EventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class EventListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_empty_createEmptyEventList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        EventList emptyEventList \u003d new EventList();","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyEventList.getEvents().isEmpty());","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new EventList(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_singleEvent_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new Event(\"Test Event\", Interval.NONE, LocalDate.of(2020, 1, 1));","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new EventList(events));","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void getEvent_validEvent_equalsOriginalList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new Event(\"Test Event\", Interval.NONE, LocalDate.of(2020, 1, 1));","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList(events);","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(events, eventList.getEvents());","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validEventList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventListCopy \u003d eventList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(eventList, eventListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventList \u003d\u003d eventListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":54}},{"path":"src/test/java/seedu/address/model/project/ParticipantListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class ParticipantListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_empty_createEmptyParticipantList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList emptyParticipantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(emptyParticipantList.getParticipants().isEmpty());","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ParticipantList(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_singleParticipant_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        participants.add(ALICE);","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new ParticipantList(participants));","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public void getPaticipants_validParticipantsList_equalsOriginalList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        participants.add(ALICE);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(participants, participantList.getParticipants());","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"    public void size_validParticipantsList_correct() {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"        participants.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        assertEquals(participants.size(), participantList.size());","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        participants.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertEquals(participants.size(), participantList.size());","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"    public void get_validParticipantsList_correct() {","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        participants.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        assertEquals(participants.get(0), participantList.get(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        participants.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"        participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        assertEquals(participants.get(0), participantList.get(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertEquals(participants.get(1), participantList.get(1));","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    public void delete_validParticipantsList_correct() {","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        participants.add(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        participants.add(BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"        assertEquals(2, participantList.size());","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        participantList.delete(0);","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, participantList.size());","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        assertEquals(participantList.get(0), BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        participantList.delete(0);","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, participantList.size());","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validParticipantList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantListCopy \u003d participantList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(participantList, participantListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(participantList \u003d\u003d participantListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":38,"samuelfangjw":52}},{"path":"src/test/java/seedu/address/model/project/ProjectNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameContainsKeywordsPredicateTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        ProjectNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        ProjectNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"                new ProjectNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/test/java/seedu/address/model/project/ProjectNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectNameTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ProjectName(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_invalidProjectName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        String invalidProjectName \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ProjectName(invalidProjectName));","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void isValidProjectName() {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // null name","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e ProjectName.isValidProjectName(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        // invalid name","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(ProjectName.isValidProjectName(\"cs1101s*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // valid name","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"school project\")); // alphabets only","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"12345\")); // numbers only","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"cs2103t project\")); // alphanumeric characters","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"CS2103T Project\")); // with capital letters","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(ProjectName.isValidProjectName(\"School summer orbital project with long name\")); // long names","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"samuelfangjw":40}},{"path":"src/test/java/seedu/address/model/project/ProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-10"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import static seedu.address.testutil.TypicalProjects.CS1101S_NAME;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_ONE \u003d new ProjectBuilder().withName(\"Test One\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_TWO \u003d new ProjectBuilder().withName(\"Test Two\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public void isSameProject() {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(TEST_PROJECT_ONE.isSameProject(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.isSameProject(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":40,"author":{"gitId":"lirc572"},"content":"        // equal project name -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":41,"author":{"gitId":"lirc572"},"content":"        assertTrue(TEST_PROJECT_ONE.isSameProject(new ProjectBuilder().withName(\"Test One\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_emptyProjectWithName_isValid() {","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName name \u003d new ProjectName(\"Test Project\");","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(() -\u003e new Project(name));","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void constructor_projectWithParameters_isValid() {","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        ProjectName name \u003d new ProjectName(\"Test Project\");","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new Event(\"Test Event\", Interval.NONE, LocalDate.of(2020, 1, 1));","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        events.add(event);","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList(events);","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"vevek"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"vevek"},"content":"        Deadline deadline \u003d new Deadline(\"Test Description\", validDate);","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"vevek"},"content":"        deadlines.add(deadline);","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"vevek"},"content":"        DeadlineList deadlineList \u003d new DeadlineList(deadlines);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        ArrayList\u003cPerson\u003e participants \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-10"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        participants.add(ALICE);","lastModifiedDate":"2021-03-10"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList(participants);","lastModifiedDate":"2021-03-10"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":74,"author":{"gitId":"vevek"},"content":"        assertDoesNotThrow(() -\u003e new Project(name, eventList, todoList, deadlineList, participantList));","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-10"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(TEST_PROJECT_ONE.equals(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"        // same project name, default for other fields -\u003e returns true","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"lirc572"},"content":"        assertTrue(TEST_PROJECT_ONE.equals(new ProjectBuilder().withName(\"Test One\").build()));","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.equals(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.equals(5));","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        // different project -\u003e returns false","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(TEST_PROJECT_ONE.equals(TEST_PROJECT_TWO));","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"    public void getProjectName_validProject_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"        assertEquals(new ProjectBuilder().withName(CS1101S_NAME.toString()).build().getProjectName(), CS1101S_NAME);","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"    public void getParticipant_validProject_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"        participantList.addParticipant(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"                .withParticipantList(participantList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getParticipants().get(0), project.getParticipant(0));","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"    public void addParticipant_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getParticipants().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"lirc572"},"content":"        project.addParticipant(ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getParticipants().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"        assertEquals(ALICE, project.getParticipants().getParticipants().get(0));","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"    public void hasParticipant_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        participantList.addParticipant(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"                .withParticipantList(participantList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"        assertTrue(project.hasParticipant(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"        assertFalse(project.hasParticipant(BOB));","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        assertFalse(new ProjectBuilder().withName(CS1101S_NAME.toString()).build().hasParticipant(ALICE));","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"    public void deleteParticipant_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        participantList.addParticipant(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        participantList.addParticipant(BOB);","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"lirc572"},"content":"                .withParticipantList(participantList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"lirc572"},"content":"        int size \u003d project.getParticipants().size();","lastModifiedDate":"2021-03-16"},{"lineNumber":137,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getParticipant(size - 1), BOB);","lastModifiedDate":"2021-03-16"},{"lineNumber":138,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getParticipant(size - 2), ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":139,"author":{"gitId":"lirc572"},"content":"        project.deleteParticipant(size - 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":140,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getParticipants().size(), size - 1);","lastModifiedDate":"2021-03-16"},{"lineNumber":141,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getParticipant(size - 2), ALICE);","lastModifiedDate":"2021-03-16"},{"lineNumber":142,"author":{"gitId":"lirc572"},"content":"        project.deleteParticipant(size - 2);","lastModifiedDate":"2021-03-16"},{"lineNumber":143,"author":{"gitId":"lirc572"},"content":"        assertEquals(project.getParticipants().size(), size - 2);","lastModifiedDate":"2021-03-16"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"    @Test void addDeadline_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getDeadlines().getDeadlines().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"        Deadline deadline \u003d new Deadline(\"deadline\", LocalDate.now());","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"        project.addDeadline(deadline);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getDeadlines().getDeadlines().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"        assertEquals(deadline, project.getDeadlines().getDeadlines().get(INDEX_FIRST.getZeroBased()));","lastModifiedDate":"2021-03-18"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"    @Test void addEvent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getEvents().getEvents().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        Event event \u003d new Event(\"event\", Interval.NONE, LocalDate.now());","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"        project.addEvent(event);","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getEvents().getEvents().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"        assertEquals(event, project.getEvents().getEvents().get(INDEX_FIRST.getZeroBased()));","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"    @Test void addTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getTodos().getTodos().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new Todo(\"deadline\");","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        project.addTodo(todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getTodos().getTodos().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"        assertEquals(todo, project.getTodos().getTodos().get(INDEX_FIRST.getZeroBased()));","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"    @Test void deleteDeadline_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"        deadlineList.addDeadline(new Deadline(\"deadline\", LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withDeadlineList(deadlineList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getDeadlines().getDeadlines().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"lirc572"},"content":"        project.deleteDeadline(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":179,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getDeadlines().getDeadlines().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"lirc572"},"content":"    @Test void deleteEvent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"lirc572"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"lirc572"},"content":"        eventList.addEvent(new Event(\"event\", Interval.NONE, LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withEventList(eventList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getEvents().getEvents().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"lirc572"},"content":"        project.deleteEvent(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":188,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getEvents().getEvents().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"lirc572"},"content":"    @Test void deleteTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"lirc572"},"content":"        todoList.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withTodoList(todoList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getTodos().getTodos().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"lirc572"},"content":"        project.deleteTodo(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":197,"author":{"gitId":"lirc572"},"content":"        assertEquals(0, project.getTodos().getTodos().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"lirc572"},"content":"    @Test void markDeadline_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"lirc572"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"lirc572"},"content":"        deadlineList.addDeadline(new Deadline(\"deadline\", LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withDeadlineList(deadlineList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getDeadlines().getDeadlines().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"lirc572"},"content":"        assertEquals(false, project.getDeadlines().getDeadlines().get(0).getIsDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"lirc572"},"content":"        project.markDeadline(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":207,"author":{"gitId":"lirc572"},"content":"        assertEquals(true, project.getDeadlines().getDeadlines().get(0).getIsDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"lirc572"},"content":"    @Test void markEvent_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"lirc572"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"lirc572"},"content":"        eventList.addEvent(new Event(\"event\", Interval.NONE, LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":213,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withEventList(eventList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getEvents().getEvents().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":215,"author":{"gitId":"lirc572"},"content":"        assertEquals(false, project.getEvents().getEvents().get(0).getIsDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":216,"author":{"gitId":"lirc572"},"content":"        project.markEvent(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":217,"author":{"gitId":"lirc572"},"content":"        assertEquals(true, project.getEvents().getEvents().get(0).getIsDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":218,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":219,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":220,"author":{"gitId":"lirc572"},"content":"    @Test void markTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":221,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":222,"author":{"gitId":"lirc572"},"content":"        todoList.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":223,"author":{"gitId":"lirc572"},"content":"        Project project \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).withTodoList(todoList).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":224,"author":{"gitId":"lirc572"},"content":"        assertEquals(1, project.getTodos().getTodos().size());","lastModifiedDate":"2021-03-17"},{"lineNumber":225,"author":{"gitId":"lirc572"},"content":"        assertEquals(false, project.getTodos().getTodos().get(0).getIsDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":226,"author":{"gitId":"lirc572"},"content":"        project.markTodo(INDEX_FIRST.getZeroBased());","lastModifiedDate":"2021-03-18"},{"lineNumber":227,"author":{"gitId":"lirc572"},"content":"        assertEquals(true, project.getTodos().getTodos().get(0).getIsDone());","lastModifiedDate":"2021-03-17"},{"lineNumber":228,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":229,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":230,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":231,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":232,"author":{"gitId":"lirc572"},"content":"        Project project1 \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":233,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d project1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":234,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":235,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":236,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, project1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":237,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":238,"author":{"gitId":"lirc572"},"content":"        Project project2 \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":239,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":240,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":241,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, project2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":242,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":243,"author":{"gitId":"lirc572"},"content":"        project1.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-18"},{"lineNumber":244,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d project1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":245,"author":{"gitId":"lirc572"},"content":"        project1.addParticipant(ALICE);","lastModifiedDate":"2021-03-18"},{"lineNumber":246,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d project1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":247,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":248,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":249,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-17"},{"lineNumber":250,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":251,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":252,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":253,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":254,"author":{"gitId":"lirc572"},"content":"    @Test void toString_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":255,"author":{"gitId":"lirc572"},"content":"        Project project1 \u003d new ProjectBuilder().withName(CS1101S_NAME.toString()).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":256,"author":{"gitId":"lirc572"},"content":"        String project1String \u003d CS1101S_NAME.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":257,"author":{"gitId":"lirc572"},"content":"        assertEquals(project1String, project1.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":258,"author":{"gitId":"lirc572"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":259,"author":{"gitId":"lirc572"},"content":"        eventList.addEvent(new Event(\"event\", Interval.NONE, LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":260,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":261,"author":{"gitId":"lirc572"},"content":"        todoList.addTodo(new Todo(\"todo\"));","lastModifiedDate":"2021-03-17"},{"lineNumber":262,"author":{"gitId":"lirc572"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":263,"author":{"gitId":"lirc572"},"content":"        deadlineList.addDeadline(new Deadline(\"deadline\", LocalDate.now()));","lastModifiedDate":"2021-03-17"},{"lineNumber":264,"author":{"gitId":"lirc572"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":265,"author":{"gitId":"lirc572"},"content":"        participantList.addParticipant(ALICE);","lastModifiedDate":"2021-03-17"},{"lineNumber":266,"author":{"gitId":"lirc572"},"content":"        Project project2 \u003d new ProjectBuilder()","lastModifiedDate":"2021-03-17"},{"lineNumber":267,"author":{"gitId":"lirc572"},"content":"                .withName(CS1101S_NAME.toString())","lastModifiedDate":"2021-03-17"},{"lineNumber":268,"author":{"gitId":"lirc572"},"content":"                .withEventList(eventList)","lastModifiedDate":"2021-03-17"},{"lineNumber":269,"author":{"gitId":"lirc572"},"content":"                .withTodoList(todoList)","lastModifiedDate":"2021-03-17"},{"lineNumber":270,"author":{"gitId":"lirc572"},"content":"                .withDeadlineList(deadlineList)","lastModifiedDate":"2021-03-17"},{"lineNumber":271,"author":{"gitId":"lirc572"},"content":"                .withParticipantList(participantList)","lastModifiedDate":"2021-03-17"},{"lineNumber":272,"author":{"gitId":"lirc572"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":273,"author":{"gitId":"lirc572"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-03-17"},{"lineNumber":274,"author":{"gitId":"lirc572"},"content":"        builder.append(CS1101S_NAME.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":275,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Events: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":276,"author":{"gitId":"lirc572"},"content":"        builder.append(eventList.getEvents().get(0).toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":277,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Todos: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":278,"author":{"gitId":"lirc572"},"content":"        builder.append(todoList.getTodos().get(0).toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":279,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Deadlines: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":280,"author":{"gitId":"lirc572"},"content":"        builder.append(deadlineList.getDeadlines().get(0).toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":281,"author":{"gitId":"lirc572"},"content":"        builder.append(\"; Participants: \");","lastModifiedDate":"2021-03-17"},{"lineNumber":282,"author":{"gitId":"lirc572"},"content":"        builder.append(participantList.get(0).toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":283,"author":{"gitId":"lirc572"},"content":"        String project2String \u003d builder.toString();","lastModifiedDate":"2021-03-17"},{"lineNumber":284,"author":{"gitId":"lirc572"},"content":"        assertEquals(project2String, project2.toString());","lastModifiedDate":"2021-03-17"},{"lineNumber":285,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":286,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":203,"vevek":15,"samuelfangjw":68}},{"path":"src/test/java/seedu/address/model/project/TodoListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"public class TodoListTest {","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"    public void constructor_empty_createEmptyTodoList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"        TodoList emptyTodoList \u003d new TodoList();","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"        assertTrue(emptyTodoList.getTodos().isEmpty());","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TodoList(null));","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    public void constructor_singleTodo_valid() {","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        assertDoesNotThrow(() -\u003e new TodoList(todos));","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    public void getCompletableTasks_validCompletableTaskList_equalsOriginalList() {","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertEquals(todos, todoList.getTodos());","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void getCopyOf_validTodoList_copyOfOriginal() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoListCopy \u003d todoList.getCopy();","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todoList, todoListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoList \u003d\u003d todoListCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"    public void deleteTodo_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"        assertEquals(todoList.getTodos().size(), 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        todoList.deleteTodo(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        assertEquals(todoList.getTodos().size(), 0);","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"    @Test void markAsDone_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new Todo(\"Test Description\");","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        ArrayList\u003cCompletableTodo\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        todos.add(todo);","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        TodoList todoList \u003d new TodoList(todos);","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        assertEquals(todoList.getTodos().size(), 1);","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        assertEquals(todoList.getTodos().get(0).getIsDone(), false);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        todoList.markAsDone(0);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        assertEquals(todoList.getTodos().get(0).getIsDone(), true);","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":22,"vevek":45,"samuelfangjw":9}},{"path":"src/test/java/seedu/address/model/project/UniqueProjectListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.project;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-17"},{"lineNumber":6,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-17"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.DuplicateProjectException;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.exceptions.ProjectNotFoundException;","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"public class UniqueProjectListTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_ONE \u003d new ProjectBuilder().withName(\"Test One\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project TEST_PROJECT_TWO \u003d new ProjectBuilder().withName(\"Test Two\").build();","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private final UniqueProjectList uniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.contains(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_projectNotInList_returnsFalse() {","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(uniqueProjectList.contains(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public void contains_projectInList_returnsTrue() {","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(uniqueProjectList.contains(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public void add_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.add(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    public void add_duplicateProject_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.add(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_nullTargetProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(null, TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_nullEditedProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProject(TEST_PROJECT_ONE, null));","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_targetProjectNotInList_throwsProjectNotFoundException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                uniqueProjectList.setProject(TEST_PROJECT_ONE, TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"    public void setProject_setExistingProject_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"                uniqueProjectList.setProject(TEST_PROJECT_ONE, TEST_PROJECT_TWO));","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public void setProject_editedProjectIsSameProject_success() {","lastModifiedDate":"2021-03-10"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProject(TEST_PROJECT_ONE, TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_nullProject_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.remove(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_projectDoesNotExist_throwsProjectNotFoundException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(ProjectNotFoundException.class, () -\u003e uniqueProjectList.remove(TEST_PROJECT_ONE));","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    public void remove_existingProject_removesProject() {","lastModifiedDate":"2021-03-10"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.remove(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_nullUniqueProjectList_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((UniqueProjectList) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_uniqueProjectList_replacesOwnListWithProvidedUniqueProjectList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProjects(expectedUniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueProjectList.setProjects((List\u003cProject\u003e) null));","lastModifiedDate":"2021-03-10"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-03-10"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e projectList \u003d Collections.singletonList(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-16"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        uniqueProjectList.setProjects(projectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"        UniqueProjectList expectedUniqueProjectList \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-10"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"        expectedUniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-16"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedUniqueProjectList, uniqueProjectList);","lastModifiedDate":"2021-03-10"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"    public void setProjects_listWithDuplicateProjects_throwsDuplicateProjectException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        List\u003cProject\u003e listWithDuplicateProjects \u003d Arrays.asList(TEST_PROJECT_ONE, TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-16"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DuplicateProjectException.class, () -\u003e uniqueProjectList.setProjects(listWithDuplicateProjects));","lastModifiedDate":"2021-03-10"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-03-10"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"            -\u003e uniqueProjectList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-03-10"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":144,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"lirc572"},"content":"    public void iterator_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"lirc572"},"content":"        Iterator\u003cProject\u003e iterator \u003d uniqueProjectList.iterator();","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"lirc572"},"content":"        assertTrue(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"lirc572"},"content":"        assertEquals(iterator.next(), TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"lirc572"},"content":"        assertFalse(iterator.hasNext());","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d uniqueProjectList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":158,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":159,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniqueProjectList.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":160,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":161,"author":{"gitId":"lirc572"},"content":"        UniqueProjectList uniqueProjectList2 \u003d new UniqueProjectList();","lastModifiedDate":"2021-03-18"},{"lineNumber":162,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":163,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":164,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, uniqueProjectList2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":165,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":166,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_ONE);","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d uniqueProjectList.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"lirc572"},"content":"        uniqueProjectList.add(TEST_PROJECT_TWO);","lastModifiedDate":"2021-03-18"},{"lineNumber":169,"author":{"gitId":"lirc572"},"content":"        int hashcode4 \u003d uniqueProjectList.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":170,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":171,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":172,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":174,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode3, hashcode4);","lastModifiedDate":"2021-03-18"},{"lineNumber":175,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":45,"samuelfangjw":131}},{"path":"src/test/java/seedu/address/model/task/deadline/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final Deadline TEST_DEADLINE \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Deadline DIFFERENT_DEADLINE \u003d new DeadlineBuilder().withDescription(\"DIFFERENT\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", null));","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null, validDate, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", validDate, null));","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(\"test\", null, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription, validDate, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription2, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDescription2, validDate, false));","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-14"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        Deadline tutorialCopy \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TEST_DEADLINE, tutorialCopy);","lastModifiedDate":"2021-03-14"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-14"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TEST_DEADLINE, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TEST_DEADLINE, null);","lastModifiedDate":"2021-03-14"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TEST_DEADLINE, 5);","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(DIFFERENT_DEADLINE, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        Deadline editedTutorial \u003d new DeadlineBuilder(TEST_DEADLINE).withDescription(\"NOT TEST_DEADLINE\").build();","lastModifiedDate":"2021-03-14"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // different by date -\u003e returns false","lastModifiedDate":"2021-03-14"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        editedTutorial \u003d new DeadlineBuilder(TEST_DEADLINE)","lastModifiedDate":"2021-03-14"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(LocalDate.of(2019, 2, 21)).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TEST_DEADLINE);","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"lirc572"},"content":"        Deadline deadline1 \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d deadline1.hashCode();","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, deadline1.hashCode());","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":93,"author":{"gitId":"lirc572"},"content":"        Deadline deadline2 \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":94,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":95,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":96,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, deadline2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":97,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":98,"author":{"gitId":"lirc572"},"content":"        Deadline deadline3 \u003d new DeadlineBuilder(DIFFERENT_DEADLINE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":99,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d deadline3.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":100,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":101,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":102,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":103,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":105,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":106,"author":{"gitId":"lirc572"},"content":"    public void setDescription_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":107,"author":{"gitId":"lirc572"},"content":"        Deadline deadline \u003d new DeadlineBuilder(TEST_DEADLINE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":108,"author":{"gitId":"lirc572"},"content":"        String description \u003d \"this is a test description.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":109,"author":{"gitId":"lirc572"},"content":"        deadline.setDescription(description);","lastModifiedDate":"2021-03-18"},{"lineNumber":110,"author":{"gitId":"lirc572"},"content":"        assertEquals(description, deadline.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":111,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":112,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":28,"vevek":48,"samuelfangjw":36}},{"path":"src/test/java/seedu/address/model/task/repeatable/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.repeatable;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"public class EventTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final Event TUTORIAL \u003d new EventBuilder().withDescription(\"CS2106 Tutorial\")","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"            .withAtDate(LocalDate.of(2020, 01, 01)).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final Event LAB \u003d new EventBuilder().withDescription(\"CS2030S Lab\")","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"            .withAtDate(LocalDate.of(2021, 01, 03)).withInterval(Interval.DAILY).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        Interval interval \u003d Interval.DAILY;","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, interval, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", null, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", interval, null));","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(null, interval, false, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", null,","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"                false, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", interval, null, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Event(\"test\", interval, false, null));","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"        LocalDate validDate \u003d LocalDate.of(2020, 1, 1);","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        Interval validInterval \u003d Interval.DAILY;","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription, validInterval, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription, validInterval,","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"                false, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":47,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription2, validInterval, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":48,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Event(invalidDescription2, validInterval,","lastModifiedDate":"2021-03-10"},{"lineNumber":49,"author":{"gitId":"vevek"},"content":"                false, validDate));","lastModifiedDate":"2021-03-10"},{"lineNumber":50,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":51,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":52,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":53,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":54,"author":{"gitId":"vevek"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":55,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":56,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":57,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":58,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":59,"author":{"gitId":"vevek"},"content":"        assertFalse(Deadline.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":60,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":61,"author":{"gitId":"vevek"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(Deadline.isValidDescription(\"Tutorial, CS2106, #01-355\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"vevek"},"content":"        assertTrue(Deadline.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-10"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(Deadline.isValidDescription(\"Lab; Com1; 123456; SINGAPORE\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public void getRecurrence_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        assertEquals(Interval.WEEKLY, TUTORIAL.getRecurrence());","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"        assertEquals(Interval.DAILY, LAB.getRecurrence());","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    public void setRecurrence_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        TUTORIAL.setRecurrence(Interval.NONE);","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertEquals(Interval.NONE, TUTORIAL.getRecurrence());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        TUTORIAL.setRecurrence(Interval.DAILY);","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        assertEquals(Interval.DAILY, TUTORIAL.getRecurrence());","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        TUTORIAL.setRecurrence(Interval.FORTNIGHTLY);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"        assertEquals(Interval.FORTNIGHTLY, TUTORIAL.getRecurrence());","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-13"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        Event tutorialCopy \u003d new EventBuilder(TUTORIAL).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TUTORIAL, tutorialCopy);","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TUTORIAL, TUTORIAL);","lastModifiedDate":"2021-03-13"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TUTORIAL, null);","lastModifiedDate":"2021-03-13"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(TUTORIAL, 5);","lastModifiedDate":"2021-03-13"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(LAB, TUTORIAL);","lastModifiedDate":"2021-03-13"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        Event editedTutorial \u003d new EventBuilder(TUTORIAL).withDescription(\"NOT TUTORIAL\").build();","lastModifiedDate":"2021-03-13"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-13"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        // different interval -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        editedTutorial \u003d new EventBuilder(TUTORIAL).withInterval(Interval.NONE).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-14"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"        // different by date -\u003e returns false","lastModifiedDate":"2021-03-13"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        editedTutorial \u003d new EventBuilder(TUTORIAL)","lastModifiedDate":"2021-03-13"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"                .withAtDate(LocalDate.of(2019, 01, 01)).build();","lastModifiedDate":"2021-03-13"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        assertNotEquals(editedTutorial, TUTORIAL);","lastModifiedDate":"2021-03-14"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":114,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":115,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":116,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":117,"author":{"gitId":"lirc572"},"content":"    public void hashCode_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":118,"author":{"gitId":"lirc572"},"content":"        Event event1 \u003d new EventBuilder(TUTORIAL).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":119,"author":{"gitId":"lirc572"},"content":"        int hashcode1 \u003d event1.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":120,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":121,"author":{"gitId":"lirc572"},"content":"        // invoked on the same object: _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":122,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, event1.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":123,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":124,"author":{"gitId":"lirc572"},"content":"        Event event2 \u003d new EventBuilder(TUTORIAL).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":125,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":126,"author":{"gitId":"lirc572"},"content":"        // objects are equal according to equals(): _must_ be equal","lastModifiedDate":"2021-03-18"},{"lineNumber":127,"author":{"gitId":"lirc572"},"content":"        assertEquals(hashcode1, event2.hashCode());","lastModifiedDate":"2021-03-18"},{"lineNumber":128,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":129,"author":{"gitId":"lirc572"},"content":"        Event event3 \u003d new EventBuilder(LAB).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":130,"author":{"gitId":"lirc572"},"content":"        int hashcode3 \u003d event3.hashCode();","lastModifiedDate":"2021-03-18"},{"lineNumber":131,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":132,"author":{"gitId":"lirc572"},"content":"        // objects are unequal according to equals(): _should_ be distinct","lastModifiedDate":"2021-03-18"},{"lineNumber":133,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(hashcode1, hashcode3);","lastModifiedDate":"2021-03-18"},{"lineNumber":134,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":135,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":36,"vevek":56,"samuelfangjw":43}},{"path":"src/test/java/seedu/address/model/task/todo/TodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"vevek"},"content":"package seedu.address.model.task.todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-10"},{"lineNumber":5,"author":{"gitId":"lirc572"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"vevek"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"vevek"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"vevek"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-10"},{"lineNumber":10,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"vevek"},"content":"public class TodoTest {","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"vevek"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":18,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(null, null));","lastModifiedDate":"2021-03-10"},{"lineNumber":19,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Todo(\"test\", null));","lastModifiedDate":"2021-03-10"},{"lineNumber":20,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":21,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":22,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"vevek"},"content":"    public void constructor_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"vevek"},"content":"        String invalidDescription \u003d \"\";","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription));","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription, false));","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"        String invalidDescription2 \u003d \" \";","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription2));","lastModifiedDate":"2021-03-10"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Todo(invalidDescription2, false));","lastModifiedDate":"2021-03-10"},{"lineNumber":30,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":31,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"vevek"},"content":"    @Test","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"vevek"},"content":"    public void isValidDescription() {","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"vevek"},"content":"        // null description","lastModifiedDate":"2021-03-10"},{"lineNumber":35,"author":{"gitId":"vevek"},"content":"        assertThrows(NullPointerException.class, () -\u003e Todo.isValidDescription(null));","lastModifiedDate":"2021-03-10"},{"lineNumber":36,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":37,"author":{"gitId":"vevek"},"content":"        // invalid description","lastModifiedDate":"2021-03-10"},{"lineNumber":38,"author":{"gitId":"vevek"},"content":"        assertFalse(Todo.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-03-10"},{"lineNumber":39,"author":{"gitId":"vevek"},"content":"        assertFalse(Todo.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-03-10"},{"lineNumber":40,"author":{"gitId":"vevek"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":41,"author":{"gitId":"vevek"},"content":"        // valid description","lastModifiedDate":"2021-03-10"},{"lineNumber":42,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":43,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"-\")); // one character","lastModifiedDate":"2021-03-10"},{"lineNumber":44,"author":{"gitId":"vevek"},"content":"        assertTrue(Todo.isValidDescription(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\"));","lastModifiedDate":"2021-03-10"},{"lineNumber":45,"author":{"gitId":"vevek"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":46,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"lirc572"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"lirc572"},"content":"        Todo testTodo \u003d new Todo(\"test todo\");","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"lirc572"},"content":"        Todo differentTodo \u003d new Todo(\"different todo\");","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"lirc572"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"        Todo todoCopy \u003d new TodoBuilder(testTodo).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"lirc572"},"content":"        assertEquals(testTodo, todoCopy);","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"lirc572"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"lirc572"},"content":"        assertEquals(testTodo, testTodo);","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"lirc572"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testTodo, null);","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"lirc572"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(testTodo, 5);","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"lirc572"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(differentTodo, testTodo);","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"lirc572"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"        Todo editedTodo \u003d new TodoBuilder().withDescription(\"editted todo\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"lirc572"},"content":"        assertNotEquals(editedTodo, testTodo);","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"lirc572"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"lirc572"},"content":"    public void setDescription_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"lirc572"},"content":"        Todo todo \u003d new TodoBuilder().withDescription(\"todo\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"        assertEquals(\"todo\", todo.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"lirc572"},"content":"        String description \u003d \"this is a test description.\";","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"lirc572"},"content":"        todo.setDescription(description);","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"lirc572"},"content":"        assertEquals(description, todo.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"vevek"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"lirc572":39,"vevek":42}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.model.util;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Set;","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.function.ThrowingSupplier;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public void getSamplePersons_personsValid_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(SampleDataUtil::getSamplePersons);","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow((ThrowingSupplier\u003cSet\u003cTag\u003e\u003e) SampleDataUtil::getTagSet);","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void getSampleProjects_projectsValid_success() {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(SampleDataUtil::getSampleProjects);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(SampleDataUtil::getSampleProjectsFolder);","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedDeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedDeadlineTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d DeadlineBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Boolean VALID_IS_DONE \u003d DeadlineBuilder.DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DATE_STRING \u003d \"02-02-2020\";","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final LocalDate VALID_DATE \u003d DeadlineBuilder.DEFAULT_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final Deadline ASSIGNMENT \u003d new DeadlineBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            .withDescription(VALID_DESCRIPTION).withIsDone(VALID_IS_DONE).withByDate(VALID_DATE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validDeadlineDetails_returnsDeadline() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d new JsonAdaptedDeadline(ASSIGNMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(ASSIGNMENT, deadline.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedDeadline(INVALID_DESCRIPTION, VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d CompletableDeadline.MESSAGE_CONSTRAINTS_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, deadline::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedDeadline(INVALID_DESCRIPTION, VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, deadline::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedDeadline deadline \u003d new JsonAdaptedDeadline(null, VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, deadline::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":51}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DATE_STRING \u003d \"2020-02-02\";","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d EventBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final Interval VALID_INTERVAL \u003d EventBuilder.DEFAULT_INTERVAL;","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final LocalDate VALID_DATE \u003d EventBuilder.DEFAULT_DATE;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DATE_STRING \u003d \"02-02-2020\";","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final Boolean VALID_IS_DONE \u003d EventBuilder.DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    private static final Event TUTORIAL \u003d new EventBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            .withDescription(VALID_DESCRIPTION).withInterval(VALID_INTERVAL)","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"            .withAtDate(VALID_DATE).withIsDone(VALID_IS_DONE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(TUTORIAL);","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(TUTORIAL, event.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedEvent(INVALID_DESCRIPTION, VALID_INTERVAL.toString(), VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d Event.MESSAGE_CONSTRAINTS_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedEvent(VALID_DESCRIPTION, VALID_INTERVAL.toString(), INVALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullDescription_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(null, VALID_INTERVAL.toString(),","lastModifiedDate":"2021-03-14"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"                VALID_DATE_STRING, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, event::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":56}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedProjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.storage.JsonAdaptedProject.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedProjectTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final Project VALID_PROJECT \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d VALID_PROJECT.getProjectName().toString();","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedEvent\u003e VALID_EVENT_LIST \u003d VALID_PROJECT.getEvents().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedEvent::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedDeadline\u003e VALID_DEADLINE_LIST \u003d VALID_PROJECT.getDeadlines().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedDeadline::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedTodo\u003e VALID_TODO_LIST \u003d VALID_PROJECT.getTodos().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedTodo::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_PARTICIPANT_LIST \u003d VALID_PROJECT.getParticipants().stream()","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validProjectDetails_returnsProject() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(VALID_PROJECT);","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(VALID_PROJECT, project.toModelType());","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validParameters_success() {","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedProject(VALID_DESCRIPTION, VALID_EVENT_LIST, VALID_TODO_LIST,","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"                        VALID_DEADLINE_LIST, VALID_PARTICIPANT_LIST);","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertDoesNotThrow(project::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedProject(INVALID_DESCRIPTION, VALID_EVENT_LIST, VALID_TODO_LIST,","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"                        VALID_DEADLINE_LIST, VALID_PARTICIPANT_LIST);","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d ProjectName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullDescription_throwsIllegalValueException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedProject project \u003d new JsonAdaptedProject(null, VALID_EVENT_LIST, VALID_TODO_LIST,","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                VALID_DEADLINE_LIST, VALID_PARTICIPANT_LIST);","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, ProjectName.class.getSimpleName());","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, project::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":67}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTodoTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-14"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-14"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-14"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-14"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-14"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"public class JsonAdaptedTodoTest {","lastModifiedDate":"2021-03-14"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private static final String INVALID_DESCRIPTION \u003d \" \";","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String VALID_DESCRIPTION \u003d TodoBuilder.DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private static final Boolean VALID_IS_DONE \u003d TodoBuilder.DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Todo ASSIGNMENT \u003d new TodoBuilder()","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            .withDescription(VALID_DESCRIPTION).withIsDone(VALID_IS_DONE).build();","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_validTodoDetails_returnsTodo() throws Exception {","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedTodo todo \u003d new JsonAdaptedTodo(ASSIGNMENT);","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(ASSIGNMENT, todo.toModelType());","lastModifiedDate":"2021-03-14"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidDescription_throwsIllegalArgumentException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedTodo todo \u003d","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"                new JsonAdaptedTodo(INVALID_DESCRIPTION, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        String expectedMessage \u003d CompletableTodo.MESSAGE_CONSTRAINTS_DESCRIPTION;","lastModifiedDate":"2021-03-14"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalArgumentException.class, expectedMessage, todo::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-14"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_nullName_throwsNullPointerException() {","lastModifiedDate":"2021-03-14"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        JsonAdaptedTodo todo \u003d new JsonAdaptedTodo(null, VALID_IS_DONE);","lastModifiedDate":"2021-03-14"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, todo::toModelType);","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-14"}],"authorContributionMap":{"samuelfangjw":40}},{"path":"src/test/java/seedu/address/storage/JsonProjectsFolderStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import java.io.IOException;","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TypicalProjects;","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"public class JsonProjectsFolderStorageTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            \"JsonProjectsFolderStorageTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    @TempDir","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public Path testFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public void readProjectsFolder_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e readProjectsFolder(null));","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    private java.util.Optional\u003cReadOnlyProjectsFolder\u003e readProjectsFolder(String filePath) throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        return new JsonProjectsFolderStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                .readProjectsFolder(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"                : null;","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(readProjectsFolder(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2021-03-16"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e readProjectsFolder(\"notJsonFormatProjectsFolder.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    public void readProjectsFolder_invalidProjectProjectsFolder_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"                readProjectsFolder(\"invalidProjectProjectsFolder.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    public void readProjectsFolder_invalidAndValidProjectProjectsFolder_throwDataConversionException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(DataConversionException.class, () -\u003e","lastModifiedDate":"2021-03-16"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                readProjectsFolder(\"invalidAndValidProjectProjectsFolder.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    public void readAndSaveProjectsFolder_allInOrder_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        Path filePath \u003d testFolder.resolve(\"TempProjectsFolder.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder original \u003d getTypicalProjectsFolder();","lastModifiedDate":"2021-03-16"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        JsonProjectsFolderStorage jsonProjectsFolderStorage \u003d new JsonProjectsFolderStorage(filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        // Save in new file and read back","lastModifiedDate":"2021-03-16"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        jsonProjectsFolderStorage.saveProjectsFolder(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        ReadOnlyProjectsFolder readBack \u003d jsonProjectsFolderStorage.readProjectsFolder(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ProjectsFolder(readBack));","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // Test Project","lastModifiedDate":"2021-03-16"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d TypicalProjects.getTypicalProjects().get(0);","lastModifiedDate":"2021-03-16"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2021-03-16"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        original.addProject(new ProjectBuilder().withName(\"Test\").build());","lastModifiedDate":"2021-03-16"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        original.removeProject(project);","lastModifiedDate":"2021-03-16"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"        jsonProjectsFolderStorage.saveProjectsFolder(original, filePath);","lastModifiedDate":"2021-03-16"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"        readBack \u003d jsonProjectsFolderStorage.readProjectsFolder(filePath).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ProjectsFolder(readBack));","lastModifiedDate":"2021-03-16"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2021-03-16"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        original.addProject(project);","lastModifiedDate":"2021-03-16"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"        jsonProjectsFolderStorage.saveProjectsFolder(original); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"        readBack \u003d jsonProjectsFolderStorage.readProjectsFolder().get(); // file path not specified","lastModifiedDate":"2021-03-16"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(original, new ProjectsFolder(readBack));","lastModifiedDate":"2021-03-16"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"    public void saveProjectsFolder_nullProjectsFolder_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveProjectsFolder(null, \"SomeFile.json\"));","lastModifiedDate":"2021-03-16"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-16"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2021-03-16"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-16"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"    private void saveProjectsFolder(ReadOnlyProjectsFolder projectsFolder, String filePath) {","lastModifiedDate":"2021-03-16"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-16"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"            new JsonProjectsFolderStorage(Paths.get(filePath))","lastModifiedDate":"2021-03-16"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"                    .saveProjectsFolder(projectsFolder, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2021-03-16"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-03-16"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2021-03-16"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-16"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"    public void saveProjectsFolder_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2021-03-16"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveProjectsFolder(new ProjectsFolder(), null));","lastModifiedDate":"2021-03-16"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":117}},{"path":"src/test/java/seedu/address/storage/JsonSerializableProjectsFolderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-03-16"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-16"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-03-16"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-16"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-16"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-16"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-03-16"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2021-03-16"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-16"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TypicalProjects;","lastModifiedDate":"2021-03-16"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"public class JsonSerializableProjectsFolderTest {","lastModifiedDate":"2021-03-16"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2021-03-16"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableProjectsFolderTest\");","lastModifiedDate":"2021-03-16"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path TYPICAL_PROJECTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalProjectsProjectsFolder.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path INVALID_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidProjectProjectsFolder.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final Path DUPLICATE_PROJECT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateProjectProjectsFolder.json\");","lastModifiedDate":"2021-03-16"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_typicalProjectsFile_success() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        JsonSerializableProjectsFolder dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PROJECTS_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableProjectsFolder.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder projectsFolderFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-03-16"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder typicalProjectsProjectsFolder \u003d TypicalProjects.getTypicalProjectsFolder();","lastModifiedDate":"2021-03-16"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(projectsFolderFromFile, typicalProjectsProjectsFolder);","lastModifiedDate":"2021-03-16"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_invalidProjectFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        JsonSerializableProjectsFolder dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PROJECT_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableProjectsFolder.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-16"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public void toModelType_duplicateProjects_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-03-16"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        JsonSerializableProjectsFolder dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PROJECT_FILE,","lastModifiedDate":"2021-03-16"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"                JsonSerializableProjectsFolder.class).get();","lastModifiedDate":"2021-03-16"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableProjectsFolder.MESSAGE_DUPLICATE_PROJECTS,","lastModifiedDate":"2021-03-16"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-03-16"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-16"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-16"}],"authorContributionMap":{"samuelfangjw":48}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        JsonProjectsFolderStorage projectsFolderStorage \u003d new JsonProjectsFolderStorage(getTempFilePath(\"pf\"));","lastModifiedDate":"2021-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, projectsFolderStorage, userPrefsStorage);","lastModifiedDate":"2021-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"samuelfangjw":2}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Addressbook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Addressbook}.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":34,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/testutil/DeadlineBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Deadline objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"public class DeadlineBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Deadline Description\";","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    private String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private LocalDate by;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code DeadlineBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        by \u003d DEFAULT_DATE;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the DeadlineBuilder with the data of {@code deadlineToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder(Deadline deadlineToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d deadlineToCopy.getDescription();","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        by \u003d deadlineToCopy.getBy();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d deadlineToCopy.getIsDone();","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Description} of the {@code Deadline} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder withDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code at} date of the {@code Deadline} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder withByDate(LocalDate date) {","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        this.by \u003d date;","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code isDone} status of the {@code Deadline} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    public DeadlineBuilder withIsDone(Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Deadline} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Deadline}.","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    public Deadline build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"        return new Deadline(description, by, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":71}},{"path":"src/test/java/seedu/address/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class EventBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Event Description\";","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    public static final Interval DEFAULT_INTERVAL \u003d Interval.NONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static final LocalDate DEFAULT_DATE \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private Interval interval;","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private LocalDate at;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        interval \u003d DEFAULT_INTERVAL;","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        at \u003d DEFAULT_DATE;","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-14"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d eventToCopy.getDescription();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        interval \u003d eventToCopy.getRecurrence();","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        at \u003d eventToCopy.getAt();","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d eventToCopy.getIsDone();","lastModifiedDate":"2021-03-14"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Description} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder withDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Interval} of the {@code Event} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder withInterval(Interval interval) {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        this.interval \u003d interval;","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code at} date of the {@code Event} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder withAtDate(LocalDate date) {","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        this.at \u003d date;","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code isDone} status of the {@code Event} that we are building.","lastModifiedDate":"2021-03-14"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"    public EventBuilder withIsDone(Boolean isDone) {","lastModifiedDate":"2021-03-14"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-14"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-14"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-14"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-14"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Event} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Event}.","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    public Event build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        return new Event(description, interval, at);","lastModifiedDate":"2021-03-13"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":84}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Person} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Person}.","lastModifiedDate":"2021-03-14"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"samuelfangjw":5}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"lirc572"},"content":"import seedu.address.logic.commands.AddContactToCommand;","lastModifiedDate":"2021-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"lirc572"},"content":"    /**","lastModifiedDate":"2021-03-15"},{"lineNumber":31,"author":{"gitId":"lirc572"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2021-03-15"},{"lineNumber":32,"author":{"gitId":"lirc572"},"content":"     */","lastModifiedDate":"2021-03-15"},{"lineNumber":33,"author":{"gitId":"lirc572"},"content":"    public static String getAddCtoCommand(Index projectIndex, Person person) {","lastModifiedDate":"2021-03-15"},{"lineNumber":34,"author":{"gitId":"lirc572"},"content":"        return AddContactToCommand.COMMAND_WORD + \" \" + projectIndex.getOneBased() + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-03-15"},{"lineNumber":35,"author":{"gitId":"lirc572"},"content":"    }","lastModifiedDate":"2021-03-15"},{"lineNumber":36,"author":{"gitId":"lirc572"},"content":"","lastModifiedDate":"2021-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"lirc572":9,"-":62}},{"path":"src/test/java/seedu/address/testutil/ProjectBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ParticipantList;","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Project objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_PROJECT_NAME \u003d \"Test Project Name\";","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectName projectName;","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    private EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code ProjectBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d new ProjectName(DEFAULT_PROJECT_NAME);","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the ProjectBuilder with the data of {@code projectToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectBuilder(Project projectToCopy) {","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        projectName \u003d projectToCopy.getProjectName();","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        eventList \u003d projectToCopy.getEvents().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        todoList \u003d projectToCopy.getTodos().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList \u003d projectToCopy.getDeadlines().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        participantList \u003d projectToCopy.getParticipants().getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code ProjectName} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectBuilder withName(String projectName) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        this.projectName \u003d new ProjectName(projectName);","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code EventList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":52,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withEventList(EventList eventList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        this.eventList \u003d eventList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code TodoList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":60,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withTodoList(TodoList todoList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        this.todoList \u003d todoList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code DeadlineList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":68,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withDeadlineList(DeadlineList deadlineList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        this.deadlineList \u003d deadlineList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code ParticipantList} of the {@code Project} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":76,"author":{"gitId":"lirc572"},"content":"    public ProjectBuilder withParticipantList(ParticipantList participantList) {","lastModifiedDate":"2021-03-16"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        this.participantList \u003d participantList.getCopy();","lastModifiedDate":"2021-03-13"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Project} object.","lastModifiedDate":"2021-03-14"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Project}.","lastModifiedDate":"2021-03-14"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"    public Project build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        return new Project(projectName, eventList, todoList, deadlineList, participantList);","lastModifiedDate":"2021-03-13"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"lirc572":4,"samuelfangjw":86}},{"path":"src/test/java/seedu/address/testutil/ProjectsFolderBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building ProjectsFolder objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" *     {@code ProjectsFolder pf \u003d new ProjectsFolderBuilder().withProject(project).build();}","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectsFolderBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectsFolder projectsFolder;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolderBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"     * Constructs a {@code ProjectsFolderBuilder} object using the given {@code projectsFolder}","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectsFolder the {@code ProjectsFolder} to construct the {@code ProjectsFolderBuilder} with","lastModifiedDate":"2021-03-14"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-14"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolderBuilder(ProjectsFolder projectsFolder) {","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        this.projectsFolder \u003d projectsFolder;","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Adds a new {@code Project} to the {@code ProjectsFolder} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolderBuilder withPerson(Project project) {","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projectsFolder.addProject(project);","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code ProjectsFolder} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code ProjectsFolder}.","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    public ProjectsFolder build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return projectsFolder;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"samuelfangjw":44}},{"path":"src/test/java/seedu/address/testutil/TodoBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-13"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-13"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-13"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":" * A utility class to help with building Todo objects.","lastModifiedDate":"2021-03-13"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-13"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"public class TodoBuilder {","lastModifiedDate":"2021-03-13"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"Todo Description\";","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DEFAULT_IS_DONE \u003d false;","lastModifiedDate":"2021-03-13"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    private String description;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"    private Boolean isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a {@code TodoBuilder} with the default details.","lastModifiedDate":"2021-03-13"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    public TodoBuilder() {","lastModifiedDate":"2021-03-13"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"        description \u003d DEFAULT_DESCRIPTION;","lastModifiedDate":"2021-03-13"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        isDone \u003d DEFAULT_IS_DONE;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes the TodoBuilder with the data of {@code todoToCopy}.","lastModifiedDate":"2021-03-13"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":27,"author":{"gitId":"vevek"},"content":"    public TodoBuilder(Todo todoToCopy) {","lastModifiedDate":"2021-03-17"},{"lineNumber":28,"author":{"gitId":"vevek"},"content":"        description \u003d todoToCopy.getDescription();","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"vevek"},"content":"        isDone \u003d todoToCopy.getIsDone();","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code Description} of the {@code Todo} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"    public TodoBuilder withDescription(String description) {","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     * Sets the {@code isDone} status of the {@code Todo} that we are building.","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"    public TodoBuilder withIsDone(Boolean isDone) {","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-03-13"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        return this;","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"     * Builds the {@code Todo} object.","lastModifiedDate":"2021-03-13"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-14"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code Todo}.","lastModifiedDate":"2021-03-13"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    public Todo build() {","lastModifiedDate":"2021-03-13"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        return new Todo(description, isDone);","lastModifiedDate":"2021-03-13"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-13"}],"authorContributionMap":{"vevek":3,"samuelfangjw":55}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"lirc572"},"content":"    public static final Index INDEX_FIRST \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-03-14"},{"lineNumber":10,"author":{"gitId":"lirc572"},"content":"    public static final Index INDEX_SECOND \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-03-14"},{"lineNumber":11,"author":{"gitId":"lirc572"},"content":"    public static final Index INDEX_THIRD \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"lirc572":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalProjects.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-03-10"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-17"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-10"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-03-10"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-10"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-17"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ProjectsFolder;","lastModifiedDate":"2021-03-13"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-17"},{"lineNumber":12,"author":{"gitId":"vevek"},"content":"import seedu.address.model.project.DeadlineList;","lastModifiedDate":"2021-03-13"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.EventList;","lastModifiedDate":"2021-03-10"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ParticipantList;","lastModifiedDate":"2021-03-10"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-10"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.ProjectName;","lastModifiedDate":"2021-03-10"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.TodoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-17"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.deadline.Deadline;","lastModifiedDate":"2021-03-17"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-17"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.todo.Todo;","lastModifiedDate":"2021-03-17"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-10"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":" * A utility class containing a list of {@code Project} objects to be used in tests.","lastModifiedDate":"2021-03-10"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-10"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"public class TypicalProjects {","lastModifiedDate":"2021-03-10"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    public static final ProjectName CS1101S_NAME \u003d new ProjectName(\"CS1101S\");","lastModifiedDate":"2021-03-10"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean DONE \u003d true;","lastModifiedDate":"2021-03-17"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    public static final Boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-17"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"    private TypicalProjects() {} // prevents instantiation","lastModifiedDate":"2021-03-10"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-10"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-13"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a {@code ProjectsFolder} with all the typical projects.","lastModifiedDate":"2021-03-13"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-13"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    public static ProjectsFolder getTypicalProjectsFolder() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        ProjectsFolder pf \u003d new ProjectsFolder();","lastModifiedDate":"2021-03-13"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        for (Project project : getTypicalProjects()) {","lastModifiedDate":"2021-03-13"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"            pf.addProject(project);","lastModifiedDate":"2021-03-13"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-13"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        return pf;","lastModifiedDate":"2021-03-13"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"     * Returns a list of typical projects.","lastModifiedDate":"2021-03-17"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-17"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"     * @return {@code List\u003cProject\u003e} containing typical projects.","lastModifiedDate":"2021-03-17"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    public static List\u003cProject\u003e getTypicalProjects() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(getCS2103TProject(), getCS2101Project()));","lastModifiedDate":"2021-03-17"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"    // Typical Projects","lastModifiedDate":"2021-03-17"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2103T project.","lastModifiedDate":"2021-03-17"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"    public static Project getCS2103TProject() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        return new ProjectBuilder().withName(\"CS2103T Team Project\")","lastModifiedDate":"2021-03-17"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"                .withEventList(getCS2103TEventList())","lastModifiedDate":"2021-03-17"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"                .withDeadlineList(getCS2103TDeadlineList())","lastModifiedDate":"2021-03-17"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"                .withTodoList(getCS2103TTodosList())","lastModifiedDate":"2021-03-17"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"                .withParticipantList(getCS2103TParticipantsList())","lastModifiedDate":"2021-03-17"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-17"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     * Creates a new CS2101 project.","lastModifiedDate":"2021-03-17"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"     * @return typical {@code Project}.","lastModifiedDate":"2021-03-17"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-17"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    public static Project getCS2101Project() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        return new ProjectBuilder().withName(\"CS2101 OP2\")","lastModifiedDate":"2021-03-17"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"                .withEventList(getCS2101EventList())","lastModifiedDate":"2021-03-17"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                .withDeadlineList(getCS2101DeadlineList())","lastModifiedDate":"2021-03-17"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"                .withTodoList(getCS2101TodosList())","lastModifiedDate":"2021-03-17"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"                .withParticipantList(getCS2101ParticipantsList())","lastModifiedDate":"2021-03-17"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"                .build();","lastModifiedDate":"2021-03-17"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    private static EventList getCS2103TEventList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"        Event eventWeeklyMeeting \u003d new EventBuilder().withDescription(\"Weekly Project Meeting\")","lastModifiedDate":"2021-03-17"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"                .withAtDate(encodeDate(\"31-01-2021\")).withInterval(Interval.WEEKLY).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventWeeklyMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2103TDeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone1 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.1\")","lastModifiedDate":"2021-03-17"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"01-03-2021\")).withIsDone(DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone2 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.2\")","lastModifiedDate":"2021-03-17"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"15-03-2021\")).withIsDone(DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone3 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.3\")","lastModifiedDate":"2021-03-17"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"31-03-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineMilestone4 \u003d new DeadlineBuilder().withDescription(\"Milestone v1.4\")","lastModifiedDate":"2021-03-17"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"12-04-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone1);","lastModifiedDate":"2021-03-17"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone2);","lastModifiedDate":"2021-03-17"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone3);","lastModifiedDate":"2021-03-17"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineMilestone4);","lastModifiedDate":"2021-03-17"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getCS2103TTodosList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoUpdateDocs \u003d new TodoBuilder().withDescription(\"Update documentation\")","lastModifiedDate":"2021-03-17"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoAddCommand \u003d new TodoBuilder().withDescription(\"Finish add command\")","lastModifiedDate":"2021-03-17"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoTests \u003d new TodoBuilder().withDescription(\"Add unit tests\")","lastModifiedDate":"2021-03-17"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoBrainstormNewIdea \u003d new TodoBuilder().withDescription(\"Brainstorm new feature\")","lastModifiedDate":"2021-03-17"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoUpdateDocs);","lastModifiedDate":"2021-03-17"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoAddCommand);","lastModifiedDate":"2021-03-17"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoTests);","lastModifiedDate":"2021-03-17"},{"lineNumber":125,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoBrainstormNewIdea);","lastModifiedDate":"2021-03-17"},{"lineNumber":126,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":127,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":128,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":129,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":130,"author":{"gitId":"samuelfangjw"},"content":"    private static ParticipantList getCS2103TParticipantsList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":131,"author":{"gitId":"samuelfangjw"},"content":"        Person dahn \u003d new PersonBuilder().withName(\"Dahn\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":132,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"dahn@colab.com\").withPhone(\"91234561\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":133,"author":{"gitId":"samuelfangjw"},"content":"        Person ruochen \u003d new PersonBuilder().withName(\"Ruochen\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":134,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"ruochen@colab.com\").withPhone(\"91234562\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":135,"author":{"gitId":"samuelfangjw"},"content":"        Person samuel \u003d new PersonBuilder().withName(\"Samuel\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":136,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"samuel@colab.com\").withPhone(\"91234563\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":137,"author":{"gitId":"samuelfangjw"},"content":"        Person vevek \u003d new PersonBuilder().withName(\"Vevek\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":138,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"vevek@colab.com\").withPhone(\"91234564\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":139,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":140,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":141,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(dahn);","lastModifiedDate":"2021-03-17"},{"lineNumber":142,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(ruochen);","lastModifiedDate":"2021-03-17"},{"lineNumber":143,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(samuel);","lastModifiedDate":"2021-03-17"},{"lineNumber":144,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(vevek);","lastModifiedDate":"2021-03-17"},{"lineNumber":145,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":146,"author":{"gitId":"samuelfangjw"},"content":"        return participantList;","lastModifiedDate":"2021-03-17"},{"lineNumber":147,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":148,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":149,"author":{"gitId":"samuelfangjw"},"content":"    private static EventList getCS2101EventList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":150,"author":{"gitId":"samuelfangjw"},"content":"        Event eventPlanningMeeting \u003d new EventBuilder().withDescription(\"OP2 Planning Meeting\")","lastModifiedDate":"2021-03-17"},{"lineNumber":151,"author":{"gitId":"samuelfangjw"},"content":"                .withAtDate(encodeDate(\"17-03-2021\")).withInterval(Interval.NONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":152,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Consultation \u003d new EventBuilder().withDescription(\"OP2 Consultation\")","lastModifiedDate":"2021-03-17"},{"lineNumber":153,"author":{"gitId":"samuelfangjw"},"content":"                .withAtDate(encodeDate(\"23-03-2021\")).withInterval(Interval.NONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":154,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2ProductDemo \u003d new EventBuilder().withDescription(\"OP2 Product Demo\")","lastModifiedDate":"2021-03-17"},{"lineNumber":155,"author":{"gitId":"samuelfangjw"},"content":"                .withAtDate(encodeDate(\"06-04-2021\")).withInterval(Interval.NONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":156,"author":{"gitId":"samuelfangjw"},"content":"        Event eventOP2Pitch \u003d new EventBuilder().withDescription(\"OP2 Pitch\")","lastModifiedDate":"2021-03-17"},{"lineNumber":157,"author":{"gitId":"samuelfangjw"},"content":"                .withAtDate(encodeDate(\"09-04-2021\")).withInterval(Interval.NONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":158,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":159,"author":{"gitId":"samuelfangjw"},"content":"        EventList eventList \u003d new EventList();","lastModifiedDate":"2021-03-17"},{"lineNumber":160,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventPlanningMeeting);","lastModifiedDate":"2021-03-17"},{"lineNumber":161,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Consultation);","lastModifiedDate":"2021-03-17"},{"lineNumber":162,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2ProductDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":163,"author":{"gitId":"samuelfangjw"},"content":"        eventList.addEvent(eventOP2Pitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":164,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":165,"author":{"gitId":"samuelfangjw"},"content":"        return eventList;","lastModifiedDate":"2021-03-17"},{"lineNumber":166,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":167,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":168,"author":{"gitId":"samuelfangjw"},"content":"    private static DeadlineList getCS2101DeadlineList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":169,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlineDemo \u003d new DeadlineBuilder().withDescription(\"Product Demo Internal Deadline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":170,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"05-04-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":171,"author":{"gitId":"samuelfangjw"},"content":"        Deadline deadlinePitch \u003d new DeadlineBuilder().withDescription(\"Product Pitch Internal Deadline\")","lastModifiedDate":"2021-03-17"},{"lineNumber":172,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"08-04-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":173,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":174,"author":{"gitId":"samuelfangjw"},"content":"        DeadlineList deadlineList \u003d new DeadlineList();","lastModifiedDate":"2021-03-17"},{"lineNumber":175,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlineDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":176,"author":{"gitId":"samuelfangjw"},"content":"        deadlineList.addDeadline(deadlinePitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":177,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":178,"author":{"gitId":"samuelfangjw"},"content":"        return deadlineList;","lastModifiedDate":"2021-03-17"},{"lineNumber":179,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":180,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":181,"author":{"gitId":"samuelfangjw"},"content":"    private static TodoList getCS2101TodosList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":182,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSplitWorkload \u003d new TodoBuilder().withDescription(\"Split Workload\")","lastModifiedDate":"2021-03-17"},{"lineNumber":183,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":184,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoSlidesForPitch \u003d new TodoBuilder().withDescription(\"Do up slides for pitch\")","lastModifiedDate":"2021-03-17"},{"lineNumber":185,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":186,"author":{"gitId":"samuelfangjw"},"content":"        Todo todoVideoForDemo \u003d new TodoBuilder().withDescription(\"Do up video for demo\")","lastModifiedDate":"2021-03-17"},{"lineNumber":187,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-17"},{"lineNumber":188,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":189,"author":{"gitId":"samuelfangjw"},"content":"        TodoList todoList \u003d new TodoList();","lastModifiedDate":"2021-03-17"},{"lineNumber":190,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSplitWorkload);","lastModifiedDate":"2021-03-17"},{"lineNumber":191,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoSlidesForPitch);","lastModifiedDate":"2021-03-17"},{"lineNumber":192,"author":{"gitId":"samuelfangjw"},"content":"        todoList.addTodo(todoVideoForDemo);","lastModifiedDate":"2021-03-17"},{"lineNumber":193,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":194,"author":{"gitId":"samuelfangjw"},"content":"        return todoList;","lastModifiedDate":"2021-03-17"},{"lineNumber":195,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-17"},{"lineNumber":196,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":197,"author":{"gitId":"samuelfangjw"},"content":"    private static ParticipantList getCS2101ParticipantsList() throws DateConversionException {","lastModifiedDate":"2021-03-17"},{"lineNumber":198,"author":{"gitId":"samuelfangjw"},"content":"        Person dahn \u003d new PersonBuilder().withName(\"Dahn\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":199,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"dahn@colab.com\").withPhone(\"91234561\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":200,"author":{"gitId":"samuelfangjw"},"content":"        Person ruochen \u003d new PersonBuilder().withName(\"Ruochen\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":201,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"ruochen@colab.com\").withPhone(\"91234562\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":202,"author":{"gitId":"samuelfangjw"},"content":"        Person samuel \u003d new PersonBuilder().withName(\"Samuel\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":203,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"samuel@colab.com\").withPhone(\"91234563\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":204,"author":{"gitId":"samuelfangjw"},"content":"        Person vevek \u003d new PersonBuilder().withName(\"Vevek\").withAddress(\"1 CoLAB Road\")","lastModifiedDate":"2021-03-17"},{"lineNumber":205,"author":{"gitId":"samuelfangjw"},"content":"                .withEmail(\"vevek@colab.com\").withPhone(\"91234564\").build();","lastModifiedDate":"2021-03-17"},{"lineNumber":206,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-17"},{"lineNumber":207,"author":{"gitId":"samuelfangjw"},"content":"        ParticipantList participantList \u003d new ParticipantList();","lastModifiedDate":"2021-03-17"},{"lineNumber":208,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(dahn);","lastModifiedDate":"2021-03-17"},{"lineNumber":209,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(ruochen);","lastModifiedDate":"2021-03-17"},{"lineNumber":210,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(samuel);","lastModifiedDate":"2021-03-17"},{"lineNumber":211,"author":{"gitId":"samuelfangjw"},"content":"        participantList.addParticipant(vevek);","lastModifiedDate":"2021-03-17"},{"lineNumber":212,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-16"},{"lineNumber":213,"author":{"gitId":"samuelfangjw"},"content":"        return participantList;","lastModifiedDate":"2021-03-17"},{"lineNumber":214,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-10"},{"lineNumber":215,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-10"}],"authorContributionMap":{"vevek":1,"samuelfangjw":214}},{"path":"src/test/java/seedu/address/ui/CommandBoxTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CommandBoxHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-03-13"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains tests for the {@code CommandBox}.","lastModifiedDate":"2021-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class CommandBoxTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String COMMAND_THAT_SUCCEEDS \u003d ListContactsCommand.COMMAND_WORD;","lastModifiedDate":"2021-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String COMMAND_THAT_FAILS \u003d \"invalid command\";","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString\u003e defaultStyleOfCommandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ArrayList\u003cString\u003e errorStyleOfCommandBox;","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private CommandBoxHandle commandBoxHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(commandText -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            if (commandText.equals(COMMAND_THAT_SUCCEEDS)) {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                return new CommandResult(\"Command successful\");","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new CommandException(\"Command failed\");","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        commandBoxHandle \u003d new CommandBoxHandle(getChildNode(commandBox.getRoot(),","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                CommandBoxHandle.COMMAND_INPUT_FIELD_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(commandBox);","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        defaultStyleOfCommandBox \u003d new ArrayList\u003c\u003e(commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        errorStyleOfCommandBox \u003d new ArrayList\u003c\u003e(defaultStyleOfCommandBox);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        errorStyleOfCommandBox.add(CommandBox.ERROR_STYLE_CLASS);","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void commandBox_startingWithSuccessfulCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void commandBox_startingWithFailedCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // verify that style is changed correctly even after multiple consecutive failed commands","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertBehaviorForSuccessfulCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertBehaviorForFailedCommand();","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void commandBox_handleKeyPress() {","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.ESCAPE);","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        guiRobot.push(KeyCode.A);","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Runs a command that fails, then verifies that \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *      - the text remains \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *      - the command box\u0027s style is the same as {@code errorStyleOfCommandBox}.","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void assertBehaviorForFailedCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_FAILS);","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(COMMAND_THAT_FAILS, commandBoxHandle.getInput());","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(errorStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Runs a command that succeeds, then verifies that \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *      - the text is cleared \u003cbr\u003e","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *      - the command box\u0027s style is the same as {@code defaultStyleOfCommandBox}.","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void assertBehaviorForSuccessfulCommand() {","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        commandBoxHandle.run(COMMAND_THAT_SUCCEEDS);","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(\"\", commandBoxHandle.getInput());","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(defaultStyleOfCommandBox, commandBoxHandle.getStyleClass());","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":83,"samuelfangjw":16}},{"path":"src/test/java/seedu/address/ui/CompletableDeadlineCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysCompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableDeadlineCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.DeadlineBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code CompletableDeadlineCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableDeadlineCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean DONE \u003d true;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() throws DateConversionException {","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        // deadline is done","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadlineIsDone \u003d new DeadlineBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"18-03-2021\")).withIsDone(DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard deadlineCard \u003d new CompletableDeadlineCard(deadlineIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(deadlineCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(deadlineCard, deadlineIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        // deadline is not done","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadlineIsNotDone \u003d new DeadlineBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"                .withByDate(encodeDate(\"18-03-2021\")).withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        deadlineCard \u003d new CompletableDeadlineCard(deadlineIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(deadlineCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(deadlineCard, deadlineIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline deadline \u003d new DeadlineBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard deadlineCard \u003d new CompletableDeadlineCard(deadline, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        // same deadline, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCard copy \u003d new CompletableDeadlineCard(deadline, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(deadlineCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(deadlineCard.equals(deadlineCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        // different deadline, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadline differentDeadline \u003d new DeadlineBuilder().withDescription(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(new CompletableDeadlineCard(differentDeadline, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        // same deadline, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(deadlineCard.equals(new CompletableDeadlineCard(deadline, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code deadlineCard} displays the details of {@code expectedDeadline}","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"            CompletableDeadlineCard deadlineCard, CompletableDeadline expectedDeadline, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        CompletableDeadlineCardHandle deadlineCardHandle \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"                new CompletableDeadlineCardHandle(deadlineCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", deadlineCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysCompletableDeadline(expectedDeadline, deadlineCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":84}},{"path":"src/test/java/seedu/address/ui/CompletableTodoCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysCompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableTodoCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TodoBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code CompletableTodoCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class CompletableTodoCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean DONE \u003d true;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    private static final boolean NOT_DONE \u003d false;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // todo is done","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todoIsDone \u003d new TodoBuilder().withDescription(\"Display Test\").withIsDone(DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard todoCard \u003d new CompletableTodoCard(todoIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(todoCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(todoCard, todoIsDone, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        // todo is not done","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todoIsNotDone \u003d new TodoBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"                .withIsDone(NOT_DONE).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        todoCard \u003d new CompletableTodoCard(todoIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(todoCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(todoCard, todoIsNotDone, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo todo \u003d new TodoBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard todoCard \u003d new CompletableTodoCard(todo, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        // same todo, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCard copy \u003d new CompletableTodoCard(todo, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(todoCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(todoCard.equals(todoCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"        // different todo, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodo differentTodo \u003d new TodoBuilder().withDescription(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(new CompletableTodoCard(differentTodo, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        // same todo, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(todoCard.equals(new CompletableTodoCard(todo, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code todoCard} displays the details of {@code expectedTodo}","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"            CompletableTodoCard todoCard, CompletableTodo expectedTodo, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        CompletableTodoCardHandle todoCardHandle \u003d","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"                new CompletableTodoCardHandle(todoCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", todoCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysCompletableTodo(expectedTodo, todoCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":81}},{"path":"src/test/java/seedu/address/ui/EventCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.encodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysEvent;","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.EventCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.Interval;","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.EventBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code EventCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"public class EventCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() throws DateConversionException {","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        // event has no interval","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        Event eventNoInterval \u003d new EventBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"                .withInterval(Interval.NONE).withAtDate(encodeDate(\"12-12-2021\")).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        EventCard eventCard \u003d new EventCard(eventNoInterval, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(eventCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(eventCard, eventNoInterval, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        // event has interval","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        Event eventHasInterval \u003d new EventBuilder().withDescription(\"Display Test\")","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"                .withInterval(Interval.WEEKLY).withAtDate(encodeDate(\"12-12-2021\")).build();","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        eventCard \u003d new EventCard(eventHasInterval, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(eventCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(eventCard, eventHasInterval, 2);","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        EventCard eventCard \u003d new EventCard(event, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        // same event, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        EventCard copy \u003d new EventCard(event, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(eventCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(eventCard.equals(eventCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        // different event, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        Event differentEvent \u003d new EventBuilder().withDescription(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(new EventCard(differentEvent, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        // same event, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(eventCard.equals(new EventCard(event, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code eventCard} displays the details of {@code expectedEvent}","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(EventCard eventCard, Event expectedEvent, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        EventCardHandle eventCardHandle \u003d new EventCardHandle(eventCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", eventCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysEvent(expectedEvent, eventCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":80}},{"path":"src/test/java/seedu/address/ui/GuiUnitTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Optional;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.RegisterExtension;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import guitests.GuiRobot;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.exceptions.NodeNotFoundException;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Node;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.testutil.UiPartExtension;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A GUI unit test class for AddressBook.","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public abstract class GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // TODO: Remove this workaround after using JavaFX version 13 or above","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // This is a workaround to solve headless test failure on Windows OS","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Refer to https://github.com/javafxports/openjdk-jfx/issues/66 for more details.","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (System.getProperty(\"os.name\").toLowerCase().startsWith(\"win\")) {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            System.loadLibrary(\"WindowsCodecs\");","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @RegisterExtension","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final UiPartExtension uiPartExtension \u003d new UiPartExtension();","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    protected final GuiRobot guiRobot \u003d new GuiRobot();","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Retrieves the {@code query} node owned by the {@code rootNode}.","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param query name of the CSS selector of the node to retrieve.","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws NodeNotFoundException if no such node exists.","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    protected \u003cT extends Node\u003e T getChildNode(Node rootNode, String query) {","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Optional\u003cT\u003e node \u003d guiRobot.from(rootNode).lookup(query).tryQuery();","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return node.orElseThrow(NodeNotFoundException::new);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":31,"samuelfangjw":12}},{"path":"src/test/java/seedu/address/ui/HelpWindowTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.HelpWindowHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains tests for the {@code HelpWindow}.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class HelpWindowTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private HelpWindowHandle helpWindowHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e helpWindow \u003d new HelpWindow());","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FxToolkit.registerStage(helpWindow::getRoot);","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        helpWindowHandle \u003d new HelpWindowHandle(helpWindow.getRoot());","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void display() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        FxToolkit.showStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(HelpWindow.HELP_MESSAGE, helpWindowHandle.getHelpMessage());","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void isShowing_helpWindowIsShowing_returnsTrue() {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        guiRobot.interact(helpWindow::show);","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertTrue(helpWindow.isShowing());","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void isShowing_helpWindowIsHiding_returnsFalse() {","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(helpWindow.isShowing());","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":35,"samuelfangjw":13}},{"path":"src/test/java/seedu/address/ui/MainWindowCloseTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.HelpWindowHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.StageHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import javafx.stage.WindowEvent;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonProjectsFolderStorage;","lastModifiedDate":"2021-03-13"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Reused with from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Contains tests for closing of the {@code MainWindow}.","lastModifiedDate":"2021-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindowCloseTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private EmptyMainWindowHandle mainWindowHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Stage stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUp() throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonProjectsFolderStorage jsonProjectsFolderStorage \u003d","lastModifiedDate":"2021-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                new JsonProjectsFolderStorage(temporaryFolder.resolve(\"projects.json\"));","lastModifiedDate":"2021-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StorageManager storageManager \u003d new StorageManager(jsonAddressBookStorage, jsonProjectsFolderStorage,","lastModifiedDate":"2021-03-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                jsonUserPrefsStorage);","lastModifiedDate":"2021-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        FxToolkit.setupStage(stage -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.stage \u003d stage;","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(stage, new LogicManager(new ModelManager(), storageManager));","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            mainWindowHandle \u003d new EmptyMainWindowHandle(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            mainWindowHandle.focus();","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        FxToolkit.showStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void close_menuBarExitButton_allWindowsClosed() {","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        mainWindowHandle.clickOnMenuExitButton();","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // The application will exit when all windows are closed.","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), guiRobot.listWindows());","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void close_externalRequest_exitAppRequestEventPosted() {","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        mainWindowHandle.clickOnMenuHelpButton();","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(HelpWindowHandle.isWindowPresent());","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        mainWindowHandle.closeMainWindowExternally();","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // The application will exit when all windows are closed.","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), guiRobot.listWindows());","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * A handle for an empty {@code MainWindow}. The components in {@code MainWindow} are not initialized.","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private class EmptyMainWindowHandle extends StageHandle {","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        private EmptyMainWindowHandle(Stage stage) {","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            super(stage);","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * Closes the {@code MainWindow} by clicking on the menu bar\u0027s exit button.","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        private void clickOnMenuExitButton() {","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            guiRobot.clickOn(\"File\");","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            guiRobot.clickOn(\"Exit\");","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * Closes the {@code MainWindow} through an external request {@code MainWindow} (e.g pressing the \u0027X\u0027 button on","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * the {@code MainWindow} or closing the app through the taskbar).","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        private void closeMainWindowExternally() {","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            guiRobot.interact(() -\u003e stage.fireEvent(new WindowEvent(stage, WindowEvent.WINDOW_CLOSE_REQUEST)));","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * Opens the {@code HelpWindow} by clicking on the menu bar\u0027s help button.","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        private void clickOnMenuHelpButton() {","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            guiRobot.clickOn(\"Help\");","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            guiRobot.clickOn(\"F1\");","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":81,"samuelfangjw":25}},{"path":"src/test/java/seedu/address/ui/PersonCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysPerson;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.PersonCardHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains tests for the {@code PersonCard}.","lastModifiedDate":"2021-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // no tags","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Person personWithNoTags \u003d new PersonBuilder().withTags(new String[0]).build();","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        PersonCard personCard \u003d new PersonCard(personWithNoTags, 1);","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(personCard);","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertCardDisplay(personCard, personWithNoTags, 1);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // with tags","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personWithTags \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        personCard \u003d new PersonCard(personWithTags, 2);","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(personCard);","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCardDisplay(personCard, personWithTags, 2);","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        PersonCard personCard \u003d new PersonCard(person, 0);","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same person, same index -\u003e returns true","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        PersonCard copy \u003d new PersonCard(person, 0);","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(personCard.equals(copy));","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(personCard.equals(personCard));","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(personCard.equals(null));","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(personCard.equals(0));","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person, same index -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person differentPerson \u003d new PersonBuilder().withName(\"differentName\").build();","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(personCard.equals(new PersonCard(differentPerson, 0)));","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same person, different index -\u003e returns false","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(personCard.equals(new PersonCard(person, 1)));","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Asserts that {@code personCard} displays the details of {@code expectedPerson} correctly and matches","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code expectedId}.","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private void assertCardDisplay(PersonCard personCard, Person expectedPerson, int expectedId) {","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        PersonCardHandle personCardHandle \u003d new PersonCardHandle(personCard.getRoot());","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", personCardHandle.getId());","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCardDisplaysPerson(expectedPerson, personCardHandle);","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":64,"samuelfangjw":14}},{"path":"src/test/java/seedu/address/ui/PersonListPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static java.time.Duration.ofMillis;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTimeoutPreemptively;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersons;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysPerson;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import java.util.Collections;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.PersonCardHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.PersonListPanelHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains tests for the {@code PersonListPanel}.","lastModifiedDate":"2021-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class PersonListPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final ObservableList\u003cPerson\u003e TYPICAL_PERSONS \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            FXCollections.observableList(getTypicalPersons());","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final long CARD_CREATION_AND_DELETION_TIMEOUT \u003d 2500;","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final SimpleObjectProperty\u003cPerson\u003e selectedPerson \u003d new SimpleObjectProperty\u003c\u003e();","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanelHandle personListPanelHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        initUi(TYPICAL_PERSONS);","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c TYPICAL_PERSONS.size(); i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            personListPanelHandle.navigateToCard(TYPICAL_PERSONS.get(i));","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            Person expectedPerson \u003d TYPICAL_PERSONS.get(i);","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            PersonCardHandle actualCard \u003d personListPanelHandle.getPersonCardHandle(i);","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertCardDisplaysPerson(expectedPerson, actualCard);","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            assertEquals(Integer.toString(i + 1) + \". \", actualCard.getId());","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Verifies that creating and deleting large number of persons in {@code PersonListPanel} requires lesser than","lastModifiedDate":"2021-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code CARD_CREATION_AND_DELETION_TIMEOUT} milliseconds to execute.","lastModifiedDate":"2021-03-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void performanceTest() {","lastModifiedDate":"2021-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e backingList \u003d createBackingList(10000);","lastModifiedDate":"2021-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTimeoutPreemptively(ofMillis(CARD_CREATION_AND_DELETION_TIMEOUT), () -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            initUi(backingList);","lastModifiedDate":"2021-03-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            guiRobot.interact(backingList::clear);","lastModifiedDate":"2021-03-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }, \"Creation and deletion of person cards exceeded time limit\");","lastModifiedDate":"2021-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns a list of persons containing {@code personCount} persons that is used to populate the","lastModifiedDate":"2021-03-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code PersonListPanel}.","lastModifiedDate":"2021-03-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private ObservableList\u003cPerson\u003e createBackingList(int personCount) {","lastModifiedDate":"2021-03-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ObservableList\u003cPerson\u003e backingList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-03-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c personCount; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            Name name \u003d new Name(i + \"a\");","lastModifiedDate":"2021-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            Phone phone \u003d new Phone(\"000\");","lastModifiedDate":"2021-03-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            Email email \u003d new Email(\"a@aa\");","lastModifiedDate":"2021-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            Address address \u003d new Address(\"a\");","lastModifiedDate":"2021-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Person person \u003d new Person(name, phone, email, address, Collections.emptySet());","lastModifiedDate":"2021-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            backingList.add(person);","lastModifiedDate":"2021-03-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return backingList;","lastModifiedDate":"2021-03-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Initializes {@code personListPanelHandle} with a {@code PersonListPanel} backed by {@code backingList}.","lastModifiedDate":"2021-03-03"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Also shows the {@code Stage} that displays only {@code PersonListPanel}.","lastModifiedDate":"2021-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void initUi(ObservableList\u003cPerson\u003e backingList) {","lastModifiedDate":"2021-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        PersonListPanel personListPanel \u003d","lastModifiedDate":"2021-03-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                new PersonListPanel(backingList);","lastModifiedDate":"2021-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(personListPanel);","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        personListPanelHandle \u003d new PersonListPanelHandle(getChildNode(personListPanel.getRoot(),","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                PersonListPanelHandle.PERSON_LIST_VIEW_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":72,"samuelfangjw":24}},{"path":"src/test/java/seedu/address/ui/ProjectCardTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-18"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-18"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-03-18"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.testutil.GuiTestAssert.assertCardDisplaysProject;","lastModifiedDate":"2021-03-18"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-18"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ProjectCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.ProjectBuilder;","lastModifiedDate":"2021-03-18"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code ProjectCard}.","lastModifiedDate":"2021-03-18"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-18"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectCardTest extends GuiUnitTest {","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    public void display_success() {","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d new ProjectBuilder().withName(\"Display Test\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard projectCard \u003d new ProjectCard(project, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(projectCard);","lastModifiedDate":"2021-03-18"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplay(projectCard, project, 1);","lastModifiedDate":"2021-03-18"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-18"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    public void equals() {","lastModifiedDate":"2021-03-18"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d new ProjectBuilder().build();","lastModifiedDate":"2021-03-18"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard projectCard \u003d new ProjectCard(project, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        // same project, same index -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCard copy \u003d new ProjectCard(project, 0);","lastModifiedDate":"2021-03-18"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(projectCard.equals(copy));","lastModifiedDate":"2021-03-18"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-03-18"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertTrue(projectCard.equals(projectCard));","lastModifiedDate":"2021-03-18"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(null));","lastModifiedDate":"2021-03-18"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(0));","lastModifiedDate":"2021-03-18"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        // different project, same index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        Project differentProject \u003d new ProjectBuilder().withName(\"differentDescription\").build();","lastModifiedDate":"2021-03-18"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(new ProjectCard(differentProject, 0)));","lastModifiedDate":"2021-03-18"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"        // same project, different index -\u003e returns false","lastModifiedDate":"2021-03-18"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"        assertFalse(projectCard.equals(new ProjectCard(project, 1)));","lastModifiedDate":"2021-03-18"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code projectCard} displays the details of {@code expectedProject}","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"     * correctly and matches {@code expectedId}.","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"    private void assertCardDisplay(ProjectCard projectCard, Project expectedProject, int expectedId) {","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"        ProjectCardHandle projectCardHandle \u003d new ProjectCardHandle(projectCard.getRoot());","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"        // verify id is displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(Integer.toString(expectedId) + \". \", projectCardHandle.getId());","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"        // verify person details are displayed correctly","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"        assertCardDisplaysProject(expectedProject, projectCardHandle);","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-18"}],"authorContributionMap":{"samuelfangjw":68}},{"path":"src/test/java/seedu/address/ui/ProjectDisplayPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.ProjectDisplayPanel.OVERVIEW_TAB;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.ui.ProjectDisplayPanel.TODOS_TAB;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ProjectDisplayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.testutil.TypicalProjects;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code ProjectDisplayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"public class ProjectDisplayPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private ProjectDisplayPanelHandle projectDisplayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    void changeTab_success() throws DateConversionException {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        // Init UI","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        ProjectDisplayPanel projectDisplayPanel \u003d new ProjectDisplayPanel();","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        Project project \u003d TypicalProjects.getCS2103TProject();","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.displayProject(project);","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(projectDisplayPanel);","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanelHandle \u003d new ProjectDisplayPanelHandle(projectDisplayPanel.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"        // Switch to todos tab","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanelHandle.setTabInFocus(TODOS_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.showOverviewTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(projectDisplayPanelHandle.getTabInFocus(), OVERVIEW_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        // Switch to overview tab","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanelHandle.setTabInFocus(OVERVIEW_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        projectDisplayPanel.showTodosTab();","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(projectDisplayPanelHandle.getTabInFocus(), TODOS_TAB);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":41}},{"path":"src/test/java/seedu/address/ui/ResultDisplayTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ResultDisplayHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Reused from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains tests for the {@code ResultDisplay}.","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ResultDisplayTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private ResultDisplayHandle resultDisplayHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(resultDisplay);","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        resultDisplayHandle \u003d new ResultDisplayHandle(getChildNode(resultDisplay.getRoot(),","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                ResultDisplayHandle.RESULT_DISPLAY_ID));","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // default result text","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(\"\", resultDisplayHandle.getText());","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // new result received","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        guiRobot.interact(() -\u003e resultDisplay.setFeedbackToUser(\"Dummy feedback to user\"));","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(\"Dummy feedback to user\", resultDisplayHandle.getText());","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":31,"samuelfangjw":10}},{"path":"src/test/java/seedu/address/ui/StatusBarFooterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.StatusBarFooterHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * @@author {se-edu}-reused","lastModifiedDate":"2021-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Reused with modification from AB4 https://github.com/se-edu/addressbook-level4/","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2021-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains tests for the {@code StatusBarFooter}.","lastModifiedDate":"2021-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StatusBarFooterTest extends GuiUnitTest {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path STUB_SAVE_LOCATION \u003d Paths.get(\"Stub\");","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path RELATIVE_PATH \u003d Paths.get(\".\");","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StatusBarFooterHandle statusBarFooterHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(STUB_SAVE_LOCATION);","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        uiPartExtension.setUiPart(statusBarFooter);","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        statusBarFooterHandle \u003d new StatusBarFooterHandle(statusBarFooter.getRoot());","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void display() {","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertStatusBarContent(RELATIVE_PATH.resolve(STUB_SAVE_LOCATION).toString());","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Asserts that the save location matches that of {@code expectedSaveLocation}.","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private void assertStatusBarContent(String expectedSaveLocation) {","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedSaveLocation, statusBarFooterHandle.getSaveLocation());","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        guiRobot.pauseForHuman();","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"-":33,"samuelfangjw":13}},{"path":"src/test/java/seedu/address/ui/TodayPanelTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-03-24"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-24"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.testutil.TypicalProjects.getTypicalProjectsFolder;","lastModifiedDate":"2021-03-24"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-03-24"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-03-24"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.TodayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.commons.exceptions.DateConversionException;","lastModifiedDate":"2021-03-24"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.ReadOnlyProjectsFolder;","lastModifiedDate":"2021-03-24"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-24"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":" * Contains tests for the {@code TodayPanel}.","lastModifiedDate":"2021-03-24"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-24"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"public class TodayPanelTest extends GuiUnitTest {","lastModifiedDate":"2021-03-24"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"    private TodayPanelHandle todayPanelHandle;","lastModifiedDate":"2021-03-24"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"    @Test","lastModifiedDate":"2021-03-24"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"    public void displayDate_success() throws DateConversionException {","lastModifiedDate":"2021-03-24"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"        LocalDate date \u003d LocalDate.of(2021, 1, 1);","lastModifiedDate":"2021-03-24"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"        initUi(getTypicalProjectsFolder(), date);","lastModifiedDate":"2021-03-24"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(todayPanelHandle.getDisplayedDate(), decodeDate(date));","lastModifiedDate":"2021-03-24"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-24"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"     * Initializes {@code todayPanelHandle} with a {@code TodayPanel} backed by a {@code ReadOnlyProjectsFolder}.","lastModifiedDate":"2021-03-24"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"     *","lastModifiedDate":"2021-03-24"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"     * @param projectsFolder {@code ReadOnlyProjectsFolder} that backs the {@code TodayPanel} to be created.","lastModifiedDate":"2021-03-24"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"     * @param date {@code LocalDate} to be displayed in the UI.","lastModifiedDate":"2021-03-24"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-24"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"    private void initUi(ReadOnlyProjectsFolder projectsFolder, LocalDate date) {","lastModifiedDate":"2021-03-24"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        TodayPanel todayPanel \u003d","lastModifiedDate":"2021-03-24"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"                new TodayPanel(projectsFolder, date);","lastModifiedDate":"2021-03-24"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"        uiPartExtension.setUiPart(todayPanel);","lastModifiedDate":"2021-03-24"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-24"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"        todayPanelHandle \u003d new TodayPanelHandle(todayPanel.getRoot());","lastModifiedDate":"2021-03-24"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-24"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-24"}],"authorContributionMap":{"samuelfangjw":43}},{"path":"src/test/java/seedu/address/ui/testutil/GuiTestAssert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import static seedu.address.commons.util.DateUtil.decodeDate;","lastModifiedDate":"2021-03-18"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import java.util.List;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableDeadlineCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.CompletableTodoCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.EventCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.PersonCardHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.PersonListPanelHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ProjectCardHandle;","lastModifiedDate":"2021-03-18"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"import guitests.guihandles.ResultDisplayHandle;","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.project.Project;","lastModifiedDate":"2021-03-18"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableDeadline;","lastModifiedDate":"2021-03-18"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.CompletableTodo;","lastModifiedDate":"2021-03-18"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.model.task.repeatable.Event;","lastModifiedDate":"2021-03-18"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableDeadlineCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.CompletableTodoCard;","lastModifiedDate":"2021-03-18"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":" * A set of assertion methods useful for writing GUI tests.","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"public class GuiTestAssert {","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code actualCard} displays the same values as {@code expectedCard}.","lastModifiedDate":"2021-03-03"},{"lineNumber":30,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":31,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCardEquals(PersonCardHandle expectedCard, PersonCardHandle actualCard) {","lastModifiedDate":"2021-03-03"},{"lineNumber":32,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCard.getId(), actualCard.getId());","lastModifiedDate":"2021-03-03"},{"lineNumber":33,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCard.getAddress(), actualCard.getAddress());","lastModifiedDate":"2021-03-03"},{"lineNumber":34,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCard.getEmail(), actualCard.getEmail());","lastModifiedDate":"2021-03-03"},{"lineNumber":35,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCard.getName(), actualCard.getName());","lastModifiedDate":"2021-03-03"},{"lineNumber":36,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCard.getPhone(), actualCard.getPhone());","lastModifiedDate":"2021-03-03"},{"lineNumber":37,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCard.getTags(), actualCard.getTags());","lastModifiedDate":"2021-03-03"},{"lineNumber":38,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":39,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":40,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":41,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedPerson}.","lastModifiedDate":"2021-03-03"},{"lineNumber":42,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":43,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCardDisplaysPerson(Person expectedPerson, PersonCardHandle actualCard) {","lastModifiedDate":"2021-03-03"},{"lineNumber":44,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedPerson.getName().fullName, actualCard.getName());","lastModifiedDate":"2021-03-03"},{"lineNumber":45,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedPerson.getPhone().value, actualCard.getPhone());","lastModifiedDate":"2021-03-03"},{"lineNumber":46,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedPerson.getEmail().value, actualCard.getEmail());","lastModifiedDate":"2021-03-03"},{"lineNumber":47,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedPerson.getAddress().value, actualCard.getAddress());","lastModifiedDate":"2021-03-03"},{"lineNumber":48,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedPerson.getTags().stream().map(tag -\u003e tag.tagName).sorted().collect(Collectors.toList()),","lastModifiedDate":"2021-03-03"},{"lineNumber":49,"author":{"gitId":"samuelfangjw"},"content":"                actualCard.getTags());","lastModifiedDate":"2021-03-03"},{"lineNumber":50,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":51,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":52,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":53,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedCompletableDeadline}.","lastModifiedDate":"2021-03-18"},{"lineNumber":54,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":55,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCardDisplaysCompletableDeadline(","lastModifiedDate":"2021-03-18"},{"lineNumber":56,"author":{"gitId":"samuelfangjw"},"content":"            CompletableDeadline expectedDeadline, CompletableDeadlineCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":57,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedDeadline.getDescription(), actualCard.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":58,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(decodeDate(expectedDeadline.getBy()), actualCard.getDate());","lastModifiedDate":"2021-03-18"},{"lineNumber":59,"author":{"gitId":"samuelfangjw"},"content":"        String expectedCompletedText \u003d CompletableDeadlineCard","lastModifiedDate":"2021-03-18"},{"lineNumber":60,"author":{"gitId":"samuelfangjw"},"content":"                .getTextToDisplay(expectedDeadline.getIsDone());","lastModifiedDate":"2021-03-18"},{"lineNumber":61,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCompletedText, actualCard.getCompleted());","lastModifiedDate":"2021-03-18"},{"lineNumber":62,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":63,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":64,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":65,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedCompletableTodo}.","lastModifiedDate":"2021-03-18"},{"lineNumber":66,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":67,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCardDisplaysCompletableTodo(","lastModifiedDate":"2021-03-18"},{"lineNumber":68,"author":{"gitId":"samuelfangjw"},"content":"            CompletableTodo expectedTodo, CompletableTodoCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":69,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedTodo.getDescription(), actualCard.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":70,"author":{"gitId":"samuelfangjw"},"content":"        String expectedCompletedText \u003d CompletableTodoCard","lastModifiedDate":"2021-03-18"},{"lineNumber":71,"author":{"gitId":"samuelfangjw"},"content":"                .getTextToDisplay(expectedTodo.getIsDone());","lastModifiedDate":"2021-03-18"},{"lineNumber":72,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedCompletedText, actualCard.getCompleted());","lastModifiedDate":"2021-03-18"},{"lineNumber":73,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":74,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":75,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":76,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedEvent}.","lastModifiedDate":"2021-03-18"},{"lineNumber":77,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":78,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCardDisplaysEvent(Event expectedEvent, EventCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":79,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedEvent.getDescription(), actualCard.getDescription());","lastModifiedDate":"2021-03-18"},{"lineNumber":80,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedEvent.getRecurrence().toString(), actualCard.getInteval());","lastModifiedDate":"2021-03-18"},{"lineNumber":81,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(decodeDate(expectedEvent.getAt()), actualCard.getDate());","lastModifiedDate":"2021-03-18"},{"lineNumber":82,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":83,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":84,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-18"},{"lineNumber":85,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that {@code actualCard} displays the details of {@code expectedProject}.","lastModifiedDate":"2021-03-18"},{"lineNumber":86,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-18"},{"lineNumber":87,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertCardDisplaysProject(Project expectedProject, ProjectCardHandle actualCard) {","lastModifiedDate":"2021-03-18"},{"lineNumber":88,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expectedProject.getProjectName().toString(), actualCard.getName());","lastModifiedDate":"2021-03-18"},{"lineNumber":89,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-18"},{"lineNumber":90,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-18"},{"lineNumber":91,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":92,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","lastModifiedDate":"2021-03-03"},{"lineNumber":93,"author":{"gitId":"samuelfangjw"},"content":"     * in the correct order.","lastModifiedDate":"2021-03-03"},{"lineNumber":94,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":95,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, Person... persons) {","lastModifiedDate":"2021-03-03"},{"lineNumber":96,"author":{"gitId":"samuelfangjw"},"content":"        for (int i \u003d 0; i \u003c persons.length; i++) {","lastModifiedDate":"2021-03-03"},{"lineNumber":97,"author":{"gitId":"samuelfangjw"},"content":"            personListPanelHandle.navigateToCard(i);","lastModifiedDate":"2021-03-03"},{"lineNumber":98,"author":{"gitId":"samuelfangjw"},"content":"            assertCardDisplaysPerson(persons[i], personListPanelHandle.getPersonCardHandle(i));","lastModifiedDate":"2021-03-03"},{"lineNumber":99,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":100,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":101,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":102,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":103,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts that the list in {@code personListPanelHandle} displays the details of {@code persons} correctly and","lastModifiedDate":"2021-03-03"},{"lineNumber":104,"author":{"gitId":"samuelfangjw"},"content":"     * in the correct order.","lastModifiedDate":"2021-03-03"},{"lineNumber":105,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":106,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertListMatching(PersonListPanelHandle personListPanelHandle, List\u003cPerson\u003e persons) {","lastModifiedDate":"2021-03-03"},{"lineNumber":107,"author":{"gitId":"samuelfangjw"},"content":"        assertListMatching(personListPanelHandle, persons.toArray(new Person[0]));","lastModifiedDate":"2021-03-03"},{"lineNumber":108,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":109,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":110,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":111,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts the size of the list in {@code personListPanelHandle} equals to {@code size}.","lastModifiedDate":"2021-03-03"},{"lineNumber":112,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":113,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertListSize(PersonListPanelHandle personListPanelHandle, int size) {","lastModifiedDate":"2021-03-03"},{"lineNumber":114,"author":{"gitId":"samuelfangjw"},"content":"        int numberOfPeople \u003d personListPanelHandle.getListSize();","lastModifiedDate":"2021-03-03"},{"lineNumber":115,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(size, numberOfPeople);","lastModifiedDate":"2021-03-03"},{"lineNumber":116,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":117,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":118,"author":{"gitId":"samuelfangjw"},"content":"    /**","lastModifiedDate":"2021-03-03"},{"lineNumber":119,"author":{"gitId":"samuelfangjw"},"content":"     * Asserts the message shown in {@code resultDisplayHandle} equals to {@code expected}.","lastModifiedDate":"2021-03-03"},{"lineNumber":120,"author":{"gitId":"samuelfangjw"},"content":"     */","lastModifiedDate":"2021-03-03"},{"lineNumber":121,"author":{"gitId":"samuelfangjw"},"content":"    public static void assertResultMessage(ResultDisplayHandle resultDisplayHandle, String expected) {","lastModifiedDate":"2021-03-03"},{"lineNumber":122,"author":{"gitId":"samuelfangjw"},"content":"        assertEquals(expected, resultDisplayHandle.getText());","lastModifiedDate":"2021-03-03"},{"lineNumber":123,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":124,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"samuelfangjw":124}},{"path":"src/test/java/seedu/address/ui/testutil/StageExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.AfterEachCallback;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.BeforeEachCallback;","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.junit.jupiter.api.extension.ExtensionContext;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":" * Properly sets up and tears down a JavaFx stage for our testing purposes.","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"public class StageExtension implements BeforeEachCallback, AfterEachCallback {","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":"    public void beforeEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"        FxToolkit.registerPrimaryStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    @Override","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"    public void afterEach(ExtensionContext context) throws Exception {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"        FxToolkit.cleanupStages();","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"samuelfangjw":21}},{"path":"src/test/java/seedu/address/ui/testutil/UiPartExtension.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"samuelfangjw"},"content":"package seedu.address.ui.testutil;","lastModifiedDate":"2021-03-03"},{"lineNumber":2,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":3,"author":{"gitId":"samuelfangjw"},"content":"import java.util.concurrent.TimeoutException;","lastModifiedDate":"2021-03-03"},{"lineNumber":4,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":5,"author":{"gitId":"samuelfangjw"},"content":"import org.testfx.api.FxToolkit;","lastModifiedDate":"2021-03-03"},{"lineNumber":6,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":7,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Parent;","lastModifiedDate":"2021-03-03"},{"lineNumber":8,"author":{"gitId":"samuelfangjw"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2021-03-03"},{"lineNumber":9,"author":{"gitId":"samuelfangjw"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2021-03-03"},{"lineNumber":10,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":11,"author":{"gitId":"samuelfangjw"},"content":"/**","lastModifiedDate":"2021-03-03"},{"lineNumber":12,"author":{"gitId":"samuelfangjw"},"content":" * Provides an isolated stage to test an individual {@code UiPart}.","lastModifiedDate":"2021-03-03"},{"lineNumber":13,"author":{"gitId":"samuelfangjw"},"content":" */","lastModifiedDate":"2021-03-03"},{"lineNumber":14,"author":{"gitId":"samuelfangjw"},"content":"public class UiPartExtension extends StageExtension {","lastModifiedDate":"2021-03-03"},{"lineNumber":15,"author":{"gitId":"samuelfangjw"},"content":"    private static final String[] CSS_FILES \u003d {\"view/DarkTheme.css\", \"view/Extensions.css\"};","lastModifiedDate":"2021-03-03"},{"lineNumber":16,"author":{"gitId":"samuelfangjw"},"content":"","lastModifiedDate":"2021-03-03"},{"lineNumber":17,"author":{"gitId":"samuelfangjw"},"content":"    public void setUiPart(final UiPart\u003c? extends Parent\u003e uiPart) {","lastModifiedDate":"2021-03-03"},{"lineNumber":18,"author":{"gitId":"samuelfangjw"},"content":"        try {","lastModifiedDate":"2021-03-03"},{"lineNumber":19,"author":{"gitId":"samuelfangjw"},"content":"            FxToolkit.setupScene(() -\u003e {","lastModifiedDate":"2021-03-03"},{"lineNumber":20,"author":{"gitId":"samuelfangjw"},"content":"                Scene scene \u003d new Scene(uiPart.getRoot());","lastModifiedDate":"2021-03-03"},{"lineNumber":21,"author":{"gitId":"samuelfangjw"},"content":"                scene.getStylesheets().setAll(CSS_FILES);","lastModifiedDate":"2021-03-03"},{"lineNumber":22,"author":{"gitId":"samuelfangjw"},"content":"                return scene;","lastModifiedDate":"2021-03-03"},{"lineNumber":23,"author":{"gitId":"samuelfangjw"},"content":"            });","lastModifiedDate":"2021-03-03"},{"lineNumber":24,"author":{"gitId":"samuelfangjw"},"content":"            FxToolkit.showStage();","lastModifiedDate":"2021-03-03"},{"lineNumber":25,"author":{"gitId":"samuelfangjw"},"content":"        } catch (TimeoutException te) {","lastModifiedDate":"2021-03-03"},{"lineNumber":26,"author":{"gitId":"samuelfangjw"},"content":"            throw new AssertionError(\"Timeout should not happen.\", te);","lastModifiedDate":"2021-03-03"},{"lineNumber":27,"author":{"gitId":"samuelfangjw"},"content":"        }","lastModifiedDate":"2021-03-03"},{"lineNumber":28,"author":{"gitId":"samuelfangjw"},"content":"    }","lastModifiedDate":"2021-03-03"},{"lineNumber":29,"author":{"gitId":"samuelfangjw"},"content":"}","lastModifiedDate":"2021-03-03"}],"authorContributionMap":{"samuelfangjw":29}}]
